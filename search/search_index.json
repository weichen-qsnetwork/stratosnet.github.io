{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"<p>Stratos Network</p> <p>- The Next Generation of \u200d\u200dDecentralized Data Mesh -</p> <p></p> <p>SDS &amp; Stratos-chainOfficial Documentation</p> <p></p>"},{"location":"#quick-start","title":"Quick Start","text":"Description Link About Stratos and Whitepaper Link HOWTO: Setup a Full-Chain node Link HOWTO: Become a Validator Link HOWTO: Setup a SDS Resource node Link Full-Chain (Validator) node commands part 1 Link Full-Chain (Validator) node commands part 2 Link SDS Resource node commands Link Address Convert Tool Link"},{"location":"#contribution","title":"Contribution","text":"<p>Thank you for considering to help out with the source code! We welcome contributions from anyone on the internet, and are grateful for even the smallest of fixes! <p>If you'd like to contribute to SDS(Stratos Decentralized Storage), please fork, fix, commit and send a pull request for the maintainers to review and merge into the main code base.</p> <p>Please make sure your contributions adhere to our coding guidelines:</p> <ul> <li>Code must adhere to the official Go formatting   guidelines (i.e. uses gofmt).</li> <li>Code must be documented adhering to the official Go commentary   guidelines.</li> <li>Pull requests need to be based on and opened against the <code>dev</code> branch, PR name should follow <code>conventional commits</code>.</li> <li>Commit messages should be prefixed with the package(s) they modify. e.g. \"pp: make trace configs optional\"</li> </ul> <p> </p>"},{"location":"#license","title":"License","text":"<p>Copyright 2023 Stratos <p>Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License.</p> <p>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.</p> <p></p>"},{"location":"get-started/","title":"Stratos Network Documentation","text":"<ul> <li> <p>Stratos is a decentralized data mesh for blockchain, it defines the next generation of decentralized computing services that can serve dAPPs, allowing smart contract developers to use decentralized infrastructure to deploy, store and execute their code and data.</p> </li> <li> <p>The core objective of Stratos is to establish a distributed network ecosystem encompassing infrastructure providers, middleware developers, and dApp creators. </p> </li> <li> <p>This collaboration is driven by shared development, value-sharing, and efficient dedication to providing dependable, cost-effective applications, fostering the thriving landscape of blockchain applications. </p> </li> <li> <p>Stratos is committed to creating an unassailable environment for all dApps, ensuring the durability and reliability of applications.</p> </li> <li> <p>We will continuously update this page as new features are introduced.</p> </li> </ul> <p></p>"},{"location":"get-started/#quick-links","title":"Quick Links","text":"Quick Links URL About Stratos and Whitepaper Link Updates Link HOWTO: Setup a Full-Chain node Link HOWTO: Become a Validator Link HOWTO: Setup a SDS Resource node Link Full-Chain (Validator) node commands part 1 Link Full-Chain (Validator) node commands part 2 Link SDS Resource node commands Link Address Convert Tool Link"},{"location":"get-started/#contribution","title":"Contribution","text":"Contribution <p>Thank you for considering to help out with the source code! We welcome contributions from anyone on the internet, and are grateful for even the smallest of fixes! <p>If you'd like to contribute to SDS(Stratos Decentralized Storage), please fork, fix, commit and send a pull request for the maintainers to review and merge into the main code base.</p> <p>Please make sure your contributions adhere to our coding guidelines:</p> <ul> <li>Code must adhere to the official Go formatting   guidelines (i.e. uses gofmt).</li> <li>Code must be documented adhering to the official Go commentary   guidelines.</li> <li>Pull requests need to be based on and opened against the <code>dev</code> branch, PR name should follow <code>conventional commits</code>.</li> <li>Commit messages should be prefixed with the package(s) they modify. e.g. \"pp: make trace configs optional\"</li> </ul> <p> </p>"},{"location":"get-started/#license","title":"License","text":"License <p>Copyright 2023 Stratos <p>Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License.</p> <p>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.</p> <p></p>"},{"location":"docs-about/about-stratos/","title":"About Stratos Project and Whitepaper","text":""},{"location":"docs-about/about-stratos/#what-is-stratos","title":"What is Stratos ?","text":"<p>Stratos is a large-scale distributed infrastructure network designed to provide a comprehensive set of resources, including computation, storage, and network traffic, all in one platform. It leverages Proof-of-Traffic algorithms to reward participants and contributors based on their contributions to the network's traffic. Additionally, Stratos utilizes its own blockchain to measure the usage of computing resources, while incorporating the Practical Byzantine Fault-Tolerant consensus algorithm (PBFT) to integrate the network Proof-of-Traffic consensus algorithm deeply. This enables Stratos to provide settlement services and financial payment services for network providers and users in a highly efficient, fair, and transparent manner.</p> <p>The primary goal of Stratos is to serve as a decentralized data mesh for blockchain applications. It seeks to define the next generation of decentralized computing services, catering to Dapp (Decentralized Application) developers like those working on projects such as Uniswap, AAVE, and NFT Dapps. By using Stratos, developers can deploy, store, and execute their code and data on decentralized infrastructure, thereby eliminating the need for complex network deployment. This allows developers to focus solely on their product's business logic without having to worry about the underlying infrastructure, leading to more effective development and lower costs.</p> <p>In essence, Stratos aims to establish a distributed network ecosystem that brings together infrastructure providers, middleware developers, and Dapp developers. This collaborative environment encourages shared value creation and efficient cooperation to deliver credible, reliable, and cost-effective applications for the prosperity of blockchain-based solutions. One of Stratos' main promises is to offer an indestructible environment for all Dapps, ensuring that no one can take down applications hosted on the platform. This enhanced resilience and reliability foster a robust ecosystem for blockchain applications to thrive.</p>"},{"location":"docs-about/about-stratos/#the-meaning-of-stratos","title":"The Meaning of \u2018Stratos\u2019","text":"<p>The name 'Stratos' is derived from the term 'stratosphere', an atmospheric layer encircling the Earth. Positioned approximately 10 kilometers above the Earth's surface (8 kilometers at the poles) and extending up to around 50 kilometers altitude, the stratosphere embodies distinct climatic attributes. Characterized by predominantly horizontal air currents and minimal vertical air movement, it fosters atmospheric stability and lacks substantial vertical convection.</p> <p>In the context of decentralized services, 'Stratos' assumes a role akin to that of the stratosphere in relation to the Earth's blockchain ecosystem. It functions as a surrounding infrastructure, furnishing decentralized storage, decentralized databases, and decentralized computing services to blockchain applications. Drawing a parallel between the two, Stratos envelops the blockchain realm, providing an analogous environment of resourceful support.</p>"},{"location":"docs-about/about-stratos/#the-significance-of-decentralization","title":"The Significance of Decentralization","text":"<p>When compared to centralization, decentralization brings forth two pivotal distinctions: Equal Rights and Data Ownership. In a decentralized framework, all participants enjoy equal rights, and data ownership rests with the creators rather than the system's proprietors. A case in point is the centralized system provided by Google, offering services such as customer support, information retrieval, online storage, and email. While ostensibly free, the true cost resides in personal data. Google exploits this data for commercial gains.</p> <p>Decentralization, as exemplified by blockchain, ensures parity in rights and ownership of data. Each node within the blockchain network maintains equal rights, although nodes with greater computational prowess or those engaged in staking hold higher prospects for block generation. The blockchain's ledger data is accessible to the public; however, in stark contrast to centralized networks, sole verification authority over key data remains vested in the private key's possessor, resistant to external intervention.</p> <p>An alternate perspective emerges by inquiring: Is decentralization synonymous with blockchain? This inquiry merits a nuanced technical delineation. A blockchain serves as a network where multiple nodes partake asynchronously via consensus mechanisms. Data across these nodes synchronizes within fixed time intervals, culminating in consensus. While a blockchain exemplifies an accomplished instantiation of decentralization, it certainly is not the sole solution. Some decentralized initiatives incorporate blockchain into their design despite business requirements that don't necessitate it, courting potential failure.</p> <p>\"Stratos, as a decentralized infrastructure, is poised to expedite the advent of the new Era of Decentralization. Stratos aspires to emulate the significance of Bitcoin in 2010, which heralded the blockchain's ascendancy, and the impact of Ethereum's smart contracts in 2015, fostering blockchain's prosperity. Stratos is poised to become the bedrock of the Era of Decentralization, underpinning decentralized service infrastructure and enriching the blockchain landscape. Analogous to providing air, water, and sunlight to a system, Stratos cultivates a stable, flourishing, and sustainable ecosystem within the stratosphere.\"</p> <p>A blockchain's system design, inaugurated with Bitcoin's advent, has been extensively validated. Varied implementations of public chains have affirmed its aptitude for provisioning public ledgers and smart contract services atop these ledgers. However, it's imperative to recognize that the blockchain's design is inapplicable to every decentralized service initiative.</p> <p>Therefore, blockchain encapsulates but a fraction of decentralization's potential applications. As a provider of decentralized service infrastructure, Stratos amalgamates diverse decentralized components, transcending the limitations of a blockchain alone. Stratos stands as the quintessential infrastructure of the blockchain industry, offering a comprehensive suite of services to the entire blockchain domain, dissociated from single-chain affiliations and distinct from being a mere adjunct to a public chain ecosystem.</p> <p>Since the inception of the blockchain sector in 2010, endeavors have been aimed at catalyzing its integration within traditional industries. However, as a blockchain primarily furnishes public ledger services, its impact on industries devoid of ledger-based requisites has been limited. Simultaneously, the booming token economy within the blockchain industry has led to misconceptions, causing external observers to perceive a lack of practical value in decentralized systems due to limited application in traditional industries. This perception neglects that decentralized systems' potential utility extends to these sectors, albeit current offerings inadequately address their needs.</p> <p>Stratos' decentralized service infrastructure, meticulously designed and developed, is not restricted to the blockchain domain; it was envisioned to better serve centralized traditional industries. Stratos is poised to commercialize decentralized services, enhancing the infrastructure and services available to both decentralized and centralized businesses, while fostering efficiency, security, and stability in the provision of decentralized systems.</p>"},{"location":"docs-about/about-stratos/#stratos-past-and-present","title":"Stratos Past And Present","text":"<p>The Stratos Team is comprised of a group of skilled developers who have achieved excellence in their respective field. These professionals have garnered their expertise through their employment at well-known companies such as Canadian National Railways, Amazon, Expedia, Alibaba, and other reputable organizations. Each team member contributes a wealth of top-level skills in enterprise-level development.</p> <p>A notable aspect of the team is its substantial representation from Mindgeek, a major Internet company that ranks among the top 10 in terms of website traffic. Throughout Stratos' CEO Bin Zhu's 7-year tenure at Mindgeek, he led the Cloud team, overseeing the creation and advancement of a data platform from its inception. This platform efficiently manages millions of data records per second and handles the processing of hundreds of billions of records daily. Globally, this data platform offers diverse data services to more than 100 million users each day. This history of establishing a comprehensive data network constitutes the cornerstone of Stratos, equipping it with the indispensable elements required to achieve substantial commercial applications right from the outset.</p> <p>Leveraging a wealth of practical experience and insights derived from the Google GFS and Hadoop HDFS architectural models, the team has expanded the realm of distributed storage to encompass solutions for decentralized storage. The Stratos Decentralized Storage is equipped with an integrated high-performance storage module, exemplifying the fusion of hands-on experience and robust architectural principles.</p>"},{"location":"docs-about/about-stratos/#stratos-components","title":"Stratos Components","text":"<p>Stratos services consist of four core modules: blockchain, decentralized storage, decentralized databases, and decentralized computing. Just like Earth relies on air, water, soil, and sunlight, these four elements are crucial for creating the right conditions to foster growth. Various combinations of these modules also offer diverse decentralized services for both the blockchain and traditional industries.</p> <p>Now, let's dive into the three layers: value, resource, and meta service. Picture them as levels, each with its own way of agreeing on things. The value layer uses Proof-of-Stake (PoS) agreement, the resource layer uses Proof-of-Traffic (PoT), and the meta service layer uses Proof-of-Authority (PoA).</p> <p>This is an innovative solution to tackle the challenge of decentralization commonly referred to as the blockchain trilemma. Here's what each layer does:</p> <ol> <li> <p>PoA is the closest to centralization. It keeps the meta service layer efficient, even when decentralized.</p> </li> <li> <p>PoS ensures the value layer is secure and strong.</p> </li> <li> <p>PoT is a fully decentralized way to agree on things. It lets the resource layer grow endlessly, so more resources can join the Stratos network.</p> </li> </ol> <p>Also, these three layers are like three types of nodes. Miners can pick the one that suits their hardware and needs to join the Stratos network.</p> <p>To put it simply, Stratos has four modules spread across three layers, with different ways of agreeing. This forms a sturdy structure for the Stratos network, giving users stable, reliable, and efficient decentralized services.</p>"},{"location":"docs-about/about-stratos/#whitepaper","title":"Whitepaper","text":"<p>You can find all the technical details in the Stratos Whitepaper.</p> <p></p> <p></p>"},{"location":"docs-about/changes/","title":"Stratos Network Changes","text":""},{"location":"docs-about/changes/#sep-1-2023-updates","title":"Sep 1, 2023 Updates","text":"<pre><code>+ SDS Resource Node IP Update Issues\n+ SDS Video Stream File Over Limit Issue\n+ SDS Resource Node Multi-Terminal Log Issue\n+ SDS RPC Request Time Issue\n+ SDS Memory Allocation Enhancement\n\n! This will be the final technical bi-weekly report\n! Next monthly updates will focus on business development and building the Stratos Ecosystem\n</code></pre>"},{"location":"docs-about/changes/#aug-18-2023-updates","title":"Aug 18, 2023 Updates","text":"<pre><code>+ Stratos Chain Desktop Wallet Update\n+ Stratos Chain Explorer Voting Power Fix\n+ Stratos Chain EVM Explorer Transaction History Fix\n+ SDS Documents Update\n+ SDS Stream File Hash Mismatch Issue Fix\n+ SDS Terminal Config Command Issue Fix\n+ New Website Design\n</code></pre>"},{"location":"docs-about/changes/#aug-4-2023-updates","title":"Aug 4, 2023 Updates","text":"<pre><code>+ Mesos Testnet Deployment\n+ Stratos Chain Ledger Support\n+ Stratos Chain Documents update\n+ Devnet Intensive Testing\n</code></pre>"},{"location":"docs-about/changes/#jul-21-2023-updates","title":"Jul 21, 2023 Updates","text":"<pre><code>+ Stratos Chain SDK update\n+ Stratos Chain Revert Special changes for Tropos\n+ SDS RPC Timeout Refactor(status checking)\n</code></pre>"},{"location":"docs-about/changes/#jul-7-2023-updates","title":"Jul 7, 2023 Updates","text":"<pre><code>+ SDS RPC Timeout Refactor(Uploading)\n+ SDS Resource Node Connection issue\n+ SDS Metanode Connection Issue\n</code></pre>"},{"location":"docs-about/changes/#jun-22-2023-updates","title":"Jun 22, 2023 Updates","text":"<pre><code>+ Stratos Chain Bridge Security Issue Fixes based on Auditing Feedback (7/7)\n+ SDS Light Node Implementation\n+ SDS Node Monitor Integration\n+ SDS Configuration Improvement\n+ SDS Video Streaming Improvement\n+ SDS SDK (file sharing)\n</code></pre>"},{"location":"docs-about/changes/#may-26-2023-updates","title":"May 26, 2023 Updates","text":"<pre><code>+ Stratos Chain Security Issue Fixes based on Auditing Feedback(23/24)\n+ SDS Security Issue Fixes based on Auditing Feedback(11/11)\n+ Stratos Chain Mainnet Migration Bridge(UI)\n+ SDS RPC Spam Protection Issue Fix\n+ SDS Node Status Report Issue Fix\n+ Metanode Memory Leak issue\n+ Metanode Tier Based Task Assignment(improving)\n</code></pre>"},{"location":"docs-about/changes/#may-12-2023-updates","title":"May 12, 2023 Updates","text":"<pre><code>+ Stratos Chain Issue Fixes based on Auditing Feedback(17/24)\n+ SDS Issue Fixes based on Auditing Feedback(9/9)\n+ Stratos Chain Docker Image\n+ Stratos Bridge Token Supply Limitation\n+ SDS Resource Node Usage Metrics Fixes\n+ SDS Resource Node Docker Image\n</code></pre>"},{"location":"docs-about/changes/#apr-28-2023-updates","title":"Apr 28, 2023 Updates","text":"<pre><code>+ Stratos Chain Issue Fixes based on Auditing Feedback(17/17)\n+ SDS Issue Fixes based on Auditing Feedback(9/9)\n+ SDS and Metanode Delayed Memory Release Issue\n</code></pre>"},{"location":"docs-about/changes/#apr-14-2023-updates","title":"Apr 14, 2023 Updates","text":"<pre><code>+ Stratos Chain Issue Fixes based on Auditing Feedback(15/17)\n+ SDS Framework Buffer Memory Allocation Improvement\n+ SDS Issue Fixes based on Auditing Feedback(1/7)\n+ Metanode Tier-Based Task Assignment(implementation)\n</code></pre>"},{"location":"docs-about/changes/#mar-30-2023-updates","title":"Mar 30, 2023 Updates","text":"<pre><code>+ Stratos Chain Tropos Reward TROS Conversion Tool\n+ Stratos Chain Genesis Account Migration(UI)\n+ Stratos Chain SDK Update\n+ SDS Requests Signature Improvement(download)\n+ SDS Support Uploading Folder\n+ SDS RPC Support Node Operation\n+ Metanode Transfer Task Issue Fix\n+ Metanode Tasks Signature Improvement\n+ Stratos Wallet Support Prepay Tx\n</code></pre>"},{"location":"docs-about/changes/#mar-17-2023-updates","title":"Mar 17, 2023 Updates","text":"<pre><code>+ Stratos Chain gRPC Update\n+ Stratos Chain Genesis Account Migration(burn contract)\n+ SDS gRPC usage update\n+ SDS API Server compatible with IPFS\n+ Relayer gRPC usage update\n+ SDS optimal Metanode selection mechanism improvement\n+ SDS Requests Signature Improvement(upload/report)\n+ Metanode Unindex File by Community Vote\n+ Metanode API for Network Metrics\n</code></pre>"},{"location":"docs-about/changes/#mar-3-2023-updates","title":"Mar 3, 2023 Updates","text":"<pre><code>+ Stratos Chain Legacy Encoding Update\n+ Stratos EVM Ecosystem Registration\n+ Stratos EVM Transaction Mempool Improvement\n+ SDS Node IP Lock Issue Fix\n+ SDS RPC Performance Improvement(uploading queue)\n+ SDS RPC Client Demo\n+ Ozone Supply changes based on SDS Node Tier\n</code></pre>"},{"location":"docs-about/changes/#feb-2-2023-updates","title":"Feb 2, 2023 Updates","text":"<pre><code>+ Stratos Chain Command Tool fixes\n+ Stratos Chain Web3 API WebSocket Refactor\n+ Stratos Chain Query Pagination improvement\n+ SDS Configuration Improvement\n+ SDS Support IPFS Migration\n+ SDS State Machine Refactor\n+ Metanode Relayer Improvement(configuration)\n</code></pre>"},{"location":"docs-about/changes/#jan-20-2023-updates","title":"Jan 20, 2023 Updates","text":"<pre><code>+ Stratos Chain memory leak Issue\n+ Stratos Chain Account Compatibility issue (Wallet convert)\n+ Stratos Chain Ozone Price Fixes\n+ SDS Connection Stability Issue\n+ SDS RPC Performance Enhancement(memory overflow)\n+ Tropos-5 Launch preparation\n</code></pre>"},{"location":"docs-about/changes/#dec-22-2022-updates","title":"Dec 22, 2022 Updates","text":"<pre><code>+ Stratos Chain Account Compatibility issue (SDS account convert, Explorer)\n+ Stratos Chain Tx Minimal Gas Price\n+ SDS Auto-Scaling Replication (scale-down test)\n+ SDS Resource Node Maintenance Request(testing)\n+ Metanode API Improvement(testing)\n</code></pre>"},{"location":"docs-about/changes/#dec-8-2022-updates","title":"Dec 8, 2022 Updates","text":"<pre><code>+ Stratos Chain Account Compatibility issue (Tropos reward convert)\n+ SDS Auto-Scaling Replication (scale-down implementation)\n+ SDS Suspended Node Data Transfer Mechanism(Improvement)\n+ Metanode API Improvement(Implementation)\n+ Metanode Backup Task Improvement\n</code></pre>"},{"location":"docs-about/changes/#nov-25-2022-updates","title":"Nov 25, 2022 Updates","text":"<pre><code>+ Stratos Chain Faucet Adapt STOS Decimal changes\n+ Stratos Chain Account Compatibility(Stratos Chain Changes)\n+ SDS Resource Node Maintenance Request(Implementation)\n+ SDS Resource Node legacy API cleanup\n+ Metanode configuration cleanup\n+ Metanode File/Slice Indexing Improvement(Implementation)\n+ Monitoring dashboard UI\n</code></pre>"},{"location":"docs-about/changes/#oct-28-2022-updates","title":"Oct 28, 2022 Updates","text":"<pre><code>+ Stratos Chain Token Denom Decimal Adjustment\n+ SDS Suspended Node Data Transfer Mechanism(implementation)\n+ SDS P2P Network Connection Improvement(implementation)\n+ SDS Log and Error Improvement\n+ SDS Auto-Scaling Replication(scale-up)\n</code></pre>"},{"location":"docs-about/changes/#oct-13-2022-updates","title":"Oct 13, 2022 Updates","text":"<pre><code>+ Stratos Desktop Wallet Update(issue fix)\n+ SDS Resource Node Monitor API update\n+ SDS Resource Node Performance Metrics API\n+ SDS Terminal log issue fix\n+ SDS Metanode panic issue fix\n</code></pre>"},{"location":"docs-about/changes/#sep-30-2022-updates","title":"Sep 30, 2022 Updates","text":"<pre><code>+ SDS Node Performance Tracking (data transferring speed)\n+ SDS Node Performance Tracking (disk usage)\n+ SDS RPC Deadlock Issue\n+ Metanode Tasks Schema Update\n+ Metanode Configuration Improvement\n+ File Replication Destination Selection Improvement\n+ Stratos Desktop Wallet Update(Windows)\n</code></pre>"},{"location":"docs-about/changes/#sep-18-2022-updates","title":"Sep 18, 2022 Updates","text":"<pre><code>+ Stratos Chain Community Tax for traffic\n+ Stratos Chain EVM support(Document)\n+ Stratos Desktop Wallet Update(Mac, Linux)\n+ SDS RPC Signature Schema improvement\n+ SDS new resources node replication task\n</code></pre>"},{"location":"docs-about/changes/#sep-2-2022-updates","title":"Sep 2, 2022 Updates","text":"<pre><code>+ Stratos Chain EVM support(testing)\n+ Stratos Chain Volume Report performance improvement\n+ Stratos Chain Resource Node Registering Lock\n+ SDS Uploading Destination Retry\n+ SDS Terminal Log Improvement\n</code></pre>"},{"location":"docs-about/changes/#aug-18-2022-updates","title":"Aug 18, 2022 Updates","text":"<pre><code>+ Metanode performance improvements (memory leaks)\n+ Monitoring dashboard (Authentication)\n+ Stratos Chain SDK mobile encoding/decoding enhancement\n+ Metanode Prometheus metrics\n+ Stratos Chain Tx missing error type\n</code></pre>"},{"location":"docs-about/changes/#aug-1-2022-updates","title":"Aug 1, 2022 Updates","text":"<pre><code>+ Tropos-4 Launch\n+ Stratos Chain Explorer update\n+ Stratos Chain EVM (Tx override)\n+ SDS RPC &amp; SDK (Ozone balance)\n+ SDS Monitor Dashboard (Metrics API)\n</code></pre>"},{"location":"docs-about/changes/#jul-15-2022-updates","title":"Jul 15, 2022 Updates","text":"<pre><code>+ SDS RPC &amp; SDK (File list &amp; File sharing)\n+ Metanode adapts Stratos Chain updates\n+ Stratos Desktop Wallet update\n</code></pre>"},{"location":"docs-about/changes/#jul-1-2022-updates","title":"Jul 1, 2022 Updates","text":"<pre><code>+ Stratos Chain Rest/RPC Upgrade\n+ Stratos Chain Upgrade(testing)\n+ SDS RPC(downloading)\n+ SDS adapts Stratos Chain updates\n+ Metanode adapts Stratos Chain updates\n</code></pre>"},{"location":"docs-about/changes/#jun-18-2022-updates","title":"Jun 18, 2022 Updates","text":"<pre><code>+ Stratos Chain performance improvement\n+ SDS RPC(uploading)\n+ SDS downloading procedure improvement\n+ Metanode performance improvement(volume report)\n</code></pre>"},{"location":"docs-about/changes/#jun-3-2022-updates","title":"Jun 3, 2022 Updates","text":"<pre><code>+ Mobile Wallet multi-platform release processes (IOS)\n+ Metanode performance improvement(node status &amp; tier)\n+ SDS replication procedure improvement\n</code></pre>"},{"location":"docs-about/changes/#may-20-2022-updates","title":"May 20, 2022 Updates","text":"<pre><code>+ SDS replication procedure improvement\n+ Metanode performance improvement\n+ SDS RPC &amp; SDK\n+ Stratos Chain Upgrade(testing)\n+ Stratos Chain performance improvement\n+ Stratos Chain EVM support(testing)\n+ Monitoring dashboard\n</code></pre>"},{"location":"docs-about/changes/#may-8-2022-updates","title":"May 8, 2022 Updates","text":"<pre><code>+ SDS framework P2P communication encryption\n+ Mobile Wallet First Version\n+ Node Tier Mechanism bug fixes\n+ Meta node request frequency limiter\n</code></pre>"},{"location":"docs-about/changes/#apr-23-2022-updates","title":"Apr 23, 2022 Updates","text":"<pre><code>+ Metanode start procedure improvement\n+ Logging improvement\n+ Stchain-SDS relay layer improvement\n+ SDS Node Tier Mechanism\n</code></pre>"},{"location":"docs-about/changes/#apr-8-2022-updates","title":"Apr 8, 2022 Updates","text":"<pre><code>+ My wallet page\n+ Transaction history component\n+ Jail all the fake nodes\n+ Relayd refactoring\n+ Node status report\n</code></pre>"},{"location":"docs-about/changes/#mar-25-2022-updates","title":"Mar 25, 2022 Updates","text":"<pre><code>+ Video streaming API\n+ File upload/download verification\n+ Explorer sync service\n+ Log improvement\n+ Add alerting to specific processes\n</code></pre>"},{"location":"docs-about/changes/#mar-10-2022-updates","title":"Mar 10, 2022 Updates","text":"<pre><code>+ Incentive testnet testing\n+ PoA consensus integration testing\n+ Wallet multi-language support\n+ Node metrics\n+ Resource node suspension\n+ Wallet v0.6 updates\n+ PoT volume report\n+ Multiple bug fixes\n</code></pre>"},{"location":"docs-about/changes/#feb-15-2022-updates","title":"Feb 15, 2022 Updates","text":"<pre><code>+ PoA consensus testing\n+ Node status metrics\n+ File deletion testing\n+ Deployment scripts\n+ File backup\n+ Transaction detail page\n</code></pre>"},{"location":"docs-about/changes/#ian-29-2022-updates","title":"Ian 29, 2022 Updates","text":"<pre><code>+ Task report and store\n+ Stratos Chain devnet upgrade\n+ Stratos Decentralized Storage devnet upgrade\n+ File backup logic design\n+ File upload and download testing\n</code></pre>"},{"location":"docs-about/changes/#ian-16-2022-updates","title":"Ian 16, 2022 Updates","text":"<pre><code>+ Mining reward\n+ Tendermint migration\n+ Validator issues troubleshooting and fix\n+ Volume report\n+ Node monitor UI\n</code></pre>"},{"location":"docs-about/changes/#dec-26-2021-updates","title":"Dec 26, 2021 Updates","text":"<pre><code>+ Incentive testnet configurations\n+ Bug fixes in Stratos Wallet\n+ Stratos Chain documentation updates\n+ Health check and notifications\n+ SDS multiple bug fixes\n</code></pre>"},{"location":"docs-about/changes/#dec-11-2021-updates","title":"Dec 11, 2021 Updates","text":"<pre><code>+ Tropos Incentive Testnet\n+ Volume report transaction\n+ Bug fixes in Stratos Wallet\n+ Host metrics collection\n+ Stratos Blog page\n+ Faucet fixes\n+ Stratos Wallet User Guide\n</code></pre>"},{"location":"docs-about/changes/#nov-25-2021-updates","title":"Nov 25, 2021 Updates","text":"<pre><code>+ Stratos Wallet submission to Apple and Microsoft stores\n+ Stratos Wallet Download page\n+ Prepay module\n+ Log management with ElasticSearch\n+ Fix issues in various modules\n+ Reward and Staking token testing\n</code></pre>"},{"location":"docs-about/changes/#nov-12-2021-updates","title":"Nov 12, 2021 Updates","text":"<pre><code>+ SDS nodes staking\n+ Faucet migration\n+ Prepay troubleshooting\n+ Chain log management\n+ Private file upload with encryption\n</code></pre>"},{"location":"docs-about/changes/#oct-28-2021-updates","title":"Oct 28, 2021 Updates","text":"<pre><code>+ SDS launch test and bug fixes\n+ performance issue for explorer\n+ Chain log management\n+ SDS readme update\n</code></pre>"},{"location":"docs-about/changes/#oct-15-2021-updates","title":"Oct 15, 2021 Updates","text":"<pre><code>+ Documentation on multiple modules\n+ Faucet optimization\n+ Upgrade chain and SDS on devnet\n+ SDS readme update\n</code></pre>"},{"location":"docs-about/changes/#sep-30-2021-updates","title":"Sep 30, 2021 Updates","text":"<pre><code>+ Resource node and index node staking lock period\n+ Add the ozone limit changes\n+ SP node API framework update\n+ SDS streaming traffic records and balance checking\n+ Dependency update\n</code></pre>"},{"location":"docs-about/changes/#sep-17-2021-updates","title":"Sep 17, 2021 Updates","text":"<pre><code>+ Resource node and index node staking lock period\n+ Add the ozone limit changes\n+ Stratos Wallet\n+ Stratos Wallet Demo\n</code></pre>"},{"location":"docs-about/changes/#sep-3-2021-updates","title":"Sep 3, 2021 Updates","text":"<pre><code>+ REST APIs for SDS related modules\n+ SDS devnet setup\n+ Integrate updated SDK to wallet\n+ SDS Video Streaming Demo\n</code></pre>"},{"location":"docs-about/changes/#aug-20-2021-updates","title":"Aug 20, 2021 Updates","text":"<pre><code>+ SDS network ID standardization\n+ Stratos Chain SDS module unit test cases\n+ Ozone Supply &amp; Price API\n+ Stratos Chain Wallet transaction fee dynamic calculation\n</code></pre>"},{"location":"docs-about/changes/#aug-6-2021-updates","title":"Aug 6, 2021 Updates","text":"<pre><code>+ Resource Node Information update\n+ Index Node Information update\n+ Readme documentation\n+ File Replication workflow\n+ SDS Ozone record verification\n</code></pre>"},{"location":"docs-about/changes/#jul-23-2021-updates","title":"Jul 23, 2021 Updates","text":"<pre><code>+ Stratos Chain load testing\n+ Stratos Chain module simulation testing\n+ SDS video streaming\n+ SDS P2P key\n</code></pre>"},{"location":"docs-about/changes/#jul-9-2021-updates","title":"Jul 9, 2021 Updates","text":"<pre><code>+ Stratos Chain Governance Module\n+ STOS Token unit and Ozone unit\n+ PoT reward distribution\n+ Stratos Chain Testnet infrastructure\n+ SDS relay transactions\n</code></pre>"},{"location":"docs-about/changes/#jun-26-2021-updates","title":"Jun 26, 2021 Updates","text":"<pre><code>+ SDS nodes query on Stratos Chain\n+ Explorer Update\n+ SDS Traffic Records\n+ SDS Traffic Aggregation\n+ Upgrade Module\n</code></pre>"},{"location":"docs-about/changes/#jun-11-2021-updates","title":"Jun 11, 2021 Updates","text":"<pre><code>+ PoT Reward distribution Module\n+ PoT traffic report transaction update\n+ File upload transaction update\n+ STOS unit conversion\n+ Prepay module\n+ SDS Network ID standardization\n+ Key storage on wallet\n</code></pre>"},{"location":"docs-about/changes/#jun-4-2021-updates","title":"Jun 4, 2021 Updates","text":"<pre><code>+ SDS file upload slice\n+ SDS file download slice\n+ SDS Relay Module to communicate with Stratos Chain\n+ We have done the first version of Performance Testing for Stratos Chain with acceptable results.\n+ Stratos Chain prepay module\n+ SDK Txs Creation\n+ SDK Txs Signing\n</code></pre>"},{"location":"docs-about/changes/#may-19-2021-updates","title":"May 19, 2021 Updates","text":"<pre><code>+ New Website Launch\n+ SC faucet for testnet\n+ Resource Network node registration type(for future Stratos Decentralized Database and Computation) support on SC\n+ SC genesis preparation and export\n+ SDS Relay Module\n</code></pre>"},{"location":"docs-about/changes/#may-11-2021-updates","title":"May 11, 2021 Updates","text":"<pre><code>+ SDS node registration module on Stratos Chain(SC)\n+ SDS Payment module on Stratos Chain\n+ SDS reward report msg on Stratos Chain\n+ SDS account validation\n+ SDS Traffic capacity Storage\n+ SDK key management\n+ Master key generation\n+ Mnemonic word\n+ HD key deviation\n+ Signing and signature verification\n</code></pre>"},{"location":"docs-about/changes/#apr-19-2021-updates","title":"Apr 19, 2021 Updates","text":"<pre><code>+ Stratos Chain ledger functionalities\n+ SDS node task pool\n+ SDS file upload/ file download event handling\n+ SDS File Upload transaction for Value Network to persist file hash for later validation\n+ Stratos SDK framework\n</code></pre>"},{"location":"docs-about/stratos-token-economy/","title":"STOS Token Economy","text":""},{"location":"docs-about/stratos-token-economy/#abstract","title":"Abstract","text":"<p>Stratos, as the next generation of Decentralized Data Mesh, heavily rely on community participation to maintain self-sustainability. We propose here a Troposphere Economy Model which revolves around: 1) Resource/Meta Node miners, 2) End users, 3) Blockchain participants to achieve its business value.</p> <p>All aspects are maintained through the use of Stratos Tokens (STOS). The former corresponds to the supply side and provides storage, database, and computing resources to receive incentives. The middle corresponds to the demand side, which consumes the related services, and pays fees to the Stratos network. The latter corresponds to the ledger layer who distributes the incentives based on the workload of the resource miners, facilitates transfer, etc. We tune the relationship between different stakeholders with three consensus protocols, including Proof-of-Traffic, Proof-of-Stake and Proof-of-Authority, to incentivize the stable growth of the ecosystem.</p> <p></p>"},{"location":"docs-about/stratos-token-economy/#terminology","title":"Terminology","text":"<ul> <li> <p>Stratos Chain (SC): The Stratos blockchain facilitates all decentralized ledger transactions and functionalities.</p> </li> <li> <p>Validator node: A validator is a node that participates in the Stratos Chain block generation by voting. To become a validator, the node owner needs to self-delegate a certain amount of STOS tokens.</p> </li> <li> <p>Blockchain node: All nodes that participate in the Stratos Chain.</p> </li> <li> <p>Follower node: A node that participates in the Stratos Chain as a blockchain node, but does not work as a validator.</p> </li> <li> <p>Stratos Decentralized Storage (SDS): A file based decentralized storage system.</p> </li> <li> <p>Stratos Decentralized Database (SDD): A tree based decentralized database system.</p> </li> <li> <p>Stratos Decentralized Computation (SDC): A Trusted Execution Environment based decentralized computation system.</p> </li> <li> <p>Value Network: The Stratos Chain, the network that circulates all values in the Stratos Ecosystem. Resource Network: Includes Decentralized Storage, Decentralized Database and Decentralized Computation</p> </li> <li> <p>Resource Node: Nodes that participate in the Stratos Resource Network by providing their disk/bandwidth/computation power to earn rewards in the Proof-of-Traffic model.</p> </li> <li> <p>Meta Node: Nodes that manage the tasks in the Resource Network between all Resource Nodes. Used for indexing all content, auditing the traffic report and communicating between Resource Network and Value Network through a relay mechanism.</p> </li> <li> <p>Active Resource Node: A Resource Node that has finished the activation process by depositing to the Value Network and registering to a Meta Node, and currently receives tasks assigned by the Meta Node.</p> </li> <li> <p>Suspended Resource Node: A Resource Node that has not satisfied the performance KPI evaluation criteria and is suspended from receiving further tasks from the Meta Node.</p> </li> <li> <p>Gas: Stratos Chain transactions consume gas to be committed in blocks. The gas is used to avoid transaction spamming.</p> </li> <li> <p>Traffic: The data volume evaluated in the Resource Network. The incentive for all participants in the Stratos Ecosystem will be based on the traffic.</p> </li> <li> <p>Stratos Tokens (STOS): Stratos Tokens, the native token facilitating value circulation in the Stratos Ecosystem.</p> </li> <li> <p>Ozone(Oz): The traffic unit in the ecosystem.</p> </li> <li> <p>Epoch: The Proof-of-Traffic evaluation periodic window. The traffic for the Resource Network is evaluated at the end of each epoch.</p> </li> <li> <p>Volume Pool: The collective pool of all prepay.</p> </li> <li> <p>Mining Pool: The reserved STOS to incentivize the public to participate in the network in the early stage.</p> </li> </ul> <p></p>"},{"location":"docs-about/stratos-token-economy/#1-system-economic-income","title":"1. System Economic Income","text":"<p>After launching the Stratos Data Mesh V1 (Storage), V2 (database), and V3 (computation), each module will generate corresponding economic income. The whole Stratos economy is based on a Proof-of-Traffic model that evaluates the traffic generated by users' actions. Settlement and payment of the traffic is conducted in the form of Stratos Tokens through the Stratos Blockchain. The traffic price changes dynamically based on a constant product formula.</p>"},{"location":"docs-about/stratos-token-economy/#-purchased-ozone","title":"- Purchased Ozone","text":"<p>If any user wants to use the Stratos Resource Network, he needs to prepay on the Stratos blockchain by sending a PREPAY transaction. The PREPAY transaction will let this user buy the traffic(Ozone) at a marginal price at the time \\(\\mathbf{t}\\) computed by dividing the sum of the effective genesis deposit and the current unissued prepay volume pool by the remaining total Ozone limit.</p> \\[ \\operatorname{price}_{t}^{o z}=\\frac{s_{t}+p_{t}}{l_{t}} \\] <p>The remaining total Ozone limit \\(l_{t}\\) is the upper bound of the total Ozone that users can purchase from the Stratos blockchain.</p> <p>\\(S_{t}\\) is the effective total deposit by all Resource Nodes and Meta Nodes at time \\(\\mathrm{t}, l_{0}\\) is set to an amount based on the effective total deposit to reflect the STOS market price and the total SDS resources at the mainnet launch time.</p> <p>The current unissued prepay Volume Pool \\(p_{t}\\) is the total remaining prepay STOS kept by the Stratos Network but not yet issued to Resource Nodes as rewards. At time \\(\\mathrm{t}=0, p_{t}=0\\)</p> <p>If one user PREPAYS a total amount of \\(x\\) STOS token at time \\(t\\), then he will get the following Ozone amount if there is no slippage:</p> \\[ d l_{t}=\\frac{d x}{\\text { price }_{t}^{o z}}=\\frac{l_{t}}{s_{t}+p_{t}} \\times d x \\] <p>Where \\(d x\\) is the derived \\(x\\) that is small enough to not make the price change. Because the constant product formula guarantees that the product of available STOS and Ozone is constant.</p> \\[ \\text { constant }=\\left(s_{t}+p_{t}\\right) \\times\\left(l_{t}\\right)=\\left(s_{t+d t}+p_{t+d t}\\right) \\times\\left(l_{t+d t}\\right) \\] <p>Where \\(p_{t+d t}=p_{t}+X\\), so we can calculate the total amount of Ozone the user gets as:</p> \\[ \\Delta l=l_{t}-l_{t+d t}=\\frac{l_{t} \\times X}{s_{t}+p_{t}+X} \\] <p>And the new price of Ozone will become:</p> \\[ \\operatorname{price}_{t+d t}^{o z}=\\frac{s_{t}+p_{t}+X}{l_{t}-\\Delta l} \\]"},{"location":"docs-about/stratos-token-economy/#-consumed-ozone-converted-to-traffic-rewards","title":"- Consumed Ozone converted to Traffic Rewards","text":"<p>Users can utilize all services provided by the Resource Network by consuming Ozone. At the end of each epoch the total amount of consumed Ozone will be sold back to the Volume Pool to generate the traffic rewards to issue to all Resource Nodes:</p> \\[ \\operatorname{price}_{t}^{o z}=\\frac{s_{t}+p_{t}}{l_{t}} \\] <p>If the total consumed Ozone in an epoch is \\(Y\\), it will generate traffic rewards as: </p> \\[ d R=d y \\times \\frac{s_{t}+p_{t}}{l_{t}} \\] <p>Where \\(d y\\) is the derived \\(Y\\) that is small enough to not make the price change. Since the constant product formula guarantees:</p> \\[ \\text { constant }=\\left(s_{t}+p_{t}\\right) \\times\\left(l_{t}\\right)=\\left(s_{t+d t}+p_{t+d t}\\right) \\times\\left(l_{t+d t}\\right) \\] <p>We can calculate the total generated traffic rewards based on the total consumed Ozone \\(Y\\) as:</p> \\[ R=p_{t}-p_{t+d t}=\\frac{\\left(s_{t}+p_{t}\\right) \\times Y}{l_{t}+Y} \\] <p>Thus at the end of epoch timet \\(+d t\\), the Ozone price will become:</p> \\[ \\operatorname{price}_{t+d t}^{o z}=\\frac{s_{t}+p_{t}-R}{l_{t}+Y} \\] <p>As people keep buying Ozone without consuming it, the price of Ozone will keep increasing compared to STOS.</p> <p></p>"},{"location":"docs-about/stratos-token-economy/#2-income-and-mining-incentive-distribution","title":"2. Income and Mining incentive distribution","text":"<p>The traffic reward \\(R\\) is distributed to </p> <p>1) Resource Node miners(60%) </p> <p>2) Meta Node miners(20%) </p> <p>3) Blockchain participants(20%). </p> <p>The detailed distribution plan is described in section 3, 4 and 5.</p> <p>The Stratos Foundation has reserved 40% of the 100M total STOS supply as a mining rewards pool. The mining rewards are issued at the end of each epoch, with the same schedule as traffic rewards. The mining reward for each epoch will be 80 STOS, until the total issued amount reaches 16819200 STOS which will be achieved in roughly 4 years. Then the mining rewards will be halved, which makes the mining rewards become 40 STOS. Once the mining rewards are halved, the Meta Node share will be decreased by 2%, and this 2% will be added to Resource Node miners. The halving continues roughly every 4 years, for 5 times. Then the mining rewards will be 2.5 STOS until full issuance of 39M STOS. The full mining rewards pool will last roughly 68.8 years. We will allocate the rest 1M STOS for incentive testnet.</p> Total Mined Mining reward (per epoch) Years Resource/Meta Node/Blockchain Percentage 0 - 16,819,200 80 0-4 60% / 20% / 20% 16,819,200 - 25,228,800 40 4-8 62% / 18% / 20% 25,228,800 - 29,433,600 20 8-12 64% / 16% / 20% 29,433,600 - 31,536,000 10 12-16 66% / 14% / 20% 31,536,000 - 32,587,200 5 16-20 68% / 12% / 20% 32,587,200 - 39,000,000 2.5 20-68.8 70% / 10% / 20% <p>All traffic rewards and mining rewards will have a lock-up period of 14 days. An Active Resource Node needs to send a transaction to unregister from the Stratos blockchain when it wants to exit, and it can only shutdown after the 14-day cooling-off period. If the requirements are not met, the locked reward will be fully canceled and returned back to the pool.</p> <p>All the Transaction gas fees that are collected in the blockchain will only be distributed to blockchain participants, based on validator nodes self-delegation and delegators delegation. It will not be given to Resource Nodes and Meta Nodes.</p> <p></p>"},{"location":"docs-about/stratos-token-economy/#3-proof-of-traffic-mechanism","title":"3. Proof-of-Traffic Mechanism","text":"<p>Based on the traffic(Ozone) consumed by the whole network, Stratos will issue traffic rewards and mining rewards to participants. In this section, we only talk about the 60% share given to Resource Nodes(the percentage increases as the mining rewards keep halving).</p> <p>1 Ozone can be considered as: 1GB<sup>1</sup> data traffic in SDS or 1 million record touches<sup>1</sup> in SDD. </p>"},{"location":"docs-about/stratos-token-economy/#-user-charges","title":"- User charges","text":"<p>All charged user traffic will be deducted from user's available Ozone balance.</p> <ul> <li>Upload:</li> </ul> <p>Uploading data will consume two parts of traffic, the initial uploading and the replication. The SDS is set to replicate 3 copies by default, which means that by uploading a file of 10MB to SDS, the user will consume 30MB of traffic. Users can configure a higher initial replica number, which will increase the number of replicas while uploading, thus consuming more traffic.</p> <ul> <li>Download:</li> </ul> <p>Downloading data will consume the total traffic actually generated by this action. If higher download requests for one copy of data triggers the automatic replicas incrementing, users will not be charged for that traffic, but only for the traffic for the final delivery.</p> <ul> <li>Database Query:</li> </ul> <p>Database Queries will consume two parts of traffic, the final delivery and the record touches.</p> <ul> <li>Computation:</li> </ul> <p>Computation is very complicated, it deserves a standalone paper to cover the calculation.</p>"},{"location":"docs-about/stratos-token-economy/#-resource-node-traffic-record","title":"- Resource Node traffic record","text":"<p>When a user triggers an action of UPLOAD/DOWNLOAD/QUERY/etc, the Meta Node will randomly assign the task to one/multiple Resource Node(s) which has enough resources(data, storage, and bandwidth) to facilitate this action. The assignment chance for each node is based on their weight maintained by Meta Node. The weight is adjusted by Meta Node based on the performance for the tasks fulfilled by the node. The initial weight for each node is determined by node's initial deposit which is discussed in section 4.</p> <p>Once a Resource Node has completed the task, the traffic generated by this task is recorded as traffic contribution for this Resource Node.</p>"},{"location":"docs-about/stratos-token-economy/#-resource-node-settlement","title":"- Resource Node settlement","text":"<p>At the end of every 10 minutes epoch, Meta Nodes settle the traffic with Resource Nodes. The Resource Nodes that provide the top 80% of total traffic will be eligible to settle to get the traffic and mining rewards. Their traffic contribution will be set back to zero once settled. The unsettled traffic will accumulate to the next epoch.</p> <p>Let's take SDS as an example during the first 4 years. Suppose that during one epoch, there are 5 Resource Node miners in the SDS network, respectively providing 500GB, 300GB, 200GB, 80GB, 20GB of traffic contribution. That's equivalent to 1100oz, but only the top 3 nodes will be eligible to get settled because \\(80 \\% * 1100=880\\). Thus 1000 oz is settled in the epoch. The total traffic and mining rewards of this epoch is:</p> \\[ R=1000 \\times \\frac{s_{t}+p_{t}}{l_{t}+1000}+80 \\] <p>It's safe to assume that \\(\\frac{s_{t}+p_{t}}{l_{t}+1000}=1 / 50\\) which makes the total rewards 100STOS. 60%(60 STOS) will be issued to the Resource Nodes that have been settled. The top 3 nodes will get 30STOS, 18STOS and 12STOS respectively.</p> <p></p>"},{"location":"docs-about/stratos-token-economy/#4-proof-of-authority-mechanism","title":"4. Proof-of-Authority Mechanism","text":""},{"location":"docs-about/stratos-token-economy/#-meta-node-registration","title":"- Meta Node Registration","text":"<p>Stratos Foundation will verify the Meta Node operator and then there will be a vote by all existing Meta Nodes. The verification includes but is not limited to: Meta Node machine specs, internet specs, server location, security and operation management. Meta Nodes that pass this verification will need to deposit a certain amount of STOS with a registration transaction on the Stratos Blockchain. All existing Meta Nodes will need to vote to approve the registration of the new node.</p>"},{"location":"docs-about/stratos-token-economy/#-resource-node-activation","title":"- Resource Node Activation","text":"<p>Anyone can launch a Resource Node, however it will not receive any tasks from Meta Nodes until it completes the activation process. Resource Node owners need to deposit a certain amount of STOS tokens by sending an activation transaction to the Stratos Blockchain. Once this is done, the Meta Nodes will start to treat it as an active Resource Node. All the deposit STOS will be locked for at least 180 days.</p>"},{"location":"docs-about/stratos-token-economy/#-deposit-increase-total-ozone-limit","title":"- Deposit increase total Ozone limit","text":"<p>Once a new Meta Node or Resource Node deposits Z STOS for registration/activation, the remaining total Ozone limit will be increased by an amount calculated by:</p> \\[ \\Delta l_{t}=\\frac{Z}{r_{0}} \\] <p>Where \\(r_{0}\\) refers to the fixed deposit/ozone ratio. Then the new Ozone price will become:</p> \\[ \\operatorname{price}_{t+d t}^{o z}=\\frac{s_{t}+p_{t}}{l_{t}+\\Delta l_{t}} \\] <p>As more Resource Nodes are added to the network, the Ozone price will decrease compared to the STOS price.</p> <p>The increased Ozone limit \\(\\Delta l_{t}\\) for a Resource Node deposit will be evaluated by the Meta Nodes as the initial Resource Node weight in task assignment. This weight will be affected later based on the Resource Node performance. We can consider that the deposit is the self claimed machine power of the Resource Node. So the owner should consider depositing more STOS if he owns a more powerful Resource Node machine. The \\(\\Delta l\\) to weight calculation equation can only be determined by incentive testnet testing results.</p>"},{"location":"docs-about/stratos-token-economy/#-resource-node-deactivation","title":"- Resource Node Deactivation","text":"<p>If a Resource Node follows the process of deactivation by sending a unregister transaction to stratos blockchain, the remaining total Ozone limit will be decreased by an amount calculated by:</p> \\[ \\Delta l_{t}=\\frac{Z}{r_{0}} \\] <p>Where \\(Z\\) is the initial deposit of this Resource Node before any slashing/fee is applied. Once a Resource Node has deactivated, the Ozone price will increase.</p> <p>The Resource Node can get his deposit STOS back 14 days after deactivation if the locked 180 days period has passed or 14 + remaining days from the 180 days lock period.</p> <p>Example: if a Resource Node deposits 1000 STOS to activate on day 1 of the year, and deactivate on day 150 of the year, he can only get his deposit back on day 194 of the year. Or if the node deactivates on day 190 of the year, he can only get his deposit back on day 204 of the year.</p> <p>The Resource Node will also cover the data replica migration traffic fees with his unvested reward and deposit, since the whole network will consume resources to properly backup the data held by the quitting resource node. The traffic is charged the same way as user upload/download.</p>"},{"location":"docs-about/stratos-token-economy/#-meta-node-incentive","title":"- Meta Node Incentive","text":"<p>Meta Nodes will participate in all data indexing, task distribution and settlement of traffic with Resource Nodes. All Meta Nodes will equally share 20% of the total traffic rewards and mining rewards for each epoch. Given the example in section 3, all Meta Nodes would share the 20 STOS tokens.</p> <p></p>"},{"location":"docs-about/stratos-token-economy/#5-proof-of-stake-mechanism","title":"5. Proof-of-Stake Mechanism","text":"<p>Stratos extended the Delegated Proof-of-Stake into Hybrid Delegated Proof-of-Stake. 20% of the total traffic and mining rewards will be allocated as stake rewards to the Proof-of-Stake beneficiaries, which include:</p> <ol> <li>Validators self-delegate</li> <li>Delegators delegate</li> </ol> <p>The share of stake rewards for Validators and Delegators will be distributed based on their delegation with a configured commission for validators. The transaction gas fees mentioned in section 2 will also follow the same distribution mechanism.</p> <p>Let us take an example where we have 10 validators with equal voting power and a commission rate of \\(1 \\%\\). Let us also assume that the gas fee reward for a block or the stake rewards of an epoch is 1000 STOS in total for 10 validators and that each validator has 20% of self-delegated STOS. These tokens do not go directly to the block proposer. Instead, they are evenly spread among validators. So now each validator's pool has 100 STOS. These 100 STOS will be distributed according to each participant's stake, for each validator:</p> <p>Commission: 100 * 80% * 1% = 0.8 STOS</p> <p>Validator get: 100 * 20% + Commission = 20.8 STOS</p> <p>All delegators get: 100 * 80% - Commission = 79.2 STOS</p> <p></p>"},{"location":"docs-about/stratos-token-economy/#6-summary","title":"6. Summary","text":"<p>We have achieved several key features:</p> <ol> <li> <p>As more people prepay to utilize the services provided by the Resource Network, Ozone price will increase which reflects the increasing demand.</p> </li> <li> <p>As more people become Resource Nodes, the Ozone limit will increase which reflects the increasing supply, and Ozone price will decrease because of that.</p> </li> <li> <p>Ozone is the measurement of all activities in the Resource Network.</p> </li> <li> <p>STOS is the value circulating in the Stratos Ecosystem.</p> </li> </ol> <p>With all the aspects above, the Stratos Ecosystem guarantees a stable and healthy growth.</p> <p></p>"},{"location":"docs-about/stratos-token-economy/#disclaimer","title":"Disclaimer","text":"<p>This paper is for general information purposes only. It does not constitute investment advice or a recommendation or solicitation to buy or sell any investment and should not be used in the evaluation of the merits of making any investment decision. It should not be relied upon for accounting, legal or tax advice or investment recommendations. This paper reflects current opinions of the authors. The opinions reflected herein are subject to change without being updated.</p> <ol> <li> <p>Subject to be changed before mainnet.\u00a0\u21a9\u21a9</p> </li> </ol>"},{"location":"docs-about/stratos-token-metrics/","title":"STOS Token Metrics","text":""},{"location":"docs-about/stratos-token-metrics/#stos-token-utilities","title":"STOS token utilities","text":"<ul> <li>STOS will be staked/delegated to validators to secure the Blockchain network.</li> <li>STOS will be issued as Proof-of-Traffic mining reward.</li> <li>STOS will be consumed in the payment of the transaction fee.</li> <li>STOS will be prepaid for Stratos Resource Network service traffic fee.</li> </ul>"},{"location":"docs-about/stratos-token-metrics/#at-a-glance","title":"At a Glance","text":"<p>Token Ticker: STOS</p> <p>Total Supply: 100,000,000</p> <p>Initial Liquid Tokens: 8,125,000</p> <p>Initial Market Price: 0.3 USD</p>"},{"location":"docs-about/stratos-token-metrics/#token-allocation-by-percent","title":"Token Allocation by Percent","text":"<p>Our total strategic sale (consisting of 1 seed and 2 private sale rounds) is 20% of all our tokens. The initial sale will be used for our technology development, community building, partnerships, and marketing to build out Stratos Decentralized Data Mesh.</p>"},{"location":"docs-about/stratos-token-metrics/#token-unlock-and-vesting-schedule","title":"Token Unlock and Vesting Schedule","text":"<p>Seed: 25% unlocked at TGE<sup>1</sup>. Quarterly vesting over 9 months.</p> <p>Private Sale 1: 25% unlocked at TGE<sup>1</sup>. Quarterly vesting over 9 months.</p> <p>Private Sale 2: 30% unlocked at TGE<sup>1</sup>, Quarterly vesting over 9 months.</p> <p>Public: 100% unlocked at TGE<sup>1</sup>.</p> <p>Team: 10% unlocked at day 270. Quarterly vesting over 12 months.</p> <p>Ecosystem Development &amp; Partnerships: 10% unlocked at TGE<sup>1</sup>. Remaining utilized when partnerships are established.</p> <p>Liquidity Provision Fund: 30% unlocked at TGE<sup>1</sup>. Remaining utilized for new exchange listing relationships.</p> <p>Foundation Reserve: 10% unlocked at day 360. Remaining quarterly vesting over 12 months.</p> <ol> <li> <p>Token Generation Event was on June 09, 2021\u00a0\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9</p> </li> </ol>"},{"location":"docs-evm/available-dapps/","title":"Available dapps","text":""},{"location":"docs-evm/available-dapps/#list-of-available-dapps","title":"List of available Dapps:","text":""},{"location":"docs-evm/node-config/","title":"Node config","text":""},{"location":"docs-evm/node-config/#node-configuration-to-enable-evm","title":"Node configuration to enable EVM","text":"<p>In order to enable EVM feature on stratos chain node (fullnode/validator), edit your <code>&lt;path_to_your_node&gt;/config/app.toml</code> with the following:</p> <pre><code>[json-rpc]\n\n# Enable defines if the gRPC server should be enabled.\nenable = true\n</code></pre>"},{"location":"docs-evm/deploy-smart-contracts/hardhat/","title":"Using Hardhat","text":""},{"location":"docs-evm/deploy-smart-contracts/hardhat/#setting-up-the-development-environment","title":"Setting up the development environment","text":"<p>There are a few technical requirements before we start. Please install the following:</p> <ul> <li>Node.js v10+ LTS and npm (comes with Node)</li> <li>Git</li> </ul> <p>Once we have those installed, To install hardhat, you need to create an npm project by going to an empty folder, running npm init, and following its instructions. Once your project is ready, you should run</p> <p><pre><code>$ npm install --save-dev hardhat\n</code></pre> To create your Hardhat project run npx hardhat in your project folder Let\u2019s create the sample project and go through these steps to try out the sample task and compile, test and deploy the sample contract.</p> <p>The sample project will ask you to install hardhat-waffle and hardhat-ethers.You can learn more about it in this guide</p>"},{"location":"docs-evm/deploy-smart-contracts/hardhat/#hardhat-config","title":"hardhat-config","text":"<ul> <li>Go to hardhat.config.js</li> <li>Update the hardhat-config with stratos-network-crendentials.</li> <li>create .env file in the root to store your private key</li> </ul> <pre><code>require(\"@nomiclabs/hardhat-ethers\");\nconst fs = require('fs');\nconst privateKey = fs.readFileSync(\".secret\").toString().trim();\nmodule.exports = {\n  defaultNetwork: \"stratos\",\n  networks: {\n    hardhat: {\n    },\n    testnet: {\n      url: \"TODO\",\n      accounts: [process.env.PRIVATE_KEY]\n    },\n    stratos: {\n      url: \"TOOD\",\n      accounts: [process.env.PRIVATE_KEY]\n    },\n  },\n  solidity: {\n    version: \"0.8.4\",\n    settings: {\n      optimizer: {\n        enabled: true,\n        runs: 200\n      }\n    }\n  },\n}\n</code></pre>"},{"location":"docs-evm/deploy-smart-contracts/hardhat/#deploying-on-stratos-network","title":"Deploying on Stratos Network","text":"<p>Run this command in root of the project directory: <pre><code>$ npx hardhat run scripts/sample-script.js --network testnet\n</code></pre></p> <p>Contract will be deployed on Stratos's Testnet, it look like this:</p> <pre><code>Compilation finished successfully\nGreeter deployed to: 0xfaFfCAD549BAA6110c5Cc03976d9383AcE90bdBE\n</code></pre> <p>Remember your address would differ, Above is just to provide an idea of structure. Congratulations! You have successfully deployed Greeter Smart Contract. Now you can interact with the Smart Contract.</p> <p>You can check the deployment status here: TODO</p>"},{"location":"docs-evm/deploy-smart-contracts/truffle/","title":"Using truffle","text":""},{"location":"docs-evm/deploy-smart-contracts/truffle/#setting-up-the-development-environment","title":"Setting up the development environment","text":"<p>There are a few technical requirements before we start. Please install the following:</p> <ul> <li>Node.js v8+ LTS and npm (comes with Node)</li> <li>Git</li> </ul> <p>Once we have those installed, we only need one command to install Truffle:</p> <pre><code>npm install -g truffle\n</code></pre> <p>To verify that Truffle is installed properly, type <code>truffle version</code> on a terminal. If you see an error, make sure that your npm modules are added to your path.</p> <p>If you're new to Truffle then please follow the Getting Started by truffle, To setup the truffle environment. </p>"},{"location":"docs-evm/deploy-smart-contracts/truffle/#truffle-config","title":"truffle-config","text":"<ul> <li>Go to truffle-config.js</li> <li>Update the truffle-config with stratos-network-crendentials.</li> </ul> <pre><code>const HDWalletProvider = require('@truffle/hdwallet-provider');\nconst fs = require('fs');\nconst mnemonic = fs.readFileSync(\".secret\").toString().trim();\n\nmodule.exports = {\n  networks: {\n    development: {\n      host: \"127.0.0.1\",     // Localhost (default: none)\n      port: 8545,            // Standard Ethereum port (default: none)\n      network_id: \"*\",       // Any network (default: none)\n    },\n    // mainnet\n    stratos: {\n      provider: () =&gt; new HDWalletProvider(mnemonic, `TODO`),\n      network_id: 2048,\n      confirmations: 1,\n      timeoutBlocks: 200,\n      skipDryRun: true\n    },\n    // testnet\n    testnet: {\n      provider: () =&gt; new HDWalletProvider(mnemonic, `TODO`),\n      network_id: 2047,\n      confirmations: 1,\n      timeoutBlocks: 200,\n      skipDryRun: true\n    },\n  },\n\n  // Set default mocha options here, use special reporters etc.\n  mocha: {\n    // timeout: 100000\n  },\n\n  // Configure your compilers\n  compilers: {\n    solc: {\n    }\n  }\n}\n</code></pre> <p>Notice, it requires mnemonic to be passed in for stratos/testnet Provider, this is the seed phrase for the account you'd like to deploy from. Create a new .secret file in root directory and enter your 12 word mnemonic seed phrase to get started. To get the seedwords from metamask wallet you can go to Metamask Settings, then from the menu choose Security and Privacy where you will see a button that says reveal seed words. </p>"},{"location":"docs-evm/deploy-smart-contracts/truffle/#deploying-on-stratos-network","title":"Deploying on Stratos Network","text":"<p>Run this command in root of the project directory: <pre><code>$ truffle migrate --network testnet\n</code></pre></p> <p>Contract will be deployed on Stratos's Testnet, it look like this:</p> <pre><code>2_deploy_contracts.js\n=====================\n\n   Replacing 'MyContract'\n   ------------------\n   &gt; transaction hash:    0x1c94d095a2f629521344885910e6a01076188fa815a310765679b05abc09a250\n   &gt; Blocks: 5            Seconds: 5\n   &gt; contract address:    0xbFa33D565Fcb81a9CE8e7a35B61b12B04220A8EB\n   &gt; block number:        2371252\n   &gt; block timestamp:     1578238698\n   &gt; account:             0x9fB29AAc15b9A4B7F17c3385939b007540f4d791\n   &gt; balance:             79.409358061899298312\n   &gt; gas used:            1896986\n   &gt; gas price:           0 gwei\n   &gt; value sent:          0 ETH\n   &gt; total cost:          0 ETH\n\n   Pausing for 2 confirmations...\n   ------------------------------\n   &gt; confirmation number: 5 (block: 2371262)\ninitialised!\n\n   &gt; Saving migration to chain.\n   &gt; Saving artifacts\n   -------------------------------------\n   &gt; Total cost:                   0 ETH\n\n\nSummary\n=======\n&gt; Total deployments:   2\n&gt; Final cost:          0 ETH\n</code></pre> <p>Remember your address, transaction_hash and other details provided would differ, Above is just to provide an idea of structure.</p> <p>Congratulations! You have successfully deployed HelloWorld Smart Contract. Now you can interact with the Smart Contract.</p> <p>You can check the deployment status here: TODO</p>"},{"location":"docs-evm/wallets/metamask/configure-on-metamask/","title":"Configure Stratos on MetaMask","text":""},{"location":"docs-evm/wallets/metamask/configure-on-metamask/#configure-stratos-on-metamask","title":"Configure Stratos on Metamask","text":"<p>In order to view the flow of funds in your accounts, on the Stratos Network, you will need to configure Stratos Mainnet or TestNet URL on Metamask.</p> MainnetTestnet (Mesos) <p>To add Stratos Mainnet Network details to Metamask, follow these instructions:</p> <ul> <li>Open Metamask and click on the networks button in the upper left corner:</li> </ul> <p></p> <ul> <li>Click <code>Add network</code>:</li> </ul> <p></p> <ul> <li>Click <code>Add a network manually</code>:</li> </ul> <p></p> <ul> <li>In the next screen, enter the following details and click <code>Save</code>:</li> </ul> Setting Name Value Network name <code>Stratos Mainnet</code> New RPC URL <code>https://web3-rpc.thestratos.org</code> Chain ID <code>2048</code> Currency symbol <code>STOS</code> Block Explorer URL <code>https://web3-explorer.thestratos.org</code> <p></p> <p>To add Stratos Testnet Network details to Metamask, follow these instructions:</p> <ul> <li>Open Metamask and click on the networks button in the upper left corner:</li> </ul> <p></p> <ul> <li>Click <code>Add network</code>:</li> </ul> <p></p> <ul> <li>Click <code>Add a network manually</code>:</li> </ul> <p></p> <ul> <li>In the next screen, enter the following details and click <code>Save</code>:</li> </ul> Setting Name Value Network name <code>Stratos Testnet</code> New RPC URL <code>https://web3-rpc-mesos.thestratos.org</code> Chain ID <code>2048</code> Currency symbol <code>STOS</code> Block Explorer URL <code>https://web3-explorer-mesos.thestratos.org</code> <p></p>"},{"location":"docs-evm/wallets/metamask/gas-token/","title":"STOS Gas Token","text":"MainnetTestnet (Mesos) <p>STOS is the native token of Stratos. This is similar to Ether in Ethereum. To interact with Stratos, STOS tokens are required to pay as gas fees.</p> <p>On the Stratos chain, the Stratos tokens works as native token. This means that a user can pay gas with STOS as well as send STOS to other accounts same way as they use ETH to pay gas fees on Ethereum and send ETH to others.</p> <p>Getting the STOS token is really easy. Ways to get STOS token for Stratos:</p> <ul> <li>Step 1: Get STOS via USDT:</li> <li> <p>Decentralized Exchanges (DEX) </p> <ul> <li>Uniswap</li> <li>1inch</li> </ul> </li> <li> <p>Centralized Exchanges (CEX)</p> <ul> <li>Gate.io</li> <li>MEXC</li> <li>AscendEX </li> </ul> </li> <li> <p>Step 2: Migrate STOS Token:</p> <ul> <li>[DEX] Mainnet bridge</li> <li>[DEX] Testnet bridge (for testing before using real tokens)</li> </ul> </li> </ul> <p>\ud83c\udf89Voila, you can start interacting with Stratos now \ud83c\udf89</p> <p>STOS is the native token of Mesos. This is similar to Ether in Ethereum. To interact with Mesos network, STOS tokens are required to pay as gas fees.</p> <p>On the Mesos chain, the Mesos tokens works as native token. This means that a user can pay gas with STOS as well as send STOS to other accounts same way as they use ETH to pay gas fees on Ethereum and send ETH to others.</p> <p>If you want to get some test tokens, reach out to @devrawl on Telegram or Discord.</p>"},{"location":"docs-evm/wallets/metamask/hello/","title":"How to create a MetaMask Wallet?","text":"<p>If you are wondering how to create a new cryptocurrency wallet, consider creating one by installing the MetaMask extension.</p> <p>MetaMask is a free and secure browser extension that allows web applications to read and interact with the Ethereum blockchain.</p>"},{"location":"docs-evm/wallets/metamask/hello/#step-1-install-metamask-on-your-browser","title":"Step 1. Install MetaMask on your browser","text":"<p>To create a new wallet with MetaMask you need to install the extension first. You can install Metamask for Chrome, Firefox, Brave and Opera browsers.</p> <ol> <li>Open https://metamask.io or search for \u201cMetamask extension\u201d using your favorite search engine.</li> </ol> <p>In this tutorial we will be using Google Chrome as an example, but the workflow is the same for all browsers.</p> <p></p> <p></p> <ol> <li> <p>Click Chrome to install MetaMask as a Google Chrome extension.</p> </li> <li> <p>Click Add to Chrome.</p> </li> <li> <p>Click Add Extension.</p> </li> </ol> <p></p> <p></p> <p>That\u2019s it! You have successfully installed MetaMask extension!</p>"},{"location":"docs-evm/wallets/metamask/hello/#step-2-create-an-account","title":"Step 2. Create an account","text":"<p>The next step is to create an account.</p> <ol> <li>Click on the MetaMask icon in the upper right corner to open the extension.</li> <li>To install the latest version of MetaMask, click Try it now.</li> <li>Click Continue.</li> </ol> <p></p> <ol> <li>You will be asked to create a new password. Create a strong password and click Create.</li> </ol> <p>Don\u2019t forget to store your password for safekeeping!</p> <p></p> <p></p> <ol> <li> <p>Proceed by clicking Next, then accept Terms of Use.</p> </li> <li> <p>Click Reveal secret words.</p> </li> <li> <p>You will see a 12 words seed phrase. Save seed words as a file or copy them to a safe place and click Next.</p> </li> </ol> <p>Reveal secret words and copy your secret backup phrase to a safe place</p> <p></p> <p></p> <p>Security tips:Write this phrase on a piece of paper and store in a secure location. If you want even more security, write it down on multiple pieces of paper and store each in 2\u20133 different locations.Memorize this phrase.</p> <ol> <li>Verify your secret phrase by selecting the previously generated phrase. When done, click Confirm.</li> </ol> <p></p> <p>By \u201csolving this puzzle\u201d you are confirming that you know your secret phrase</p> <p>Congratulations! You have successfully created your MetaMask account. A new Ethereum wallet address was automatically generated for you!</p>"},{"location":"docs-evm/wallets/metamask/multiple-accounts/","title":"Multiple Accounts","text":"<p>In case you are new to Ethereum and Metamask, here is a guide on how to create multiple accounts:</p> <p>To create multiple accounts, you click on Profile icon on Metamask and then click on Create Account</p> <p></p> <p>You can then add an account name and click on Create.</p> <p></p> <p>You can create more accounts this way. When you create multiple accounts, your addresses will be different at your end.</p>"},{"location":"docs-resource-node/node-monitor-websocket-api/","title":"Node Monitor WebSocket API","text":"<p>This API uses JSON-RPC 2.0 over WebSocket. The user subscribes to the resource node and then periodically receives data about the status of the node. The subscription ID can be used to directly query specific info about the node.</p> <p>The format of a request message is:</p> <pre><code>{\n    \"jsonrpc\":\"2.0\",\n    \"id\":1,\n    \"method\":\"monitor_methodName\",\n    \"params\":[\n        {\n            \"param1\":\"valueOfParam1\",\n            \"param2\":valueOfParam2,\n            ...\n        }\n    ]\n}\n</code></pre> <p>The format of a response message is:</p> <pre><code>{\n    \"jsonrpc\":\"2.0\",\n    \"id\":1,\n    \"result\":\n        {\n            \"return\":\"1\",\n            \"extra_result_object1\":value_object1,\n            \"extra_result_object2\":value_object2,\n            ...\n        }\n}\n</code></pre> <p></p>"},{"location":"docs-resource-node/node-monitor-websocket-api/#subscription","title":"Subscription","text":""},{"location":"docs-resource-node/node-monitor-websocket-api/#monitor_subscribe","title":"monitor_subscribe","text":"<p>Subscribe to periodically get info about the node status.</p> <p>You can use the ppd terminal <code>monitortoken</code> command to fetch the monitor token.</p>"},{"location":"docs-resource-node/node-monitor-websocket-api/#parameters","title":"Parameters","text":"name type comment token string the monitor token"},{"location":"docs-resource-node/node-monitor-websocket-api/#returns","title":"Returns","text":"name type comment subid string the subscription id"},{"location":"docs-resource-node/node-monitor-websocket-api/#example","title":"Example","text":"<p>Request <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"method\": \"monitor_subscribe\",\n  \"params\": [\n    \"subscription\",\n    \"4d38ca0a40f1f0b3536ad99bfefbd752301f0514a8b2d8ce7839ef6b52995d9c\"\n  ]\n}\n</code></pre> Response <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"result\": \"0xaf79af2e32996c0f33541190b5eea203\"\n}\n</code></pre> Periodic status data message <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"monitor_subscription\",\n  \"params\": {\n    \"subscription\": \"0xaf79af2e32996c0f33541190b5eea203\",\n    \"result\": {\n      \"traffic_info\": {\n        \"traffic_inbound\": 0,\n        \"traffic_outbound\": 0,\n        \"time_stamp\": \"2024-01-01 01:23:45\"\n      },\n      \"online_state\": {\n        \"online\": false,\n        \"since\": 0\n      },\n      \"disk_usage\": {\n        \"data_host\": 0\n      }\n    }\n  }\n}\n</code></pre></p>"},{"location":"docs-resource-node/node-monitor-websocket-api/#individual-queries","title":"Individual queries","text":""},{"location":"docs-resource-node/node-monitor-websocket-api/#monitor_gettrafficdata","title":"monitor_getTrafficData","text":"<p>Get information about the traffic going through that node.</p>"},{"location":"docs-resource-node/node-monitor-websocket-api/#parameters_1","title":"Parameters","text":"name type comment subid string the subscription id lines number number of data points to query"},{"location":"docs-resource-node/node-monitor-websocket-api/#returns_1","title":"Returns","text":"name type comment traffic_inbound number the number of bytes received since the last data point traffic_outbound number the number of bytes sent since the last data point timestamp string the timestamp for this data point"},{"location":"docs-resource-node/node-monitor-websocket-api/#example_1","title":"Example","text":"<p>Request <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 0,\n  \"method\": \"monitor_getTrafficData\",\n  \"params\": [{\n    \"subid\": \"0xaf79af2e32996c0f33541190b5eea203\",\n    \"lines\": 1\n  }]\n}\n</code></pre> Response <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 0,\n  \"result\": {\n    \"return\": \"0\",\n    \"message_type\": \"monitor_getTrafficData\",\n    \"traffic_info\": [{\n      \"traffic_inbound\": 0,\n      \"traffic_outbound\": 0,\n      \"time_stamp\": \"2024-01-01 01:23:45\"\n    }]\n  }\n}\n</code></pre></p>"},{"location":"docs-resource-node/node-monitor-websocket-api/#monitor_getdiskusage","title":"monitor_getDiskUsage","text":"<p>Get information about total size of files stored on this node.</p>"},{"location":"docs-resource-node/node-monitor-websocket-api/#parameters_2","title":"Parameters","text":"name type comment subid string the subscription id"},{"location":"docs-resource-node/node-monitor-websocket-api/#returns_2","title":"Returns","text":"name type comment data_host number the number of bytes stored on this node"},{"location":"docs-resource-node/node-monitor-websocket-api/#example_2","title":"Example","text":"<p>Request <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 0,\n  \"method\": \"monitor_getDiskUsage\",\n  \"params\": [{\n    \"subid\": \"0xaf79af2e32996c0f33541190b5eea203\"\n  }]\n}\n</code></pre> Response <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 0,\n  \"result\": {\n    \"return\": \"0\",\n    \"message_type\": \"monitor_getDiskUsage\",\n    \"disk_usage\": {\n      \"data_host\": 0\n    }\n  }\n}\n</code></pre></p>"},{"location":"docs-resource-node/node-monitor-websocket-api/#monitor_getonlinestate","title":"monitor_getOnlineState","text":"<p>Check if the node is currently online or not.</p>"},{"location":"docs-resource-node/node-monitor-websocket-api/#parameters_3","title":"Parameters","text":"name type comment subid string the subscription id"},{"location":"docs-resource-node/node-monitor-websocket-api/#returns_3","title":"Returns","text":"name type comment online bool Is the node online or not since number The unix timestamp when the node first got online"},{"location":"docs-resource-node/node-monitor-websocket-api/#example_3","title":"Example","text":"<p>Request <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 0,\n  \"method\": \"monitor_getOnlineState\",\n  \"params\": [{\n    \"subid\": \"0xaf79af2e32996c0f33541190b5eea203\"\n  }]\n}\n</code></pre> Response <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 0,\n  \"result\": {\n    \"return\": \"0\",\n    \"message_type\": \"monitor_getOnlineState\",\n    \"online_state\": {\n      \"online\": false,\n      \"since\": 0\n    }\n  }\n}\n</code></pre></p>"},{"location":"docs-resource-node/node-monitor-websocket-api/#monitor_getnodedetails","title":"monitor_getNodeDetails","text":"<p>Get details about the node.</p>"},{"location":"docs-resource-node/node-monitor-websocket-api/#parameters_4","title":"Parameters","text":"name type comment subid string the subscription id"},{"location":"docs-resource-node/node-monitor-websocket-api/#returns_4","title":"Returns","text":"name type comment id string Unused address string The P2P address of the node"},{"location":"docs-resource-node/node-monitor-websocket-api/#example_4","title":"Example","text":"<p>Request <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 0,\n  \"method\": \"monitor_getNodeDetails\",\n  \"params\": [{\n    \"subid\": \"0xaf79af2e32996c0f33541190b5eea203\"\n  }]\n}\n</code></pre> Response <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 0,\n  \"result\": {\n    \"return\": \"0\",\n    \"message_type\": \"monitor_getNodeDetails\",\n    \"node_details\": {\n      \"id\": \"1\",\n      \"address\": \"stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\"\n    }\n  }\n}\n</code></pre></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/","title":"SDS ppd terminal subcommands","text":"<p><code>ppd terminal</code> subcommands are used to operate PP(resource) node in <code>ppd terminal</code> command-line terminal</p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#help","title":"<code>help</code>","text":"<p>Show all the <code>ppd terminal</code> sub-commands' description.</p> <pre><code>&gt;help\n\nhelp                                                           show all the commands\nwallets                                                        acquire all wallet wallets' address\nnewwallet                                                      create new wallet, input password in prompt\nregisterpeer                                                   register peer to meta node\nrp                                                             register peer to meta node\nactivate &lt;amount&gt; &lt;fee&gt; [--gas=&lt;gas&gt;]                          send transaction to stchain to become an active PP node\nupdateDeposit &lt;depositDelta&gt; &lt;fee&gt; [--gas=&lt;gas&gt;]               send transaction to stchain to update active pp's deposit\ndeactivate &lt;fee&gt; [--gas=&lt;gas&gt;]                                 send transaction to stchain to stop being an active PP node\nstartmining                                                    start mining\nprepay &lt;amount&gt; &lt;fee&gt; [--beneficiary=&lt;beneficiary&gt;] [--gas=&lt;gas&gt;]              \n                                                               prepay stos to get ozone\nput &lt;filepath&gt; [--isEncrypted=&lt;isEncrypted&gt;] [--nodeTier=&lt;nodeTier&gt;] [--allowHigherTier=&lt;allowHigherTier&gt;]\n                                                               upload file, need to consume ozone\nputstream &lt;filepath&gt; [--nodeTier=&lt;nodeTier&gt;] [--allowHigherTier=&lt;allowHigherTier&gt;]\n                                                               upload video file for streaming, need to consume ozone. (alpha version, encode format config impossible)\nlist &lt;filename&gt;                                                query uploaded file by self\nlist &lt;page id&gt;                                                 query all files owned by the wallet, paginated\ndelete &lt;filehash&gt;                                              delete file\nget &lt;sdm://account/filehash&gt; &lt;saveAs&gt;                          download file, need to consume ozone\n    e.g:\u00a0get sdm://st1jn9skjsnxv26mekd8eu8a8aquh34v0m4mwgahg/v05ahm50ugfjrgd3ga8mqi6bqka32ks3dooe1p9g\nsharefile &lt;filehash&gt; &lt;duration&gt; &lt;is_private&gt;                   share an uploaded file\nallshare                                                       list all shared files\ngetsharefile &lt;sharelink&gt; &lt;password&gt;                            download a shared file, need to consume ozone\ncancelshare &lt;shareID&gt;                                          cancel a shared file\nclearexpshare                                                  clear all expired share links\nver                                                            version\nmonitor                                                        show monitor\nstopmonitor                                                    stop monitor\nmonitortoken                                                   show token for pp monitor service\nconfig  &lt;key&gt; &lt;value&gt;                                          set config key value\ngetoz &lt;walletAddress&gt;                                          get current ozone balance\nstatus                                                         get current resource node status\nfilestatus &lt;filehash&gt;                                          get current state of an uploaded file\nbackupstatus &lt;filehash&gt;                                        get backup status of an file\nmaintenance start &lt;duration&gt;                                   put the node in maintenance mode for the requested duration (in seconds)\nmaintenance stop                                               stop the current maintenance\ndowngradeinfo                                                  get information of last downgrade happened on this pp node\nperformancemeasure                                             turn on performance measurement log for 60 seconds\nwithdraw &lt;amount&gt; &lt;fee&gt; [--targetAddr=&lt;targetAddr&gt;] [--gas=&lt;gas&gt;]\n                                                               withdraw matured reward (from address is the configured node wallet)\nsend &lt;toAddress&gt; &lt;amount&gt; &lt;fee&gt; [--gas=&lt;gas&gt;]                  sending coins to another account (from address is the configured node wallet)\nupdateinfo &lt;fee&gt; [--moniker=&lt;moniker&gt;] [--identity=&lt;identity&gt;] [--website=&lt;website&gt;]\n           [--security_contact=&lt;security_contact&gt;] [--details=&lt;details&gt;] [--gas=&lt;gas&gt;]\n                                                               update pp node info, including the beneficiary address from config file\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#wallets","title":"<code>wallets</code>","text":"<p>acquire all wallets' addresses</p> <pre><code>wallets\n</code></pre> <p>Example:</p> <pre><code>&gt;wallets\n[INFO] 2023/01/12 11:18:07 account.go:109: st16v5pcrj9m6fgmwm7w0fn6dyxe8er3dk2nqqrhf\n[INFO] 2023/01/12 11:18:07 account.go:109: st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#newwallet","title":"<code>newwallet</code>","text":"<p>create a new wallet or recover an existing wallet, input password after prompt</p> <pre><code>newwallet &lt;wallet_name&gt;\n</code></pre> <p>Example:</p> <pre><code>&gt;newwallet mySecondWallet\nEnter wallet nickname: mySecondWallet\nEnter password: \nEnter password again: \ninput bip39 mnemonic (leave blank to generate a new one)\ninput hd-path for the account, default: \"m/44'/606'/0'/0/0\" : \nsave the mnemonic phase properly for future recovery: \n-=======================================================================  \nmother bracket treat warfare become win ivory harvest course reform theory issue group super alpha library despair sustain orient shrug lizard bulk mistake magnet\n-======================================================================= \n\n[INFO] 2023/01/12 11:17:00 setup_wallet.go:61: Wallet st16v5pcrj9m6fgmwm7w0fn6dyxe8er3dk2nqqrhf has been generated successfully\nDo you want to use this wallet as your node wallet: Y(es)/N(o): y\n[INFO] 2023/01/12 11:17:03 setting.go:291: finished changing configuration file  wallet_address:  st16v5pcrj9m6fgmwm7w0fn6dyxe8er3dk2nqqrhf\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#rp-or-registerpeer","title":"<code>rp</code> or <code>registerpeer</code>","text":"<p>Register a Resource Node to an SP(meta) node.</p> <p>Example:</p> <pre><code>&gt;rp\n&gt;[INFO] 2023/01/11 19:10:45 register_new_pp.go:25: get RspRegisterNewPP\n[INFO] 2023/01/11 19:10:45 register_new_pp.go:31: get RspRegisterNewPP RES_SUCCESS \n[INFO] 2023/01/11 19:10:45 register_new_pp.go:40: registered as PP successfully, you can deposit by `activate`\n</code></pre> <p>Tip</p> <p>After receiving the response <code>registered as PP successfully, you can deposit by activate</code>, you can execute the next <code>activate</code> command to activate your resource node.</p> <p><code>rp</code> or <code>registerpeer</code> command may raise an error because of its CPU chips which are not supported by SDS currently. For instance</p> <pre><code># Run on Macs with an Arm-based M1 chip\n\n&gt;rp\n[ERROR]2022/04/15 11:38:22 service.go:185: RPC method sds_registerPP crashed: runtime error: index out of range [0] with length 0\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#activate","title":"<code>activate</code>","text":"<p>Send transaction to Stratos chain to become an active Resource Node</p> <pre><code>activate &lt;amount&gt; &lt;fee&gt; [--gas=gas] \n</code></pre> <p>Tip</p> <p><code>amount</code> is the amount of tokens you want to deposit. 1stos = 10^9gwei = 10^18wei.</p> <p><code>fee</code> is the amount of tokens to pay as a fee for the activation transaction. 10000wei would work. It will use default value if not provide.</p> <p><code>gas</code> is the amount of gas to pay for the transaction. 1000000 would be a safe number. It will use default value if not provide.</p> <p>Example:</p> <pre><code>&gt;activate 2stos 0.01stos --gas=1000000\nRequest Accepted\n[INFO] 2023/01/12 18:49:39 activate.go:66: get RspActivatePP RES_SUCCESS \n[INFO] 2023/01/12 18:49:41 activate.go:83: The activation transaction was broadcast\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#updatedeposit","title":"<code>updateDeposit</code>","text":"<p>Update deposit of an active resource node.</p> <pre><code>updateDeposit &lt;depositDelta&gt; &lt;fee&gt; [--gas=gas] \n</code></pre> <p>Tip</p> <p><code>depositDelta</code> is the absolute amount of difference between the original and the updated deposit. It should be a positive valid token, in the unit of <code>stos</code>/<code>gwei</code>/<code>wei</code>.</p> <p>When a resource node is suspended, use this command to update its state and re-start mining by increasing its deposit.</p> <p>Example:</p> <p>The following command will increase 1stos to deposit, use 10000gwei for tx fees and 1000000 for tx gas.</p> <pre><code>&gt;updateDeposit 1stos 1000000gwei --gas=1000000\nRequest Accepted\n</code></pre> <p>Tip</p> <p>When a resource node is <code>Mining: SUSPEND</code> due to poor performance(e.g., frequently offline, task uncompleted, unstable connection, unreachable node, etc.), use this command to update its state and re-start mining by increasing its deposit.</p> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#deactivate","title":"<code>deactivate</code>","text":"<p>send transaction to Stratos-chain to stop being an active resource node</p> <pre><code>deactivate &lt;fee&gt; [--gas=gas]\n</code></pre> <p>Example:</p> <pre><code>&gt;deactivate 10000000gwei --gas=1000000\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#startminingdeprecated","title":"<code>startmining</code>(deprecated)","text":"<p>Resource node will start to receive tasks from meta nodes and thus gain mining rewards. From SDS v0.7.0, user does not need to use this command any more since resource node will start mining automatically when the status of a resource node is <code>Mining: ONLINE</code>.</p> <p>Example: <pre><code>startmining\n</code></pre></p> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#prepay","title":"<code>prepay</code>","text":"<p>Ozone is the unit of traffic used by SDS. Operations involving network traffic require ozone to be executed. User can always <code>prepay</code> stos to get Ozone any time before uploading/downloading files.</p> <pre><code>prepay &lt;amount&gt; &lt;fee&gt; [--beneficiary=&lt;beneficiary&gt;] [--gas=&lt;gas&gt;]  \n</code></pre> <p>Tip</p> <p><code>amount</code> is the amount of tokens you want to spend to purchase ozone.</p> <p>The other two parameters are the same as above.</p> <p>Example:</p> <pre><code>&gt;prepay 1stos 6000000gwei --gas=6000000\nRequest Accepted\n&gt;[INFO] 2023/01/12 10:59:07 prepay.go:24: Sending prepay message to SP! st172v4u8ysfgaphjs8uyy0svvc6d6tzl6gp07kn4\n[INFO] 2023/01/12 10:59:07 prepay.go:37: get RspPrepay RES_SUCCESS \n[INFO] 2023/01/12 10:59:09 prepay.go:46: The prepay transaction was broadcast\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#put","title":"<code>put</code>","text":"<p>upload a file. It will consume Ozone.</p> <p><pre><code>put &lt;filepath&gt; [--isEncrypted=&lt;isEncrypted&gt;] [--nodeTier=&lt;nodeTier&gt;] [--allowHigherTier=&lt;allowHigherTier&gt;]\n</code></pre> <code>filepath</code> is the location of the file to upload, starting from your resource node folder. It is better to be an absolute path.</p> <p>Example:</p> <pre><code>&gt;put relayd/node1/relayd.toml\n[INFO] 2023/01/12 12:00:05 requests.go:178: fileName~~~~~~~~~~~~~~~~~~~~~~~~ relayd.toml\n[INFO] 2023/01/12 12:00:05 requests.go:184: fileHash~~~~~~~~~~~~~~~~~~~~~~ v05ahm51l6v6tm2vqc682b9sicom61fgkoqdl0pg\nRequest Accepted\n&gt;[INFO] 2023/01/12 12:00:07 upload_slice.go:341: fileHash: v05ahm51l6v6tm2vqc682b9sicom61fgkoqdl0pg  uploaded\uff1a100.00 %\n[INFO] 2023/01/12 12:00:07 print.go:20: ####################################################################################################\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#putstream","title":"<code>putstream</code>","text":"<p>Upload a media file for streaming</p> <p>Streaming is the continuous transmission of audio or video files(media files) from a server to a client. In order to upload a streaming file, first you need to install a tool <code>ffmpeg</code> for transcoding multimedia files.</p> <p>Note</p> <p>Please note that once a media file is uploaded via this command in streaming format, it is not allowed to be downloaded via regular get command in the current version. Instead, it has to be played through the APIs that are designed for playing streaming videos.</p> <p>In Linux Terminal:</p> <p><pre><code>sudo apt update\nsudo apt install ffmpeg\n\n# use ffmpeg -version to check its version\nffmpeg -version\n</code></pre> In MacOS Terminal:</p> <pre><code>brew update\nbrew install ffmpeg\n</code></pre> <p></p> <p>Then, use <code>putstream</code> command to upload a media file</p> <pre><code>putstream &lt;filepath&gt; [--nodeTier=&lt;nodeTier&gt;] [--allowHigherTier=&lt;allowHigherTier&gt;]\n</code></pre> <p><code>filepath</code> is the absolute path of the file to be uploaded, or a relative path starting from the root directory of the resource node.</p> <p>Example:</p> <pre><code>putstream example_01.mp4\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#list-or-ls","title":"<code>list</code> or <code>ls</code>","text":"<p>List all uploaded files</p> <pre><code>ls\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#list-filename","title":"<code>list &lt;filename&gt;</code>","text":"<p>Query a specific uploaded file by name</p> <pre><code>ls filename\n</code></pre> <p>Example:</p> <pre><code>&gt;ls relayd.toml\nRequest Accepted\n&gt;[INFO] 2023/01/12 12:01:58 find_file.go:71: _______________________________\n[INFO] 2023/01/12 12:01:58 find_file.go:76: File name: relayd.toml\n[INFO] 2023/01/12 12:01:58 find_file.go:77: File hash: v05ahm51l6v6tm2vqc682b9sicom61fgkoqdl0pg\n[INFO] 2023/01/12 12:01:58 find_file.go:79: CreateTime : 1673542807\n[INFO] 2023/01/12 12:01:58 find_file.go:88: ===============================\n[INFO] 2023/01/12 12:01:58 find_file.go:89: Total: 1  Page: 0\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#list-page_id","title":"<code>list &lt;page_id&gt;</code>","text":"<p>Query all files owned, paginated by 20 items per page by default, starting with page 0.</p> <pre><code>ls page_id\n</code></pre> <p>Example:</p> <pre><code>&gt;ls 0\nRequest Accepted\n&gt;[INFO] 2023/01/12 12:03:07 find_file.go:71: _______________________________\n[INFO] 2023/01/12 12:03:07 find_file.go:76: File name: relayd.toml\n[INFO] 2023/01/12 12:03:07 find_file.go:77: File hash: v05ahm51l6v6tm2vqc682b9sicom61fgkoqdl0pg\n[INFO] 2023/01/12 12:03:07 find_file.go:79: CreateTime : 1673542807\n[INFO] 2023/01/12 12:03:07 find_file.go:88: ===============================\n[INFO] 2023/01/12 12:03:07 find_file.go:89: Total: 1  Page: 0\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#delete","title":"<code>delete</code>","text":"<p>Delete an uploaded file</p> <pre><code>delete &lt;filehash&gt;\n</code></pre> <p>Example:</p> <pre><code>&gt;delete v05ahm51l6v6tm2vqc682b9sicom61fgkoqdl0pg\nRequest Accepted\n&gt;[INFO] 2023/01/12 12:04:51 delete_file.go:36: delete success\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#get","title":"<code>get</code>","text":"<p>Download an uploaded file</p> <pre><code>get &lt;sdm://account/filehash&gt; [saveAs]\n</code></pre> <p>Tip</p> <p>Every file uploaded to SDS is attributed with a unique file hash.</p> <p>View the file hash for each of your files when you <code>list</code> your uploaded files.</p> <p>Use the optional parameter <code>saveAs</code> to rename the file.</p> <p>The downloaded files will be saved into the folder <code>download</code> by default under the root directory of your resource node, like</p> <pre><code>.\n\u251c\u2500\u2500 accounts\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 st1la7aj36gk88puz3026t3mkqfeu4q8paj3rs4gk.json\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 stsds1x5cse46ru8phd0435ncm04vh4mzj8ntp8rtpu4.json\n\u251c\u2500\u2500 configs\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 config.toml\n\u251c\u2500\u2500 download                # default downloading dir\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 README.md       # downloaded file\n\u251c\u2500\u2500 peers\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 pp-list\n\u2514\u2500\u2500 tmp\n    \u2514\u2500\u2500 logs\n</code></pre> <p>The <code>download</code> folder is defined by <code>download_path</code> in the file <code>configs/config.toml</code> under the root directory of your resource node.</p> <p>Example:</p> <pre><code>&gt;get sdm://st172v4u8ysfgaphjs8uyy0svvc6d6tzl6gp07kn4/v05ahm51l6v6tm2vqc682b9sicom61fgkoqdl0pg\nRequest Accepted\n&gt;[INFO] 2023/01/12 12:47:31 query_file_info.go:253: get\uff0cRspFileStorageInfo\n\n[INFO] 2023/01/12 12:47:31 download_slice.go:391: download starts: \n[INFO] 2023/01/12 12:47:31 download_task.go:431: downloaded\uff1a100.00 % \n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#sharefile","title":"<code>sharefile</code>","text":"<p>Share(public) an uploaded file</p> <pre><code>sharefile &lt;filehash&gt; &lt;duration&gt; &lt;is_private&gt;\n</code></pre> <p>Tip</p> <p><code>duration</code> is time period(in seconds) when the file share expires. Put <code>0</code> for unlimited time.</p> <p><code>is_private</code> is whether the file share should be protected by a password. Put <code>0</code> for public file without password, and <code>1</code> for private file with a password.</p> <p>After this command has been executed successfully, SDS will provide a password to this shared file, like <code>m216</code>.Please keep this password for future use.</p> <p>Example:</p> <pre><code>&gt;sharefile v05ahm51l6v6tm2vqc682b9sicom61fgkoqdl0pg 0 1\nRequest Accepted\n&gt;[INFO] 2023/01/12 12:53:04 share.go:131: ShareId 348f79a5a0963a56\n[INFO] 2023/01/12 12:53:04 share.go:132: ShareLink hFu8ce_348f79a5a0963a56\n[INFO] 2023/01/12 12:53:04 share.go:133: SharePassword m216\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#allshare","title":"<code>allshare</code>","text":"<p>List All Shared Files.</p> <pre><code>allshare\n</code></pre> <p>Example: <pre><code>&gt;allshare\nRequest Accepted\n&gt; [INFO] 2023/01/12 12:30:21 share.go:75: _______________________________\n[INFO] 2023/01/12 12:30:21 share.go:76: file_name: relayd.toml\n[INFO] 2023/01/12 12:30:21 share.go:77: file_hash: v05ahm51l6v6tm2vqc682b9sicom61fgkoqdl0pg\n[INFO] 2023/01/12 12:30:21 share.go:78: file_size: 676\n[INFO] 2023/01/12 12:30:21 share.go:79: link_time: 1673544576\n[INFO] 2023/01/12 12:30:21 share.go:80: link_time_exp: 1689096576\n[INFO] 2023/01/12 12:30:21 share.go:81: ShareId: e9546b33e3d63285\n[INFO] 2023/01/12 12:30:21 share.go:82: ShareLink: 4RREV0_e9546b33e3d63285\n</code></pre></p> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#getsharefile","title":"<code>getsharefile</code>","text":"<p>Download a shared file.</p> <pre><code>getsharefile &lt;sharelink&gt; [password]\n</code></pre> <p>Tip</p> <p>Leave the <code>password</code> blank if it's a public shared file.</p> <p><code>sharelink</code> could be found when your use <code>allshare</code> to list all available shared files.</p> <p>The downloaded files will be saved into the folder <code>download</code> by default under the root directory of your resource node.</p> <p>Example:</p> <pre><code>&gt;getsharefile 4RREV0_e9546b33e3d63285\nRequest Accepted\n&gt; [INFO] 2023/01/12 12:31:38 share.go:216: get RspGetShareFile RES_SUCCESS request success\n[INFO] 2023/01/12 12:31:38 share.go:222: FileInfo: [file_size:676  file_hash:\"v05ahm51l6v6tm2vqc682b9sicom61fgkoqdl0pg\"  file_name:\"relayd.toml\"  create_time:1673542807  owner_wallet_address:\"st172v4u8ysfgaphjs8uyy0svvc6d6tzl6gp07kn4\"  share_link:\"4RREV0_e9546b33e3d63285\"]\n[INFO] 2023/01/12 12:31:38 query_file_info.go:253: get\uff0cRspFileStorageInfo\n\n[INFO] 2023/01/12 12:31:38 download_slice.go:391: download starts: \n[INFO] 2023/01/12 12:31:39 download_task.go:431: downloaded\uff1a100.00 % \n\n[INFO] 2023/01/12 12:31:39 print.go:20: ####################################################################################################\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#cancelshare","title":"<code>cancelshare</code>","text":"<p>Cancel file share</p> <pre><code>cancelshare &lt;shareID&gt;\n</code></pre> <p><code>shareID</code> could be found when your use <code>allshare</code> to list all available shared files</p> <p>Example:</p> <pre><code>&gt;cancelshare e9546b33e3d63285\nRequest Accepted\n&gt;[INFO] 2023/01/12 12:52:20 share.go:172: cancel share success: e9546b33e3d63285\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#clearexpshare","title":"<code>clearexpshare</code>","text":"<p>Deletes all the expired shared links.</p> <pre><code>clearexpshare\n</code></pre> <p>Example:</p> <pre><code>&gt;clearexpshare\nRequest Accepted\n[INFO] 2023/08/08 09:41:24 clear_expired_share.go:52: ClearExpiredShareLinks done, 8 cleared, 0 remaining\n</code></pre>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#ver","title":"<code>ver</code>","text":"<p>show current SDS version</p> <p>Example:</p> <pre><code>&gt;ver\nversion: v0.10.0\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#monitor","title":"<code>monitor</code>","text":"<p>View resource utilization.</p> <pre><code>monitor\n</code></pre> <p>Example:</p> <pre><code># show the resource utilization monitor\n&gt;monitor\n[INFO] 2023/01/12 11:13:09 sys.go:143: __________________________________________________________________________\n[INFO] 2023/01/12 11:13:09 sys.go:144:         Mem         : 15967 MB  Free: 9497 MB Used:6127 Usage:38.372995%\n[INFO] 2023/01/12 11:13:09 sys.go:149:         CPU          : Intel(R) Core(TM) i7-10510U CPU @ 1.80GHz   1 cores \n[INFO] 2023/01/12 11:13:09 sys.go:149:         CPU          : Intel(R) Core(TM) i7-10510U CPU @ 1.80GHz   1 cores \n[INFO] 2023/01/12 11:13:09 sys.go:149:         CPU          : Intel(R) Core(TM) i7-10510U CPU @ 1.80GHz   1 cores \n[INFO] 2023/01/12 11:13:09 sys.go:149:         CPU          : Intel(R) Core(TM) i7-10510U CPU @ 1.80GHz   1 cores \n[INFO] 2023/01/12 11:13:09 sys.go:158:         CPU Used    : 93.367347% \n[INFO] 2023/01/12 11:13:09 sys.go:161:         HD          : 343 GB  Free: 160 GB Usage:51.431241% Path:/home/hong/stratos/sds-tropos5/sds/example/network/node1\n[INFO] 2023/01/12 11:13:09 sys.go:201:         Upload      : 0.000000 MB/s \n[INFO] 2023/01/12 11:13:09 sys.go:202:         Download    : 0.000000 MB/s \n[INFO] 2023/01/12 11:13:09 sys.go:203: __________________________________________________________________________\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#stopmonitor","title":"<code>stopmonitor</code>","text":"<p>Hide the resource utilization monitor</p> <pre><code>stopmonitor\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#monitortoken","title":"<code>monitortoken</code>","text":"<p>show token for Resource Node monitor service.</p> <p><pre><code>&gt; monitortoken\nMonitor token is: dddd608cc1c0efaf6b87267088dbc4b099b0db0758f476e625763580991a086c\n</code></pre> The returned token can be used for logging in to resource node monitor.</p> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#config","title":"<code>config</code>","text":"<p>Change a config key value pair in the file <code>configs/config.toml</code>(note: need quotes for string input. Cannot have a space character in the string).</p> <p><pre><code>config &lt;key&gt; &lt;value&gt;\n</code></pre> Example:</p> <pre><code>config keys.wallet_password 'stratos'\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#getoz","title":"<code>getoz</code>","text":"<p>Query ozone balance of a node's wallet</p> <pre><code>getoz &lt;walletAddress&gt;\n</code></pre> <p>Example:</p> <pre><code>&gt;getoz st14d6vt45ws2fz9kgma5wlcfc283xr6pqgp3sklu\ninput password\npassword: \nRequest Accepted\n&gt; [INFO] 2023/01/12 11:01:27 get_wallet_oz.go:42: get GetWalletOz RSP, the current ozone balance of st172v4u8ysfgaphjs8uyy0svvc6d6tzl6gp07kn4 = 1008215085885, \n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#status","title":"<code>status</code>","text":"<p>Query the current status of a resource node.</p> <pre><code>status\n</code></pre> <p>Example: <pre><code>&gt;status\nRequest Accepted\n&gt;[INFO] 2023/01/12 10:57:01 get_pp_status.go:80: *** current node status ***\nActivation: Active | Registration Status: Registered | Mining: ONLINE | Initial tier: 1 | Ongoing tier: 1 | Weight score: 5480\n</code></pre></p> <p>Tip</p> <p><code>Activation</code> indicates the activation state of a resource node, including <code>Active</code>, <code>Inactive</code> and <code>Unbonding</code>.</p> <p><code>Registration</code> indicates the registration of a resource node, including <code>Unregistered</code>, <code>Registering</code> and <code>Registered</code>.</p> <p><code>Mining</code> indicates the mining state of a resource node, including <code>ONLINE</code>, <code>OFFLINE</code>, <code>SUSPEND</code> and <code>MAINTENANCE</code>.</p> <p>When a resource node becomes <code>Mining: SUSPEND</code> due to its poor performance, user may use <code>updateDeposit</code> command to update its state and re-start mining by increasing its deposit.</p> <p>Meta Node assigns a <code>Weight score</code> to Resource Node depending on its performance. The more <code>Weight score</code> a Resource Node has, the more priority it has to be assigned tasks.</p> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#filestatus","title":"<code>filestatus</code>","text":"<p>Shows current state of an uploaded file.</p> <pre><code>filestatus &lt;filehash&gt;\n</code></pre> <p>Example:</p> <pre><code>&gt;filestatus v05ahm57vf1fh2k9k3c84acha4q4m1pj6ufdppho\nRequest Accepted\n&gt;[INFO] 2023/08/08 10:01:43 query_file_info.go:255: get RspFileStatus\n[INFO] 2023/08/08 10:01:43 query_file_info.go:277: RspFileStatus: {\"return\":\"0\",\"file_upload_state\":3,\"user_has_file\":true,\"replicas\":3}\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#backupstatus","title":"<code>backupstatus</code>","text":"<p>Shows backup state of a file.</p> <pre><code>backupstatus &lt;filehash&gt;\n</code></pre> <p>Example:</p> <pre><code>&gt;filestatus v05j1m52dltbs6ift7atcsup2ab9vh03umdp7pqo\nRequest Accepted\n  &gt;[INFO] 2024/04/22 21:38:12 upload_file.go:192: Backup status for file v05j1m52dltbs6ift7atcsup2ab9vh03umdp7pqo: current_replica is 5, desired_replica is 5, ongoing_backups is 0, delete_origin is true, need_reupload is false\n  [INFO] 2024/04/22 21:38:12 upload_file.go:196: Backup is finished for file v05j1m52dltbs6ift7atcsup2ab9vh03umdp7pqo, delete all the temporary slices \n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#maintenance-start","title":"<code>maintenance start</code>","text":"<p>Claim a maintenance. Put the resource node in maintenance mode for the requested duration (in seconds).</p> <pre><code>maintenance start &lt;duration&gt; \n</code></pre> <p>Tip</p> <ul> <li><code>maintenance start &lt;duration&gt;</code> command starts a maintenance activity and switches the node into <code>maintenance</code> mode for the requested duration (in seconds);</li> <li>While a Resource Node is in <code>maintenance</code> mode, it will be opt-out from any download/upload/backup tasks;</li> <li>While a Resource Node is in <code>maintenance</code> mode, it will NOT be slashed for its off-line;</li> <li>The maintenance allowance is maxed out after reach 1% up-time per year(around 87h). Then, any maintenance request will be rejected;</li> <li>The maintenance allowance will be tracked and be reset every calendar year for all nodes;</li> <li>When using the <code>maintenance stop</code> to stop the current maintenance, or the maintenance period is over, the node status reverts to <code>offline</code> and is ready to restart mining. It acts as usual to earn rewards or be slashed.</li> </ul> <p>Example:</p> <p><pre><code>&gt;maintenance start 600\nRequest Accepted\n&gt;[INFO] 2023/01/12 12:57:21 maintenance.go:19: Sending maintenance start request to SP!\n\n&gt;status\nRequest Accepted\n&gt; [INFO] 2023/01/12 12:58:19 get_pp_status.go:80: *** current node status ***\nActivation: Active | Mining: MAINTENANCE | Initial tier: 1 | Ongoing tier: 1 | Weight score: 5020\n</code></pre> Note: <code>Mining: MAINTENANCE</code> indicates that this node is in <code>maintenance</code> mode.</p> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#maintenance-stop","title":"<code>maintenance stop</code>","text":"<p>stop the current maintenance.</p> <pre><code>&gt;maintenance stop\nRequest Accepted\n&gt;[INFO] 2023/01/12 12:58:35 maintenance.go:26: Sending maintenance stop request to SP!\n[INFO] 2023/01/12 12:58:38 register_to_sp.go:104: start mining\n\n&gt;status\nRequest Accepted\n&gt; [INFO] 2023/01/12 12:59:22 get_pp_status.go:80: *** current node status ***\nActivation: Active | Mining: ONLINE | Initial tier: 1 | Ongoing tier: 1 | Weight score: 5020\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#downgradeinfo","title":"<code>downgradeinfo</code>","text":"<p>Get the information of last downgrade happened on this resource node.</p> <pre><code>&gt; downgradeinfo\nRequest Accepted\n&gt; [INFO] 2023/01/12 10:43:12 get_pp_downgrade_info.go:24: PP downgrade happened at: 111624 (heights) ago, \nat SP node stsds15sya4n40da64z6n6hvk0p9f7sx72hqpjjnrf9y, score decreased by 9999\n</code></pre> <p></p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#performancemeasure","title":"<code>performancemeasure</code>","text":"<p>Turn on performance measurement log for 60 seconds.</p> <p><pre><code>&gt; performancemeasure\n</code></pre> </p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#withdraw","title":"<code>withdraw</code>","text":"<p>Withdraw matured reward.</p> <pre><code>withdraw &lt;amount&gt; &lt;fee&gt; [--targetAddr=&lt;targetAddr&gt;] [--gas=&lt;gas&gt;]\n</code></pre> <p>Example:</p> <p><pre><code>&gt; withdraw 100stos 0.01stos --targetAddr=st19tgvkz4d4uqv68ahn90vc4mhuh63g2l7u4ad6l\n&gt; [INFO] 2023/11/30 05:51:38 withdraw.go:42: Withdraw transaction delivered.\n</code></pre> </p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#send","title":"<code>send</code>","text":"<p>Sending coins to another account.</p> <pre><code>send &lt;toAddress&gt; &lt;amount&gt; &lt;fee&gt; [--gas=&lt;gas&gt;]\n</code></pre> <p>Example:</p> <p><pre><code>&gt; send st19tgvkz4d4uqv68ahn90vc4mhuh63g2l7u4ad6l 100wei 0.01stos --gas=6000000\n&gt; [INFO] 2023/07/10 11:32:43 send.go:35: Send transaction delivered.\n</code></pre> </p>"},{"location":"docs-resource-node/ppd-terminal-subcommands/#updateinfo","title":"<code>updateinfo</code>","text":"<p>update pp node info, including the beneficiary address from config file</p> <pre><code>updateinfo &lt;fee&gt; [--moniker=&lt;moniker&gt;] [--identity=&lt;identity&gt;] [--website=&lt;website&gt;] [--security_contact=&lt;security_contact&gt;] [--details=&lt;details&gt;] [--gas=&lt;gas&gt;]\n</code></pre> <p>Example:</p> <pre><code>&gt;updateinfo 0.1stos --gas=1000000\nRequest Accepted\n&gt;[INFO] 2024/05/13 09:56:21 update_resource_node.go:66: Send transaction delivered.\n\n\n&gt;updateinfo 0.1stos --moniker=newmoniker --identity=newIdentity --website=newWebsite --security_contact=newSecurityContact --details=newDdetails --gas=1000000\nRequest Accepted\n&gt;[INFO] 2024/05/13 09:58:13 update_resource_node.go:66: Send transaction delivered.\n</code></pre> <p></p> <p>You can exit the <code>ppd terminal</code> command-line terminal by typing <code>exit</code> and leave the <code>ppd start</code> terminal to run the resource node in background.</p> <p></p> <p></p>"},{"location":"docs-resource-node/rpc-client/","title":"SDS RPC client usage","text":""},{"location":"docs-resource-node/rpc-client/#-help","title":"- <code>help</code>","text":"<pre><code>Usage:\n  rpc_client [command]\n\nAvailable Commands:\n  completion  Generate the autocompletion script for the specified shell\n  get         download a file\n  getozone    get the ozone of the wallet\n  getshared   download a shared file\n  help        Help about any command\n  list        list files\n  listshared  list shared files\n  put         upload a file\n  putstream   upload a file\n  share       share a file from uploaded files\n  stopshare   stop sharing a file\n  withdraw    withdraw matured reward\n  send        sending coins to another account\n\nFlags:\n  -h, --help            help for rpc_client\n  -u, --url string      url to the RPC server, e.g. http://3.24.59.6:8235 (default \"http://127.0.0.1:4444\")\n  -w, --wallet string   wallet address to be used (default: the first wallet in folder ./account/)\n\nUse \"rpc_client [command] --help\" for more information about a command.\n</code></pre>"},{"location":"docs-resource-node/rpc-client/#-completion","title":"- completion","text":"<p>Generates the autocompletion script for rpc_client for the specified shell.</p> <pre><code>Usage:\n  rpc_client completion [command]\n\nAvailable Commands:\n  bash        Generate the autocompletion script for bash\n  fish        Generate the autocompletion script for fish\n  powershell  Generate the autocompletion script for powershell\n  zsh         Generate the autocompletion script for zsh\n\nFlags:\n  -h, --help   help for completion\n\nGlobal Flags:\n  -u, --url string      url to the RPC server, e.g. http://3.24.59.6:8235 (default \"http://127.0.0.1:4444\")\n  -w, --wallet string   wallet address to be used (default: the first wallet in folder ./account/)\n\nUse \"rpc_client completion [command] --help\" for more information about a command.\n</code></pre> <p></p>"},{"location":"docs-resource-node/rpc-client/#for-bash","title":"for bash","text":"<p>To load completions in your current shell session:</p> <pre><code>source &lt;(rpc_client completion bash)\n</code></pre> <p>To load completions for every new session, execute once:</p> <p>Tip</p> <p>This script depends on the <code>bash-completion</code> package.</p> <p>If it is not installed already, you can install it via your OS's package manager.</p> <ul> <li>For Linux:</li> </ul> <pre><code>rpc_client completion bash &gt; /etc/bash_completion.d/rpc_client\n</code></pre> <ul> <li>For MacOS:</li> </ul> <pre><code>rpc_client completion bash &gt; $(brew --prefix)/etc/bash_completion.d/rpc_client\n</code></pre> <p>You will need to start a new shell for this setup to take effect.</p> <p></p>"},{"location":"docs-resource-node/rpc-client/#for-fish","title":"for fish","text":"<p>To load completions in your current shell session:</p> <pre><code>rpc_client completion fish | source\n</code></pre> <p>To load completions for every new session, execute once:</p> <pre><code>rpc_client completion fish &gt; ~/.config/fish/completions/rpc_client.fish\n</code></pre> <p>You will need to start a new shell for this setup to take effect.</p> <p></p>"},{"location":"docs-resource-node/rpc-client/#for-powershell","title":"for powershell","text":"<p>To load completions in your current shell session:</p> <pre><code>rpc_client completion powershell | Out-String | Invoke-Expression\n</code></pre> <p>To load completions for every new session, add the output of the above command to your powershell profile.</p> <p></p>"},{"location":"docs-resource-node/rpc-client/#for-zsh","title":"for zsh","text":"<p>If shell completion is not already enabled in your environment you will need to enable it.  You can execute the following once:</p> <pre><code>echo \"autoload -U compinit; compinit\" &gt;&gt; ~/.zshrc\n</code></pre> <p>To load completions in your current shell session:</p> <pre><code>source &lt;(rpc_client completion zsh); compdef _rpc_client rpc_client\n</code></pre> <p>To load completions for every new session, execute once:</p> <ul> <li>For Linux:</li> </ul> <pre><code>rpc_client completion zsh &gt; \"${fpath[1]}/_rpc_client\"\n</code></pre> <ul> <li>For MacOS:</li> </ul> <pre><code>rpc_client completion zsh &gt; $(brew --prefix)/share/zsh/site-functions/_rpc_client\n</code></pre> <p>You will need to start a new shell for this setup to take effect.</p> <p></p>"},{"location":"docs-resource-node/rpc-client/#-get","title":"- get","text":"<p>Downloads a file.</p> <pre><code>Usage:\n  rpc_client get &lt;sdm://account/filehash&gt; [flags]\n\nFlags:\n  -h, --help   help for get\n\nGlobal Flags:\n  -u, --url string      url to the RPC server, e.g. http://3.24.59.6:8235 (default \"http://127.0.0.1:4444\")\n  -w, --wallet string   wallet address to be used (default: the first wallet in folder ./account/)\n</code></pre> <p>Example:</p> <pre><code>rpc_client get sdm://st14rhrt576gvj6cl46tjn4pctghllmn63tm69e72/v05ahm500bfpivst07iti9krii5llj608mduoo82 \\\n--url http://127.0.0.1:4444 \\\n--wallet st14rhrt576gvj6cl46tjn4pctghllmn63tm69e72\n</code></pre> <p>Response:</p> <pre><code>[INFO] 2023/03/20 11:56:15 main.go:463: - start downloading the file:  sdm://st14rhrt576gvj6cl46tjn4pctghllmn63tm69e72/v05ahm500bfpivst07iti9krii5llj608mduoo82\n[INFO] 2023/03/20 11:56:15 main.go:475: - request downloading the file (method: user_requestDownload)\n[INFO] 2023/03/20 11:56:25 main.go:576: - downloading is done\n</code></pre> <p></p>"},{"location":"docs-resource-node/rpc-client/#-getozone","title":"- getozone","text":"<p>Queries ozone amount from a wallet address.</p> <pre><code>Usage:\n  rpc_client getozone [flags]\n\nFlags:\n  -h, --help   help for getozone\n\nGlobal Flags:\n  -u, --url string      url to the RPC server, e.g. http://3.24.59.6:8235 (default \"http://127.0.0.1:4444\")\n  -w, --wallet string   wallet address to be used (default: the first wallet in folder ./account/)\n</code></pre> <p>Example:</p> <pre><code>rpc_client getozone --url http://127.0.0.1:4444 --wallet st14rhrt576gvj6cl46tjn4pctghllmn63tm69e72\n</code></pre> <p>Response:</p> <pre><code>[INFO] 2023/03/20 12:01:20 main.go:697: - request ozone balance (method: user_requestGetOzone)\n[INFO] 2023/03/20 12:01:20 main.go:719: - received response (return: SUCCESS)\n[INFO] 2023/03/20 12:01:20 main.go:721: OZONE balance:  45511.741533115\n</code></pre> <p></p>"},{"location":"docs-resource-node/rpc-client/#-getshared","title":"- getshared","text":"<p>Downloads a shared file.</p> <pre><code>Usage:\n  rpc_client getshared &lt;filehash&gt; [flags]\n\nFlags:\n  -h, --help   help for getshared\n\nGlobal Flags:\n  -u, --url string      url to the RPC server, e.g. http://3.24.59.6:8235 (default \"http://127.0.0.1:4444\")\n  -w, --wallet string   wallet address to be used (default: the first wallet in folder ./account/)\n</code></pre> <p>Example:</p> <pre><code>rpc_client getshared v05ahm500bfpivst07iti9krii5llj608mduoo82 \\\n--url http://127.0.0.1:4444 \\\n--wallet st14rhrt576gvj6cl46tjn4pctghllmn63tm69e72\n</code></pre> <p>Response:</p> <pre><code>[INFO] 2023/03/20 12:04:59 main.go:1015: - start downloading the file: v05ahm500bfpivst07iti9krii5llj608mduoo82\n[INFO] 2023/03/20 12:04:59 main.go:1022: - request shared file information (method: user_requestGetShared)\n</code></pre> <p></p>"},{"location":"docs-resource-node/rpc-client/#-list","title":"- list","text":"<p>Lists all files uploaded by account (wallet).</p> <pre><code>Usage:\n  rpc_client list [flags]\n\nFlags:\n  -h, --help   help for list\n\nGlobal Flags:\n  -u, --url string      url to the RPC server, e.g. http://3.24.59.6:8235 (default \"http://127.0.0.1:4444\")\n  -w, --wallet string   wallet address to be used (default: the first wallet in folder ./account/)\n</code></pre> <p>Example:</p> <pre><code>rpc_client list --url http://127.0.0.1:4444 --wallet st14rhrt576gvj6cl46tjn4pctghllmn63tm69e72\n</code></pre> <p>Response:</p> <pre><code>[INFO] 2023/03/20 12:38:17 main.go:635: - request listing files (method: user_requestList)\n[INFO] 2023/03/20 12:38:17 main.go:656: - received response (return: SUCCESS)\n\nFile Name            File Hash                                 File Size Create Time\n_____________________________________________________________________________________\ntestsds1-202303142214 v05ahm5000qs4viph3u4biqt67tnels4qpguvjl8   31457280 1678824883\ntestsds1-202301221144 v05ahm5000u52005ij1osr15t0e7v8df2voh74mo   31457280 1674380707\ntestsds1-202302240758 v05ahm50010b993c3gdc28nk90bhf4aabdhaujg8   31457280 1677218311\ntestsds1-202301240119 v05ahm5001j1g84vpu28upa06n8jca40vtqbc6v8   31457280 1674516005\ntestsds1-202302092312 v05ahm500289uhi4obev6gi3vmmv5s48289vorbg   31457280 1675977162\ntestsds1-202301240902 v05ahm5002bitsbccaqv5i568vvtsnr1d2avtaa8   31457280 1674543742\ntestsds1-202301242002 v05ahm5003v4fei49lpj6rb0p1rqpjp52johdkmo   31457280 1674583378\ntestsds1-202301262228 v05ahm50040vne6f3tuk618h3me8mq4tqor3j6a0   31457280 1674764909\ntestsds1-202302181817 v05ahm5004b9epvd49uhddmmhs6g5lpfpo0h0eho   31457280 1676737093\ntestsds1-202303171340 v05ahm5004ogv5a1aa5np1m0u0q98djg0p679ih0   31457280 1679053247\ntestsds1-202301232120 v05ahm5004pvblrcqgvbu2gtmsl108dlfnsgrg80   31457280 1674501610\ntestsds1-202303041845 v05ahm5005304r88pucigun0ta3u9uirjkkroiug   31457280 1677948336\ntestsds1-202302202236 v05ahm5005bgrltqtp6eq57q8n8phsa9krtrvpsg   31457280 1676925407\ntestsds1-202302282052 v05ahm5005dpvr5p5en3hj62hqpvcjinjhqdavo0   31457280 1677610366\ntestsds1-202301211702 v05ahm5006gncteg3o7ubfl5u3g20er3jme5gkvg   31457280 1674313350\ntestsds1-202301251935 v05ahm5006is8d937529te36mpl7so1kh3des3go   31457280 1674668116\ntestsds1-202301311242 v05ahm5006tgr22ac68leu5gqitaurmqler3vt78   31457280 1675161765\ntestsds1-202301250041 v05ahm5007mtri1o1tdc9m50d2ruqspir70kejd0   31457280 1674600151\ntestsds1-202301221100 v05ahm5007n1tgrhmqbb6h9inktvqb6q7vn3in70   31457280 1674378057\ntestsds1-202301261717 v05ahm5007rcft4obagneqdv1gdnj1266bno8nco   31457280 1674746284\n_____________________________________________________________________________________\nTotal: 20    Page: 0\n</code></pre> <p></p>"},{"location":"docs-resource-node/rpc-client/#-listshared","title":"- listshared","text":"<p>Lists all files uploaded and shared by account (wallet).</p> <pre><code>Usage:\n  rpc_client listshared [flags]\n\nFlags:\n  -h, --help   help for listshared\n\nGlobal Flags:\n  -u, --url string      url to the RPC server, e.g. http://3.24.59.6:8235 (default \"http://127.0.0.1:4444\")\n  -w, --wallet string   wallet address to be used (default: the first wallet in folder ./account/)\n</code></pre> <p>Example:</p> <pre><code>rpc_client listshared --url http://127.0.0.1:4444 --wallet st14rhrt576gvj6cl46tjn4pctghllmn63tm69e72\n</code></pre> <p>Response:</p> <pre><code>[INFO] 2023/03/20 11:50:08 main.go:786: - request listing files (method: user_requestListShare)\n[INFO] 2023/03/20 11:50:08 main.go:805: - received response (return: SUCCESS)\n\nFile Name            File Hash                                 File Size Link Time  Link Exp   Share ID         Share Link     \n________________________________________________________________________________________________________________________________________\ntestsds1-202301201653 v05ahm500bfpivst07iti9krii5llj608mduoo88   31457280 1674242684 1689794684 2addd621913e02e8 Xpg6U6_2addd621913e02e8\ntestsds1-202301201451 v05ahm504onf44326v8fupkl96gogma8vs85toro   31457280 1674242858 1689794858 476a8ecddbdd29a6 TS7eFc_476a8ecddbdd29a6\ntestsds1-202301201553 v05ahm503qb6igipcbmd9q1l1gbqpkiju37c59fo   31457280 1674242786 1689794786 59cf272db46dbbdb UkDPm3_59cf272db46dbbdb\ntestsds1-202301201853 v05ahm504aftmgtqerm5npdd34bb0u1lcflpgbb8   31457280 1674242825 1689794825 6615100040081212 OQ9ndm_6615100040081212\ntestsds1-202301200915 v05ahm5041mu88dr71ndp1cag0s8kgqvlr85lce0   31457280 1674242813 1689794813 6789246235828987 qAw0PV_6789246235828987\ntestsds1-202301200808 v05ahm500l93v2ghdju34h10ehpuj05c6hnqdst8   31457280 1674242748 1689794748 858408741b47a972 LwyBT8_858408741b47a972\ntestsds1-202301201816 v05ahm501ajcimbjcvrijuuts1n7d939b180o2rg   31457280 1674242769 1689794769 9cbc8114ebf949ae SGF8Uf_9cbc8114ebf949ae\ntestsds1-202301201730 v05ahm500dpnbihbch8s1qtq29ggfebft18keah8   31457280 1674242726 1689794726 a01893d8931c4639 mAvWSE_a01893d8931c4639\ntestsds1-202301200944 v05ahm5008ps226hc4etihet1gs2el8g7gvsqqd8   31457280 1674242572 1689794572 b1649c6ddf63a93a ouX59c_b1649c6ddf63a93a\ntestsds1-202301201822 v05ahm504b5g4nn3ovi5njgu1v1odbhef10p7k68   31457280 1674242841 1689794841 d8a81f46294532d5 ZpCKeK_d8a81f46294532d5\ntestsds1-202301200705 v05ahm5008hlp1k2278ojgpc1i4t30d21pb9555g   31457280 1674242538 1689794538 ecc6169ec9a95258 5Y4amn_ecc6169ec9a95258\n________________________________________________________________________________________________________________________________________\nTotal: 11       Page: 0\n</code></pre> <p></p>"},{"location":"docs-resource-node/rpc-client/#-put","title":"- put","text":"<p>Uploads a file.</p> <pre><code>Usage:\n  rpc_client put &lt;filepath&gt; [flags]\n\nFlags:\n  -h, --help   help for put\n\nGlobal Flags:\n  -u, --url string      url to the RPC server, e.g. http://3.24.59.6:8235 (default \"http://127.0.0.1:4444\")\n  -w, --wallet string   wallet address to be used (default: the first wallet in folder ./account/)\n</code></pre> <p>Example:</p> <pre><code>rpc_client put /home/user/tmp/100MB.zip \\\n--url http://127.0.0.1:4444 \\\n--wallet st14rhrt576gvj6cl46tjn4pctghllmn63tm69e72\n</code></pre> <p>Response:</p> <pre><code>[INFO] 2023/03/20 12:14:17 main.go:179: - start uploading the file: /home/user/tmp/100MB.zip\n[INFO] 2023/03/20 12:14:17 main.go:187: - request uploading file (method: user_requestUpload)\n[INFO] 2023/03/20 12:14:33 main.go:212: - received response (return: UPLOAD_DATA)\n[INFO] 2023/03/20 12:14:33 main.go:225: - request upload date (method: user_uploadData)\n[INFO] 2023/03/20 12:14:32 main.go:244: - uploading is done\n</code></pre> <p></p>"},{"location":"docs-resource-node/rpc-client/#-putstream","title":"- putstream","text":"<p>Uploads a media file for streaming</p> <p>Streaming is the continuous transmission of audio or video files(media files) from a server to a client. </p> <p>In order to upload a streaming file, first you need to install a tool ffmpeg for transcoding multimedia files.</p> <ul> <li>In Linux Terminal:</li> </ul> <pre><code>sudo apt update\nsudo apt install ffmpeg\n\n# use ffmpeg -version to check its version\nffmpeg -version\n</code></pre> <ul> <li>In MacOS Terminal:</li> </ul> <pre><code>brew update\nbrew install ffmpeg\n</code></pre> <pre><code>Usage:\n  rpc_client putstream &lt;filepath&gt; [flags]\n\nFlags:\n  -h, --help   help for putstream\n\nGlobal Flags:\n  -u, --url string      url to the RPC server, e.g. http://3.24.59.6:8235 (default \"http://127.0.0.1:4444\")\n  -w, --wallet string   wallet address to be used (default: the first wallet in folder ./account/)\n</code></pre> <p>Example:</p> <pre><code>rpc_client putstream /home/user/tmp/file_example_MP4_640_3MG.mp4 \\\n--url http://127.0.0.1:4444 \\\n--wallet st14rhrt576gvj6cl46tjn4pctghllmn63tm69e72\n</code></pre> <p>Response:</p> <pre><code>...\n</code></pre> <p></p>"},{"location":"docs-resource-node/rpc-client/#-share","title":"- share","text":"<p>Shares a previously uploaded file.</p> <pre><code>Usage:\n  rpc_client share &lt;filehash&gt; &lt;duration&gt; &lt;is_private&gt; [flags]\n\nFlags:\n  -h, --help   help for share\n\nGlobal Flags:\n  -u, --url string      url to the RPC server, e.g. http://3.24.59.6:8235 (default \"http://127.0.0.1:4444\")\n  -w, --wallet string   wallet address to be used (default: the first wallet in folder ./account/)\n</code></pre> <p>Tip</p> <p><code>duration</code> is time period(in seconds) when the file share expires. Put 0 for unlimited time.</p> <p><code>is_private</code> is whether the file share should be protected by a password. Put 0 for public file without password, and 1 for private file with a password.</p> <p>If <code>is_private</code> has been set to '1', SDS will provide a password to this shared file, like <code>m216</code>.</p> <p>Example:</p> <pre><code>rpc_client share v05ahm500bfpivst07iti9krii5llj608mduoo82 \\\n--url http://127.0.0.1:4444 \\\n--wallet st14rhrt576gvj6cl46tjn4pctghllmn63tm69e72\n</code></pre> <p>Response:</p> <pre><code>[INFO] 2023/03/24 13:00:01 main.go:957: - request sharing file (method: user_requestShare)\n[INFO] 2023/03/24 13:00:03 main.go:976: - received response (return: SUCCESS)\nShareId:  78912f5d9bbe939r\nShareLink:  VzW5KW_78912f5d9bbe939r\n</code></pre> <p></p>"},{"location":"docs-resource-node/rpc-client/#-stopshare","title":"- stopshare","text":"<p>Stops sharing a previously uploaded file.</p> <pre><code>Usage:\n  rpc_client stopshare &lt;ShareID&gt; [flags]\n\nFlags:\n  -h, --help   help for stopshare\n\nGlobal Flags:\n  -u, --url string      url to the RPC server, e.g. http://3.24.59.6:8235 (default \"http://127.0.0.1:4444\")\n  -w, --wallet string   wallet address to be used (default: the first wallet in folder ./account/)\n</code></pre> <p>Tip</p> <p>You can get the <code>ShareID</code> from the listshared command.</p> <p>Example:</p> <pre><code>rpc_client stopshare 6789246235828987 \\\n--url http://127.0.0.1:4444 \\\n--wallet st14rhrt576gvj6cl46tjn4pctghllmn63tm69e72\n</code></pre> <p>Result:</p> <pre><code>[INFO] 2023/03/20 12:34:53 main.go:913: - request stop sharing (method: user_requestStopShare)\n[INFO] 2023/03/20 12:34:54 main.go:932: - received response (return: SUCCESS)\n</code></pre> <p></p>"},{"location":"docs-resource-node/rpc-client/#-withdraw","title":"- withdraw","text":"<p>Withdraw matured reward.</p> <pre><code>Usage:\n  rpc_client withdraw &lt;amount&gt; &lt;targetAddress&gt; &lt;fee&gt; &lt;gas&gt; [flags]\n\nFlags:\n  -h, --help   help for withdraw\n\nGlobal Flags:\n  -u, --url string      url to the RPC server, e.g. http://3.24.59.6:8235 (default \"http://127.0.0.1:4444\")\n  -w, --wallet string   wallet address to be used (default: the first wallet in folder ./account/)\n</code></pre> <p>Example:</p> <pre><code>rpc_client withdraw 100wei st19tgvkz4d4uqv68ahn90vc4mhuh63g2l7u4ad6l 0.01stos 60000 \\\n--url http://127.0.0.1:4444 \\\n--wallet st14rhrt576gvj6cl46tjn4pctghllmn63tm69e72\n</code></pre> <p>Result:</p> <pre><code>[INFO] 2023/07/11 14:10:31 rpc_client.go:1390: - request withdraw (method: owner_requestWithdraw)\n[INFO] 2023/07/11 14:10:31 rpc_client.go:1411: - received response (return: SUCCESS)\n</code></pre> <p>Tip</p> <p>You can use 'stchaind' binary to withdraw instead.</p> <p>1: Prepare the stchaind binary.</p> <p>2: Convert the sds wallet key file into stchaind format using bip39 mnemonic.     ./stchaind keys add testuser --home node/stchaind --keyring-backend test --hd-path \"m/44'/606'/0'/0/0\"</p> <p>3: Send the 'withdraw' tx to the node through the rpc interface of the stratos-chain      ./stchaind tx pot withdraw --amount=100ustos --from=st19tgvkz4d4uqv68ahn90vc4mhuh63g2l7u4ad6l \\                                --target-address=st19tgvkz4d4uqv68ahn90vc4mhuh63g2l7u4ad6l --chain-id=testchain \\                                --keyring-backend=test --home=./node/stchaind --gas=auto --gas-prices=1gwei \\                                --node \"tcp://localhost:26657\"</p> <p></p>"},{"location":"docs-resource-node/rpc-client/#-send","title":"- send","text":"<p>Sending coins to another account.</p> <pre><code>Usage:\n  rpc_client send &lt;toAddress&gt; &lt;amount&gt; &lt;fee&gt; &lt;gas&gt; [flags]\n\nFlags:\n  -h, --help   help for send\n\nGlobal Flags:\n  -u, --url string      url to the RPC server, e.g. http://3.24.59.6:8235 (default \"http://127.0.0.1:4444\")\n  -w, --wallet string   wallet address to be used (default: the first wallet in folder ./account/)\n</code></pre> <p>Example:</p> <pre><code>rpc_client send st19tgvkz4d4uqv68ahn90vc4mhuh63g2l7u4ad6l 100wei 0.01stos 60000 \\\n--url http://127.0.0.1:4444 \\\n--wallet st14rhrt576gvj6cl46tjn4pctghllmn63tm69e72\n</code></pre> <p>Result:</p> <pre><code>[INFO] 2023/07/11 14:20:40 rpc_client.go:1437: - request send (method: owner_requestSend)\n[INFO] 2023/07/11 14:20:40 rpc_client.go:1458: - received response (return: SUCCESS)\n</code></pre> <p>Tip</p> <p>You can use 'stchaind' binary to send instead.</p> <p>1: Prepare the stchaind binary.</p> <p>2: Convert the sds wallet key file into stchaind format using bip39 mnemonic.     ./stchaind keys add testuser --home node/stchaind --keyring-backend test --hd-path \"m/44'/606'/0'/0/0\"</p> <p>3: Send the 'send' tx to the node through the rpc interface of the stratos-chain      ./stchaind tx bank send st19tgvkz4d4uqv68ahn90vc4mhuh63g2l7u4ad6l st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m 10000wei \\                         --chain-id=testchain  --keyring-backend=test --home=./node/stchaind --gas=auto --gas-prices=1gwei \\                         --node \"tcp://localhost:26657\"</p> <p></p> <p></p>"},{"location":"docs-resource-node/sds-ipfs-handbook/","title":"SDS IPFS Command Handbook","text":""},{"location":"docs-resource-node/sds-ipfs-handbook/#ipfs-client","title":"IPFS Client","text":"<p>The <code>ppd ipfs</code> command launches an RPC-style API over HTTP client to allow user interact with a SDS Network. The API aligns  with the Kubo RPC API of IPFS so that any application that supports IPFS Kubo RPC API could be updated to support SDS network with little effort. The client needs to communicate with a SDS resource node to interact with the network. For setting up a  SDS resource node please refer to  Setup and run a SDS Resource Node</p> <pre><code>ppd ipfs -h\n\nipfs api server attached to node demon\n\nUsage:\n  ppd ipfs [flags]\n  ppd ipfs [command]\n\nAvailable Commands:\n  config      create config file for ipfs api server\n  migrate     migrate ipfs file to sds\n\nFlags:\n  -h, --help                   help for ipfs\n      --httpRpcUrl string      http rpc url (default \"http://127.0.0.1:9301\")\n      --ipcEndpoint string     ipc endpoint path\n      --password string        wallet password\n  -p, --port string            port (default \"6798\")\n  -m, --rpcMode string         use http rpc or ipc (default \"ipc\")\n      --walletAddress string   wallet address\n\nGlobal Flags:\n  -c, --config string   configuration file path  (default \"./config/config.toml\")\n  -r, --home string     path for the node (default \"&lt;root directory of your resource node&gt;\")\n\nUse \"ppd ipfs [command] --help\" for more information about a command.\n</code></pre> <p></p> <p>There are two modes to communicate to a SDS resource node, and it could be switched by the --rpcMode flag</p> <ul> <li><code>httpRpc</code> mode is to send RPC request over http. In this mode the <code>httpRpcUrl</code> flag must point to the rpc port of the  resource node      <pre><code>ppd ipfs --rpcMode httpRpc --httpRpcUrl http://&lt;node url&gt;:&lt;node rpc port&gt;\n</code></pre></li> <li><code>ipc</code> mode is to send PRC requests over IPC (Inter-process communication). The path to the ipc endpoint is set      by the flag <code>ipcEndpoint</code>. The default path will be used when flag is not set.     <pre><code>ppd ipfs --rpcMode ipc --ipcEndpoint &lt;path to the ipc endpoint&gt;\n</code></pre> </li> </ul>"},{"location":"docs-resource-node/sds-ipfs-handbook/#config-file","title":"Config File","text":"<p>All the parameters could be pre-defined in the config file <code>ipfs_config.toml</code> placed in the folder <code>config</code> under the home path (defined by -r or --home flag).</p>"},{"location":"docs-resource-node/sds-ipfs-handbook/#template","title":"Template","text":"<pre><code>[connectivity]\nipfs_port=\"port for the ipfs api server\"\nrpc_mode='httpRpc or ipc'\nhttp_rpc_url='http://&lt;node url&gt;:&lt;node rpc port&gt;'\nipc_endpoint='path to the ipc endpoint'\n\n[keys]\nwallet_address = 'wallet address stxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'\nwallet_password = 'wallet password'\n</code></pre>"},{"location":"docs-resource-node/sds-ipfs-handbook/#folder-structure","title":"Folder Structure","text":"<p>Folder structure under the home path</p> Folder Content accounts wallet files Eg: \"stxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.json\" config config file \"ipfs_config.toml\""},{"location":"docs-resource-node/sds-ipfs-handbook/#rpc-commands","title":"RPC Commands","text":""},{"location":"docs-resource-node/sds-ipfs-handbook/#apiv0add","title":"/api/v0/add","text":"<p>Upload a file to SDS. Arguments - arg [string]: The path to the file on the local driver. Required: yes.</p> <p>cURL Example</p> <pre><code>curl -X POST  \"localhost:6798/api/v0/add?arg=testfile\"\n</code></pre> <p></p>"},{"location":"docs-resource-node/sds-ipfs-handbook/#apiv0get","title":"/api/v0/get","text":"<p>Download a file from SDS. Arguments - arg [string]: sdm path to the file in the SDS. The format is <code>&lt;sdm://account/filehash&gt;</code>. Required: yes.</p> <p>Tip</p> <p>Every file uploaded to SDS is attributed with a unique file hash.</p> <p>View the file hash for each of your files when you <code>list</code> your uploaded files.</p> <p>The downloaded files will be saved into the folder <code>download</code> by default under the root directory of your resource node, like</p> <p>cURL Example</p> <pre><code>curl -X POST  \"localhost:6798/api/v0/get?arg=sdm://st172v4u8ysfgaphjs8uyy0svvc6d6tzl6gp07kn4/v05ahm51l6v6tm2vqc682b9sicom61fgkoqdl0pg\"\n</code></pre> <p></p>"},{"location":"docs-resource-node/sds-ipfs-handbook/#apiv0ls","title":"/api/v0/ls","text":"<p>Lists all files uploaded by account (wallet). Arguments - page [string]: page number. Each page contains 20 elements. Required: no.</p> <p>cURL Example</p> <pre><code>curl -X POST  \"localhost:6798/api/v0/ls?page=0\"\n</code></pre> <p></p>"},{"location":"docs-resource-node/sds-ipfs-handbook/#ipfs-migrate","title":"IPFS Migrate","text":"<p>The <code>ppd ipfs migrate</code> command migrates a file from IPFS to SDS network. It first downloads the file from the IPS by the  given CID and then uploads it to the SDS network.</p> <p><pre><code>ppd ipfs migrate &lt;filecid&gt; &lt;filename&gt;\n</code></pre> <code>filecid</code> is the cid of the file to downloaded from IPFS. <code>filename</code> is an optional parameter. When it is given, the file will be renamed to <code>filename</code> before it is uploaded  to the SDS network.</p> <p>Example: <pre><code>ipfs -m httpRpc migrate QmSgvgwxZGaBLqkGyWemEDqikCqU52XxsYLKtdy3vGZ8uq spaceship.jpg\n\nAPI server listening at: [::]:40255\n[INFO] 2023/08/03 09:16:03 file.go:126: -- Getting an IPFS node running -- \nSpawning Kubo node on a temporary repo\n2023/08/03 09:16:03 failed to sufficiently increase receive buffer size (was: 208 kiB, wanted: 2048 kiB, got: 416 kiB). See https://github.com/lucas-clemente/quic-go/wiki/UDP-Receive-Buffer-Size for details.\n[INFO] 2023/08/03 09:16:13 file.go:147: IPFS node is running\n[INFO] 2023/08/03 09:16:13 file.go:149: -- getting back files --\n[INFO] 2023/08/03 09:16:13 file.go:157: output folder: /tmp/ipfs/QmSgvgwxZGaBLqkGyWemEDqikCqU52XxsYLKtdy3vGZ8uq\n[INFO] 2023/08/03 09:16:14 file.go:176: got file back from IPFS (IPFS path: /ipfs/QmSgvgwxZGaBLqkGyWemEDqikCqU52XxsYLKtdy3vGZ8uq) and wrote it to /tmp/ipfs/QmSgvgwxZGaBLqkGyWemEDqikCqU52XxsYLKtdy3vGZ8uq/spaceship.jpg\n[DEBUG] 2023/08/03 09:16:14 file.go:48: filehash v05ahm50sk6ldkpg2j11c5qdm5q1arair6rvuivo\n[INFO] 2023/08/03 09:16:14 rootcmd.go:59: - start uploading the file: /tmp/ipfs/QmSgvgwxZGaBLqkGyWemEDqikCqU52XxsYLKtdy3vGZ8uq/spaceship.jpg\n[INFO] 2023/08/03 09:16:14 rootcmd.go:67: - request get ozone (method: user_requestGetOzone)\n[DEBUG] 2023/08/03 09:16:18 requester.go:36: --&gt;  {\"jsonrpc\":\"2.0\",\"id\":1,\"method\":\"user_requestGetOzone\",\"params\":[{\"walletaddr\":\"st1vvysda6ylqz2adauqg4djsz4rx6hv6mqv9fepp\"}]}\n[DEBUG] 2023/08/03 09:16:18 requester.go:57: &lt;--  {\"jsonrpc\":\"2.0\",\"id\":1,\"result\":{\"return\":\"0\",\"ozone\":\"19660978\",\"sequencynumber\":\"SN:0000000000000000011\"}}\n\n[INFO] 2023/08/03 09:16:18 rootcmd.go:81: - request uploading file (method: user_requestUpload)\n[DEBUG] 2023/08/03 09:16:18 requester.go:38: --&gt;  {\"jsonrpc\":\"2.0\",\"id\":1,\"method\":\"user_requestUpload\",\"params\":[{\"filename\":\"/tmp/ipfs/QmSgvgwxZGaBLqkGyWemEDqikCqU52XxsYLKtdy3vGZ8uq/spaceship.jpg\",\"filesize\":276382,\"filehash\":\"v05a ... \"}]}\n[DEBUG] 2023/08/03 09:16:18 requester.go:57: &lt;--  {\"jsonrpc\":\"2.0\",\"id\":1,\"result\":{\"return\":\"1\",\"offsetstart\":0,\"offsetend\":276382}}\n\n[INFO] 2023/08/03 09:16:18 rootcmd.go:91: - received response (return: UPLOAD_DATA)\n[INFO] 2023/08/03 09:16:18 rootcmd.go:103: - request upload date (method: user_uploadData)\n[DEBUG] 2023/08/03 09:16:18 requester.go:38: --&gt;  {\"jsonrpc\":\"2.0\",\"id\":1,\"method\":\"user_uploadData\",\"params\":[{\"filehash\":\"v05ahm50sk6ldkpg2j11c5qdm5q1arair6rvuivo\",\"data\":\"/9j/4AAQSkZJRgABAQEASABIAAD/4gIcSUNDX1BST0ZJTEUAAQEAAAIMbGNtcwIQAABtbnRyUkdCIFhZWiAH3AABABkAAwApADlhY3NwQV ... \"}]}\n[DEBUG] 2023/08/03 09:16:18 requester.go:57: &lt;--  {\"jsonrpc\":\"2.0\",\"id\":1,\"result\":{\"return\":\"0\"}}\n\n[INFO] 2023/08/03 09:16:18 rootcmd.go:111: - uploading is done\nuploading is done\n</code></pre></p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/","title":"SDS RPC for file operations","text":"<p>The API is based on JSON-RPC 2.0 specs. The user works as a client and a resource node provides service as a server.</p> <p>When the client sends a request to the server by calling to a method, the server sends the response back as the return.</p> <p>The format of a request message is:</p> <pre><code>{\n    \"jsonrpc\":\"2.0\",\n    \"id\":1,\n    \"method\":\"user_methodName\",\n    \"params\":[\n        {\n            \"param1\":\"valueOfParam1\",\n            \"param2\":valueOfParam2,\n            ...\n        }\n    ]\n}\n</code></pre> <p>The format of a response message is:</p> <pre><code>{\n    \"jsonrpc\":\"2.0\",\n    \"id\":1,\n    \"result\":\n        {\n            \"return\":\"1\",\n            \"extra_result_object1\":value_object1,\n            \"extra_result_object2\":value_object2,\n            ...\n        }\n}\n</code></pre> <p>When \"return\" object in \"result\" is a string encoded negative number, it carries an error. </p> <pre><code>    \"-1\":  GENERIC_ERR           \n    \"-3\":  SIGNATURE_FAILURE \n    \"-4\":  WRONG_FILE_SIZE \n    \"-5\":  OPERATION_TIME_OUT \n    \"-6\":  FILE_REQ_FAILURE \n    \"-7\":  WRONG_INPUT \n    \"-8\":  WRONG_PP_ADDRESS \n    \"-9\":  INTERNAL_DATA_FAILURE \n    \"-10\": INTERNAL_COMM_FAILURE \n    \"-11\": WRONG_FILE_INFO \n    \"-12\": WRONG_WALLET_ADDRESS\n</code></pre> <p></p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#upload-a-file","title":"Upload a File","text":"<p>Three methods are used to accomplish uploading a file.</p> <ul> <li>user_requestGetOzone: get ozone balance and sequence number</li> <li>user_requestUpload: start uploading a file</li> <li>user_uploadData: upload a piece of file data </li> </ul>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#user_requestgetozone","title":"user_requestGetOzone","text":"<p>A request for ozone needs to be done before uploading a file. This method allows a check for ozone balance and a sequence number to be used in next uploading methods.  </p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#parameters","title":"Parameters","text":"name type comment walletaddr string wallet address of the user account"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#returns","title":"Returns","text":"name type comment return string negative: errors; \"1\": success and expect for next user_uploadData; other values: invalid ozone string the balance of nano ozone of this wallet sequencynumber string a sequence number to be used in uploading a file"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#example","title":"Example","text":"<p>Request <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"method\": \"user_requestGetOzone\",\n  \"params\": [\n    {\n      \"walletaddr\": \"st1r2gh2h8kjtz4slek6aua95ukyd8zmey2y9uatt\"\n    }\n  ]\n}\n</code></pre> Response <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"result\": {\n    \"return\": \"0\",\n    \"ozone\": \"257695561060\",\n    \"sequencynumber\": \"SN:0000000000000000028\"\n  }\n}\n</code></pre></p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#user_requestupload","title":"user_requestUpload","text":"<p>To request to upload a file. The result could carry the offsets of a piece of the file to be uploaded if the request succeeded.</p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#parameters_1","title":"Parameters","text":"name type comment filename string name of the file filesize number size of the file, in byte filehash string file hash to identify a file <sup>1</sup> signature object signature on this message desired_tier number the desired tier to store the file allow_higher_tier boolean if higher tier allowed when no desired tier can't be found req_time number the epoch time when this request is made <p>Object signature</p> name type comment address string wallet address of the user account pubkey string public key of wallet address signature string signed on a message <sup>2</sup><sup>3</sup>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#returns_1","title":"Returns","text":"name type comment return string negative: errors; \"1\": success and expect for next user_uploadData; other values: invalid offsetstart number the offset of beginning of the piece of file data, inclusive offsetend number the offset of end of the piece of file data, exclusive"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#example_1","title":"Example","text":"<p>Request</p> <pre><code>{\n \"jsonrpc\": \"2.0\",\n \"id\": 1,\n \"method\": \"user_requestUpload\",\n \"params\": [\n  {\n   \"filename\": \"test_10m\",\n   \"filesize\": 10485760,\n   \"filehash\": \"v05j1m571efv3vuk3tq7airrfglanjvts4jrd4l8\",\n   \"signature\": {\n    \"address\": \"st144ykkar9fhl8khs7lwz0s7py9vj4w9adp37kt9\",\n    \"pubkey\": \"stpub1q0ska45w724dy0n0jujuqcvn2c80fa9c69dth0v9flacxrxp7w2rsncclps\",\n    \"signature\": \"178e5a84d721d8893b402fb502cbd66dbc349536f720bdaabd1674cd99e3a5272cd8a40ba0da9a61fe71abb1d0c4530de44983531b99d0e349a801e46c7b16d100\"\n   },\n   \"desired_tier\": 2,\n   \"allow_higher_tier\": true,\n   \"req_time\": 1701267007\n  }\n ]\n}\n</code></pre> <p>Response</p> <pre><code>{\n \"jsonrpc\": \"2.0\",\n \"id\": 1,\n \"result\": {\n  \"return\": \"1\",\n  \"offsetstart\": 0,\n  \"offsetend\": 3500000\n }\n}\n</code></pre>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#user_uploaddata","title":"user_uploadData","text":"<p>Send a piece of file data to server according to the offset previously provided by the server.</p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#parameters_2","title":"Parameters","text":"name type comment filehash string file hash to identify a file data string data of the piece of the file <sup>4</sup>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#returns_2","title":"Returns","text":"name type comment return string negative: errors; \"1\": success and offsets for next user_uploadData; \"0\": finished uploading; other values: invalid offsetstart number the offset of begining of the piece of file data, inclusive offsetend number the offset of end of the piece of file data, exclusive"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#example_2","title":"Example","text":"<p>Request</p> <pre><code>{\n \"jsonrpc\": \"2.0\",\n \"id\": 1,\n \"method\": \"user_uploadData\",\n \"params\": [\n  {\n   \"filehash\": \"v05j1m571efv3vuk3tq7airrfglanjvts4jrd4l8\",\n   \"data\": \"xfYRzYszM+NbWW/nZJZqmI8W9aGlaFt7SBkkuL5nkx/5L ... \"\n  }\n ]\n}\n</code></pre> <p>Response</p> <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"result\": {\n    \"return\": \"1\",\n    \"offsetstart\": 3500000,\n    \"offsetend\": 7000000\n  }\n}\n</code></pre> <p></p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#list-files","title":"List Files","text":"<p>List files owned by this account.</p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#user_requestlist","title":"user_requestList","text":"<p>Request listing files owned by the account with the wallet address.</p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#parameters_3","title":"Parameters","text":"name type comment signature object signature on this message page number the list is paginated. Page number start from 0. req_time number the epoch time when this request is made <p>Object signature</p> name type comment address string wallet address of the user account pubkey string public key of wallet address signature string signed on a message <sup>2</sup><sup>3</sup>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#returns_3","title":"Returns","text":"name type comment return string negative: errors; \"0\": success; other value: invalid fileinfo objects information for each file <p>In fileinof, these objects are included</p> name type comment filehash string file hash to identify the file <sup>1</sup> filesize number size of the file, in byte filename string name of the file createtime number unix epoch time when the file was created"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#examples","title":"Examples","text":"<p>Request</p> <pre><code>{\n \"jsonrpc\": \"2.0\",\n \"id\": 1,\n \"method\": \"user_requestList\",\n \"params\": [\n  {\n   \"signature\": {\n    \"address\": \"st144ykkar9fhl8khs7lwz0s7py9vj4w9adp37kt9\",\n    \"pubkey\": \"stpub1q0ska45w724dy0n0jujuqcvn2c80fa9c69dth0v9flacxrxp7w2rsncclps\",\n    \"signature\": \"75d54f5b302d5c9d34ba0fe70153b4a1d7b6e54be90585ab706dc97ce038da4431a4053f976c14d1227af2a14b5a61a5133da634380e9d7ba67830cc52c2ec5001\"\n   },\n   \"page\": 0,\n   \"req_time\": 1701313602\n  }\n ]\n}\n</code></pre> <p>Response</p> <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"result\": {\n    \"return\": \"0\",\n    \"fileinfo\": [\n      {\n        \"filehash\": \"v05ahm51atjqkpte7gnqa94bl3p731odvvdvfvo8\",\n        \"filesize\": 200000000,\n        \"filename\": \"file1_200M_jan22\",\n        \"createtime\": 1674433580\n      },\n      {\n        \"filehash\": \"v05ahm51buqelg70rjmcbqtn2qijc7um0ds1oedo\",\n        \"filesize\": 10000000,\n        \"filename\": \"file2_10M_jan20\",\n        \"createtime\": 1674250085\n      },\n      {\n        \"filehash\": \"v05ahm52po4iteumn1v58o3marnruc7l75km9rv8\",\n        \"filesize\": 50000000,\n        \"filename\": \"file3_50M_jan20\",\n        \"createtime\": 1674250338\n      },\n      {\n        \"filehash\": \"v05ahm53ec2f5c9lh92cqapp0mvtfcdphj1deb00\",\n        \"filesize\": 100000000,\n        \"filename\": \"file1_100M_jan20\",\n        \"createtime\": 1674240637\n      },\n      {\n        \"filehash\": \"v05ahm54ia4o2p8vjpluolshiugn1mrgqqhht6o0\",\n        \"filesize\": 209715200,\n        \"filename\": \"test_200m.bin\",\n        \"createtime\": 1674489434\n      },\n      {\n        \"filehash\": \"v05ahm54qtdk0oogho52ujtk5v6rdlpbhumfshmg\",\n        \"filesize\": 10000000,\n        \"filename\": \"file4_10M_jan20\",\n        \"createtime\": 1674253605\n      }\n    ],\n    \"totalnumber\": 6\n  }\n}\n</code></pre> <p></p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#download-a-file","title":"Download a File","text":"<p>To download a file, there are four methods to be used. </p> <ul> <li>user_requestGetOzone: get ozone balance and sequence number </li> <li>user_requestDownload: to start downloading the file </li> <li>user_downloadData: to request a piece of file data</li> <li>user_downloadedFileInfo: request server verification of the downloaded file</li> </ul>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#user_requestgetozone_1","title":"user_requestGetOzone","text":"<p>A request for ozone needs to be done before uploading a file. This method allows a check for ozone balance and a sequence number to be used in next uploading methods.</p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#parameters_4","title":"Parameters","text":"name type comment walletaddr string wallet address of the user account #### Returns name type comment return string negative: errors; \"1\": success and expect for next user_uploadData; other values: invalid ozone string the balance of nano ozone of this wallet sequencynumber string a sequence number to be used in uploading a file"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#example_3","title":"Example","text":"<p>Request <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"method\": \"user_requestGetOzone\",\n  \"params\": [\n    {\n      \"walletaddr\": \"st1r2gh2h8kjtz4slek6aua95ukyd8zmey2y9uatt\"\n    }\n  ]\n}\n</code></pre> Response <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"result\": {\n    \"return\": \"0\",\n    \"ozone\": \"257695561060\",\n    \"sequencynumber\": \"SN:0000000000000000028\"\n  }\n}\n</code></pre></p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#user_requestdownload","title":"user_requestDownload","text":"<p>To start downloading a file. A piece of fire data is carried in the response while successfully started.  </p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#parameters_5","title":"Parameters","text":"name type comment filehandle string url of the file in sdm:// format <sup>5</sup> signature object signature on this message req_time number the epoch time when this request is made Object signature name type comment address string wallet address of the user account pubkey string public key of wallet address signature string signed on a message <sup>2</sup><sup>3</sup>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#returns_4","title":"Returns","text":"name type comment return string negative: errors; \"2\": file data provided; other value: invalid reqid string to identify download instances when multiple download happen at same time offsetstart number the offset of beginning of the piece of file data, inclusive offsetend number the offset of end of the piece of file data, exclusive filename string the name of the file filedata string data of the piece of the file <sup>4</sup>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#example_4","title":"Example","text":"<p>Request</p> <pre><code>{\n \"jsonrpc\": \"2.0\",\n \"id\": 1,\n \"method\": \"user_requestDownload\",\n \"params\": [\n  {\n   \"filehandle\": \"sdm://st144ykkar9fhl8khs7lwz0s7py9vj4w9adp37kt9/v05j1m571efv3vuk3tq7airrfglanjvts4jrd4l8\",\n   \"signature\": {\n    \"address\": \"st144ykkar9fhl8khs7lwz0s7py9vj4w9adp37kt9\",\n    \"pubkey\": \"stpub1q0ska45w724dy0n0jujuqcvn2c80fa9c69dth0v9flacxrxp7w2rsncclps\",\n    \"signature\": \"9f8a13fe02cebe66b5144d7ef308c5b1c4d2f2f47a5509fa0921fd16463e2f4f66e77ed8068934307e39a47630e3ff4c3ff62fca403eedc3b9a59997ce145d6400\"\n   },\n   \"req_time\": 1701314045\n  }\n ]\n}\n</code></pre> <p>Response</p> <pre><code>{\n \"jsonrpc\":\"2.0\",\n \"id\":1,\n \"result\":{\n  \"return\":\"2\",\n  \"reqid\":\"58bb018a-bc6d-446b-bb9c-89867b5c1fe9\",\n  \"offsetstart\":0,\n  \"offsetend\":3145728,\n  \"filename\":\"test_10m\",\n  \"filedata\":\"xfYRzYszM+NbWW/nZJZqmI8W9aGz+uNVZJAUUDdoUpbnVvd2fOFJcz54642jxk5ZjcIQQv1i/lVehc36v/Czk0Pi5PPxZK ... \"\n }\n}    \n</code></pre>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#user_downloaddata","title":"user_downloadData","text":"<p>After the user handles previous piece of file data, this method is called to get the next piece.</p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#parameters_6","title":"Parameters","text":"name type comment filehash string file hash to identify a file <sup>1</sup> reqid string the same reqid get from response of user_requestDownload"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#returns_5","title":"Returns","text":"name type comment return string negative: errors; \"2\": file data provided; \"3\": no data and ask for calling user_downloadedFileInfo reqid string to identify download instances when multiple download happen at same time offsetstart number the offset of beginning of the piece of file data, inclusive offsetend number the offset of end of the piece of file data, exclusive filename string the name of the file filedata string data of the piece of the file <sup>4</sup>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#example_5","title":"Example","text":"<p>Request</p> <pre><code>{\n \"jsonrpc\": \"2.0\",\n \"id\": 1,\n \"method\": \"user_downloadData\",\n \"params\": [\n  {\n   \"filehash\": \"v05ahm51buqelg70rjmcbqtn2qijc7um0ds1oedo\",\n   \"reqid\": \"c97eafef-401f-49d1-bff3-7ce9eaa2c2dd\"\n  }\n ]\n}\n</code></pre> <p>Response</p> <pre><code>{\n \"jsonrpc\":\"2.0\",\n \"id\":1,\n \"result\": {\n   \"return\": \"2\",\n   \"offsetstart\": 3145728,\n   \"offsetend\": 6291456,\n   \"filename\": \"test_10m\",\n   \"filedata\": \"QYILair4V84YdEyU+9kfOfwrGmNz7OIkxzlTcKiMk4aNcmwiLMDXScf+S17gUWpQds8oW88eLFCqdOaHPmrZYmqhFjGFV ... \"\n }\n}\n</code></pre> <p>Another Instance of Response</p> <pre><code>{\n \"jsonrpc\": \"2.0\",\n \"id\": 1,\n \"result\": {\n  \"return\": \"3\",\n  \"reqid\": \"c97eafef-401f-49d1-bff3-7ce9eaa2c2dd\"\n }\n}\n</code></pre>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#user_downloadedfileinfo","title":"user_downloadedFileInfo","text":"<p>After the user received all pieces of the file and a response of user_downloadData with return value \"3\", this method is called to let the server verify file information and finish downloading.</p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#parameters_7","title":"Parameters","text":"name type comment filehash string recalculated file hash upon the received file <sup>1</sup> filesize number size of the file, in byte reqid string the same reqid get from response of user_requestDownload"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#returns_6","title":"Returns","text":"name type comment return string negative: errors; \"0\": successful finished; other values: invalid"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#example_6","title":"Example","text":"<p>Request</p> <pre><code>{\n \"jsonrpc\": \"2.0\",\n \"id\": 1,\n \"method\": \"user_downloadedFileInfo\",\n \"params\": [\n  {\n   \"filehash\": \"v05ahm51buqelg70rjmcbqtn2qijc7um0ds1oedo\",\n   \"filesize\": 10000000,\n   \"reqid\": \"c97eafef-401f-49d1-bff3-7ce9eaa2c2dd\"\n  }\n ]\n}\n</code></pre> <p>Response</p> <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"result\": {\n    \"return\": \"0\"\n  }\n}\n</code></pre> <p></p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#share-a-file","title":"Share a File","text":""},{"location":"docs-resource-node/sds-rpc-for-file-operation/#user_requestshare","title":"user_requestShare","text":""},{"location":"docs-resource-node/sds-rpc-for-file-operation/#parameters_8","title":"Parameters","text":"name type comment filehash string file hash to identify a file <sup>1</sup> signature object signature on this message duration number duration in second sharing the file privateflag bool if the file is private req_time number the epoch time when this request is made <p>Object signature</p> name type comment address string wallet address of the user account pubkey string public key of wallet address signature string signed on a message <sup>2</sup><sup>3</sup>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#returns_7","title":"Returns","text":"name type comment return string negative: errors; \"0\": success; other values: invalid shareid string uniq identifier for this sharing sharelink string link for accessing this shared file"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#example_7","title":"Example","text":"<p>Request</p> <pre><code>{\n \"jsonrpc\": \"2.0\",\n \"id\": 1,\n \"method\": \"user_requestShare\",\n \"params\": [\n  {\n   \"filehash\": \"v05j1m571efv3vuk3tq7airrfglanjvts4jrd4l8\",\n   \"signature\": {\n    \"address\": \"st144ykkar9fhl8khs7lwz0s7py9vj4w9adp37kt9\",\n    \"pubkey\": \"stpub1q0ska45w724dy0n0jujuqcvn2c80fa9c69dth0v9flacxrxp7w2rsncclps\",\n    \"signature\": \"c1d2b4b427689cdb7a9e5cdc58a405190e07bc608ec492c2efa0bba0d7c05ec11e963ed9b78a303a6adae608642d10257b70214acad8dac658b42d11bba998f001\"\n   },\n   \"duration\": 0,\n   \"bool\": false,\n   \"req_time\": 1701315117\n  }\n ]\n}\n</code></pre> <p>Response</p> <pre><code>{\n \"jsonrpc\": \"2.0\",\n \"id\": 1,\n \"result\": {\n  \"return\": \"0\",\n  \"shareid\": \"78a8fe38a826fed4\",\n  \"sharelink\": \"RHumTB_78a8fe38a826fed4\"\n }\n}\n</code></pre> <p></p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#stop-sharing-a-file","title":"Stop Sharing a File","text":""},{"location":"docs-resource-node/sds-rpc-for-file-operation/#user_requeststopshare","title":"user_requestStopShare","text":""},{"location":"docs-resource-node/sds-rpc-for-file-operation/#parameters_9","title":"Parameters","text":"name type comment signature object signature on this message shareid string a uniq identifier for this sharing req_time number the epoch time when this request is made <p>Object signature</p> name type comment address string wallet address of the user account pubkey string public key of wallet address signature string signed on a message <sup>2</sup><sup>3</sup>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#returns_8","title":"Returns","text":"name type comment return string negative: errors; \"0\": success; other values: invalid"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#example_8","title":"Example","text":"<p>Request</p> <pre><code>{\n \"jsonrpc\": \"2.0\",\n \"id\": 1,\n \"method\": \"user_requestStopShare\",\n \"params\": [\n  {\n   \"signature\": {\n    \"address\": \"st144ykkar9fhl8khs7lwz0s7py9vj4w9adp37kt9\",\n    \"pubkey\": \"stpub1q0ska45w724dy0n0jujuqcvn2c80fa9c69dth0v9flacxrxp7w2rsncclps\",\n    \"signature\": \"83e9ae4ab17df35ab73b63104710414029adc5ebe1811c01fe1c75e1c95b58cd3efdb53aced3446390101945546e585fe5e5e351df74a95bb89fee3412e912c900\"\n   },\n   \"shareid\": \"06bcfdbe7e0d2cbb\",\n   \"req_time\": 1701315426\n  }\n ]\n}\n</code></pre> <p>Response</p> <pre><code>{\n \"jsonrpc\": \"2.0\",\n \"id\": 1,\n \"result\": {\n  \"return\": \"0\"\n }\n}\n</code></pre> <p></p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#list-shared-files","title":"List shared files","text":""},{"location":"docs-resource-node/sds-rpc-for-file-operation/#user_requestlistshare","title":"user_requestListShare","text":""},{"location":"docs-resource-node/sds-rpc-for-file-operation/#parameters_10","title":"Parameters","text":"name type comment page number the list is paginated. Page number start from 0. req_time number the epoch time when this request is made signature object signature on this message <p>Object signature</p> name type comment address string wallet address of the user account pubkey string public key of wallet address signature string signed on a message <sup>2</sup><sup>3</sup>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#returns_9","title":"Returns","text":"name type comment return string negative: errors; \"0\": success; other values: invalid fileinfo array list of shared files <p>In fileinof, these objects are included</p> name type comment filesize number size of the file, in byte filehash string file hash to identify the file <sup>1</sup> filename string name of the file linktime number unix epoch time when the file started being shared linktimeexp number unix epoch time when file share is expired shareid string a uniq identifier for this sharing sharelink string the link for accessing this shared file"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#example_9","title":"Example","text":"<p>Request</p> <pre><code>{\n \"jsonrpc\": \"2.0\",\n \"id\": 1,\n \"method\": \"user_requestListShare\",\n \"params\": [\n  {\n   \"signature\": {\n    \"address\": \"st144ykkar9fhl8khs7lwz0s7py9vj4w9adp37kt9\",\n    \"pubkey\": \"stpub1q0ska45w724dy0n0jujuqcvn2c80fa9c69dth0v9flacxrxp7w2rsncclps\",\n    \"signature\": \"e176392ac2d195d0e5b1510463ce1d2a13c338b5ed7311e5da9f2252de39c4f91ab4444f0bb24fb8ea77fd33ef972706cc7945adbf9580f77cedbac65df03ea701\"\n   },\n   \"page\": 0,\n   \"req_time\": 1701315596\n  }\n ]\n}\n</code></pre> <p>Response</p> <pre><code>{\n \"jsonrpc\": \"2.0\",\n \"id\": 1,\n \"result\": {\n  \"return\": \"0\",\n  \"fileinfo\": [\n   {\n    \"filehash\": \"v05ahm51buqelg70rjmcbqtn2qijc7um0ds1oedo\",\n    \"filesize\": 10000000,\n    \"filename\": \"file2_10M_jan20\",\n    \"linktime\": 1675051834,\n    \"linktimeexp\": 1675055434,\n    \"shareid\": \"23929411ce338824\",\n    \"sharelink\": \"udixcc_23929411ce338824\"\n   },\n   {\n    \"filehash\": \"v05ahm51buqelg70rjmcbqtn2qijc7um0ds1oedo\",\n    \"filesize\": 10000000,\n    \"filename\": \"file2_10M_jan20\",\n    \"linktime\": 1675051919,\n    \"linktimeexp\": 1675055519,\n    \"shareid\": \"76d88022afb10203\",\n    \"sharelink\": \"OqhU3X_76d88022afb10203\"\n   },\n   {\n    \"filehash\": \"v05ahm51buqelg70rjmcbqtn2qijc7um0ds1oedo\",\n    \"filesize\": 10000000,\n    \"filename\": \"file2_10M_jan20\",\n    \"linktime\": 1675051426,\n    \"linktimeexp\": 1690603426,\n    \"shareid\": \"9025a905e28fe791\",\n    \"sharelink\": \"UfBayn_9025a905e28fe791\"\n   }\n  ],\n  \"totalnumber\": 3\n }\n}\n</code></pre> <p></p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#download-a-shared-file","title":"Download a Shared File","text":"<p>There are for methods to be used to download a shared file. </p> <ul> <li>user_requestGetShared: get information of shared file</li> <li>user_requestDownloadShared: similar to user_requestDownload method for downloading a file, start downloading the shared file</li> <li>user_downloadData: same method used for downloading a file, downloading a piece of file data  </li> <li>user_downloadedFileInfo: same method used for downloading a file, requesting file verification</li> </ul>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#user_requestgetshared","title":"user_requestGetShared","text":""},{"location":"docs-resource-node/sds-rpc-for-file-operation/#parameters_11","title":"Parameters","text":"name type comment sharelink string link for accessing this shared file req_time number the epoch time when this request is made signature object signature on this message <p>Object signature</p> name type comment address string wallet address of the user account pubkey string public key of wallet address signature string signed on a message <sup>2</sup><sup>3</sup>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#returns_10","title":"Returns","text":"name type comment return string negative: errors; \"4\": got shared file info; other values: invalid reqid string to identify download instances when multiple download happen at same time filehash string file hash to identify a file sequencenumber string a sequence number to be used in uploading a file"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#example_10","title":"Example","text":"<p>Request</p> <pre><code>{\n \"jsonrpc\": \"2.0\",\n \"id\": 1,\n \"method\": \"user_requestGetShared\",\n \"params\": [\n  {\n   \"signature\": {\n    \"address\": \"st144ykkar9fhl8khs7lwz0s7py9vj4w9adp37kt9\",\n    \"pubkey\": \"stpub1q0ska45w724dy0n0jujuqcvn2c80fa9c69dth0v9flacxrxp7w2rsncclps\",\n    \"signature\": \"3e43680bb6b801a7847652aaaddf0efeda6f3c73382b1a4aea63388b1f17fe9468998172e5b00fbeb8e5c6f3d35ecfe02d4101dca17628423518e69b29a5470100\"\n   },\n   \"sharelink\": \"eozCrm_014cc2f5388a911c\",\n   \"req_time\": 1701315818\n  }\n ]\n}\n</code></pre> <p>Response</p> <pre><code>{\n \"jsonrpc\": \"2.0\",\n \"id\": 1,\n \"result\": {\n  \"return\": \"4\",\n  \"reqid\": \"31d1e975-cd8b-4631-8185-bee592ca3e34\",\n  \"filehash\": \"v05j1m571efv3vuk3tq7airrfglanjvts4jrd4l8\",\n  \"sequencenumber\": \"SN:0000000000000000001\"\n }\n}\n</code></pre>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#user_requestdownloadshared","title":"user_requestDownloadShared","text":""},{"location":"docs-resource-node/sds-rpc-for-file-operation/#parameters_12","title":"Parameters","text":"name type comment filehash string file hash to identify a file <sup>1</sup> reqid string the same reqid get from response of user_requestGetShared req_time number the epoch time when this request is made signature object signature on this message <p>Object signature</p> name type comment address string wallet address of the user account pubkey string public key of wallet address signature string signed on a message <sup>2</sup><sup>3</sup>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#returns_11","title":"Returns","text":"name type comment return string negative: errors; \"4\": got shared file info; other values: invalid reqid string to identify download instances when multiple download happen at same time offsetstart number the offset of beginning of the piece of file data, inclusive offsetend number the offset of end of the piece of file data, exclusive filename string the name of the file filedata string data of the piece of the file <sup>4</sup>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#example_11","title":"Example","text":"<p>Request</p> <pre><code>{\n \"jsonrpc\": \"2.0\",\n \"id\": 1,\n \"method\": \"user_requestDownloadShared\",\n \"params\": [\n  {\n   \"filehash\": \"v05j1m571efv3vuk3tq7airrfglanjvts4jrd4l8\",\n   \"signature\": {\n    \"address\": \"st144ykkar9fhl8khs7lwz0s7py9vj4w9adp37kt9\",\n    \"pubkey\": \"stpub1q0ska45w724dy0n0jujuqcvn2c80fa9c69dth0v9flacxrxp7w2rsncclps\",\n    \"signature\": \"2b68b0d3ddc981ba8b7e366e90901fe57cd1ef7b3caea4afb0eb8588b3025fe843c35ddf26ecf1a0cece5d48c633c7b9cd84c6311452d0e1c075f5ab030e773600\"\n   },\n   \"reqid\": \"31d1e975-cd8b-4631-8185-bee592ca3e34\",\n   \"req_time\": 1701315818\n  }\n ]\n}\n</code></pre> <p>Response</p> <pre><code>{\n \"jsonrpc\": \"2.0\",\n \"id\": 1,\n \"result\": {\n  \"return\": \"2\",\n  \"reqid\": \"e59fb32c-0579-4762-9edf-89f71a17a60b\",\n  \"offsetstart\": 0,\n  \"offsetend\": 3145728,\n  \"filename\": \"test_10m\",\n  \"filedata\": \"xfYRzYszM+NbWW/nZJZqmI8W9aGlaFt7SBkkuL5nkx/5LGjc9aKNXsyNxloYrgs30B4KmG2uDZWvS803FPxjzbOHvs7dNu3ZZQxf7yrKeDxQB1lL2n ... \"\n }\n}\n</code></pre>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#user_requestdownloaddata","title":"user_requestDownloadData","text":"<p>Please see same method under section Download a File</p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#user_downloadedfileinfo_1","title":"user_downloadedFileInfo","text":"<p>Please see same method under section Download a File</p> <p></p>"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#get-ozone-balance","title":"Get Ozone Balance","text":""},{"location":"docs-resource-node/sds-rpc-for-file-operation/#user_requestgetozone_2","title":"user_requestGetOzone","text":""},{"location":"docs-resource-node/sds-rpc-for-file-operation/#parameters_13","title":"Parameters","text":"name type comment walletaddr string wallet address of the user account"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#returns_12","title":"Returns","text":"name type comment return string negative: errors; \"0\": got shared file info; other values: invalid ozone string value of ozone balance sequencynumber string a sequence number to be used in uploading a file"},{"location":"docs-resource-node/sds-rpc-for-file-operation/#example_12","title":"Example","text":"<p>Request</p> <pre><code>{\n \"jsonrpc\": \"2.0\",\n \"id\": 1,\n \"method\": \"user_requestGetOzone\",\n \"params\": [\n  {\n   \"walletaddr\": \"st19nn9fnlzkpm3hah3pstz0wq496cehclpru8m3u\"\n  }\n ]\n}\n</code></pre> <p>Response</p> <pre><code>{\n \"jsonrpc\": \"2.0\",\n \"id\": 1,\n \"result\": {\n  \"return\": \"0\",\n  \"ozone\": \"999951054180\",\n  \"sequencynumber\": \"SN:0000000000000000001\"\n }\n}\n</code></pre> <p></p> <ol> <li> <p>filehash uses Keccak-256\u00a0\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9</p> </li> <li> <p>the message for signature is [file_hash] + [walletaddr], e.g. the string of \"v05ahm52b88i4lh1epel0cmce6606duatmml4o48st19nn9fnlzkpm3hah3pstz0wq496cehclpru8m3u\" when file hash is \"v05ahm52b88i4lh1epel0cmce6606duatmml4o48\" and wallet address is \"st19nn9fnlzkpm3hah3pstz0wq496cehclpru8m3u\"\u00a0\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9</p> </li> <li> <p>after getting signed, the signature bytes are encoded into hex string.\u00a0\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9</p> </li> <li> <p>data is encoded using standard Base64 as defined in RFC 4648.\u00a0\u21a9\u21a9\u21a9\u21a9</p> </li> <li> <p>smd://[owner wallet address]/[file hash]\u00a0\u21a9</p> </li> </ol>"},{"location":"docs-resource-node/sds-update-v12/","title":"SDS Update to v12","text":""},{"location":"docs-resource-node/sds-update-v12/#introduction","title":"Introduction","text":"<p>SDS v12 is a mandatory update, if you run a SDS node for Stratos, you have to apply this update in order for your node to continue normal operations.</p> <p>v12 brings a large number of updates and new features. See Changelog for detailed info.</p>"},{"location":"docs-resource-node/sds-update-v12/#stop-node","title":"Stop node","text":"<p>First of all, you should stop the <code>ppd</code> executable. Either press Ctrl + C in the running tmux, or simply run:</p> <pre><code>killall -2 ppd\n</code></pre>"},{"location":"docs-resource-node/sds-update-v12/#compile-new-binary","title":"Compile new binary","text":"<ul> <li>Remove the existing directory (if existing):</li> </ul> <pre><code>cd $HOME\nrm -rf sds\n</code></pre> <ul> <li>Get the new release</li> </ul> <pre><code>git clone https://github.com/stratosnet/sds.git\ncd sds\ngit checkout tags/v0.12.2\ngo clean -modcache\nmake build\n</code></pre>"},{"location":"docs-resource-node/sds-update-v12/#replace-existing-binary","title":"Replace existing binary","text":"<p>If you followed the full guide, you should have your <code>ppd</code> binary installed in <code>$HOME/bin/ppd</code> so we need to replace it with the new one:</p> <pre><code>cd $HOME\ncp sds/target/* $HOME/bin/\n</code></pre>"},{"location":"docs-resource-node/sds-update-v12/#test-new-version","title":"Test new version","text":"<p>Make sure the newly installed <code>ppd</code> binary is up to date:</p> <p><pre><code>ppd version\n</code></pre> Should return: <code>v0.12.2</code></p>"},{"location":"docs-resource-node/sds-update-v12/#edit-config-file","title":"Edit config file","text":"<p>Automatically update and verify your current configuration file:</p> <ul> <li>Enter your node folder. Eg:</li> </ul> <pre><code>cd /path/to/rsnode1\n</code></pre> <ul> <li>Run the config update command:</li> </ul> <pre><code>ppd config update\n</code></pre> <p>Expected output:</p> <pre><code>[INFO] config.go:122: Updated config version from v0.11.9 to v0.12.2\n[INFO] config.go:128: Deleted entry node.auto_start = true\n[INFO] config.go:128: Deleted entry node.connectivity.allow_owner_rpc = false\n[INFO] config.go:135: Added entry keys.beneficiary_address =\n[INFO] config.go:135: Added entry node.connectivity.rpc_namespaces = user\n</code></pre> <p><code>beneficiary_address</code> has been added for miners that operate multiple nodes, from multiple wallets, that would like to receive all rewards to a single wallet address. You can use the same wallet as <code>wallet_address</code> if you want.</p> Example of a full config file <pre><code>[version]\n# App version number. Eg: 11\napp_ver = 12\n# Network connections from nodes below this version number will be rejected. Eg: 11\nmin_app_ver = 12\n# Formatted version number. Eg: \"v0.11.0\"\nshow = 'v0.12.2'\n\n# Configuration of the connection to the Stratos blockchain\n[blockchain]\n# ID of the chain Eg: \"stratos-1\"\nchain_id = 'stratos-1'\n# Multiplier for the simulated tx gas cost Eg: 1.5\ngas_adjustment = 1.5\n# Connect to the chain using an insecure connection (no TLS) Eg: true\ninsecure = false\n# Network address of the chain grpc Eg: \"127.0.0.1:9090\"\ngrpc_server = 'grpc.thestratos.org:443'\n\n# Structure of the home folder. Default paths (eg: \"./storage\" become relative to the node home. Other paths are relative to the working directory\n[home]\n# Key files (wallet and P2P key). Eg: \"./accounts\"\naccounts_path = '/home/user/sds1/accounts'\n# Where downloaded files will go. Eg: \"./download\"\ndownload_path = '/home/user/sds1/download'\n# The list of peers (other sds nodes). Eg: \"./peers\"\npeers_path = '/home/user/sds1/peers'\n# Where files are stored. Eg: \"./storage\"\nstorage_path = '/home/user/sds1/storage'\n\n[keys]\n# Address of the P2P key. Eg: \"stsdsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\np2p_address = 'stsds1exampleexampleexampleexample'\np2p_password = '1'\n# Address of the stratos wallet. Eg: \"stxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\nwallet_address = 'st1exampleexampleexampleexample'\nwallet_password = '1'\n# Address for receiving reward. Eg: \"stxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\nbeneficiary_address = 'st1exampleexampleexampleexample'\n\n# Configuration of this node\n[node]\n# Should debug info be printed out in logs? Eg: false\ndebug = true\n# When not 0, limit disk usage to this amount (in megabytes) Eg: 7629394 = 8 * 1000 * 1000 * 1000 * 1000 / 1024 / 1024  (8TB)\nmax_disk_usage = 7629394\n\n[node.connectivity]\n# Is the node running on an internal network? Eg: false\ninternal = false\n# Domain name or IP address of the node. Eg: \"127.0.0.1\"\nnetwork_address = '127.0.0.1'\n# Main port for communication on the network. Must be open to the internet. Eg: \"18081\"\nnetwork_port = '9101'\n# (Optional)If not empty, the node will listen to this port locally, but other nodes will still use the network_port to connect to this node\nlocal_port = ''\n# Port for prometheus metrics\nmetrics_port = '9201'\n# Port for the JSON-RPC api. See https://docs.thestratos.org/docs-resource-node/sds-rpc-for-file-operation/\nrpc_port = '9301'\n# Namespaces enabled in the RPC API. Eg: \"user,owner\"\nrpc_namespaces = 'user'\n\n# The first meta node to connect to when starting the node\n[node.connectivity.seed_meta_node]\np2p_address = 'stsds1twy3wslrwmpkshx5fps6ysmqx5lc09p0ukurgf'\np2p_public_key = 'stsdspub1xtewcceylwekj78qwyvvpp3ms8ku44ksxkcxhhw9c4vz9xtfu2yq2l4am7'\nnetwork_address = '34.82.187.241:8888'\n\n# Configuration for the monitor server\n[monitor]\n# Should the monitor server use TLS? Eg: false\ntls = false\n# Path to the TLS certificate file\ncert_file_path = ''\n# Path to the TLS private key file\nkey_file_path = ''\n# Port used for the monitor websocket connection. It's the monitor UI that uses this port, not the person accessing the UI in a browser\nport = '18352'\n# List of IPs that are allowed to connect to the monitor websocket port. This is used to decide which IP can connect their monitor to the node, NOT to decide who can view the monitor UI page.\nallowed_origins = ['localhost']\n\n# Configuration for video streaming\n[streaming]\n# Port for the internal HTTP server\ninternal_port = '18452'\n# Port for the REST server\nrest_port = '18552'\n\n[traffic]\n# Interval at which traffic is logged (in seconds) Eg: 10\nlog_interval = 10\n# Max number of concurrent network connections. Eg: 1000\nmax_connections = 1000\n# Max number of download messages received per second (per connection). 0 Means unlimited. 1000 \u2248 1MB/sec. Eg: 1000\nmax_download_rate = 0\n# Max number of upload messages sent per second (per connection). 0 Means unlimited. 1000 \u2248 1MB/sec. Eg: 1000\nmax_upload_rate = 0\n\n# Configuration for the web server (when running sdsweb)\n[web_server]\n# Location of the web server files Eg: \"./web\"\npath = '/home/user/sds1/web'\n# Port where the web server is hosted with sdsweb. If the port is opened and token_on_startup is true, anybody who loads the monitor UI will have full access to the monitor\nport = '18652'\n# Automatically enter monitor token when opening the monitor UI. This should be false if the web_server port is opened to internet and you don't want public access to your node monitor'\ntoken_on_startup = false\n</code></pre>"},{"location":"docs-resource-node/sds-update-v12/#start-the-node","title":"Start the node","text":"<p>You can now restart your <code>ppd</code> binary as explained in the full guide.</p>"},{"location":"docs-resource-node/sds-video-streaming-handbook/","title":"SDS Video Streaming Handbook","text":"<p>This document is intended for individuals who wish to test the Stratos web streaming feature or those planning to incorporate this functionality into their web applications. </p> <p>It provides detailed technical guidance and specifications necessary for implementation and testing. </p> <p>Please note that this document is not meant for everyday users, as it assumes a certain level of technical expertise and familiarity with web development concepts.</p> <p>To start streaming video files using your own SDS node, just follow the following steps:</p> <p>Requirements:</p> <ul> <li>a running SDS node (registered but not activated).</li> </ul>"},{"location":"docs-resource-node/sds-video-streaming-handbook/#prerequisites","title":"Prerequisites:","text":"<ul> <li>Clone the sds folder:</li> </ul> <pre><code>cd ~\ngit clone https://github.com/stratosnet/sds.git\n</code></pre> <ul> <li>Install nodejs and npm:</li> </ul> <pre><code>curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash\nsource ~/.bashrc\nnvm install 22\nnpm install dotenv\n</code></pre> <ul> <li>Test it with:</li> </ul> <pre><code>node -v # should print v22.4.0\nnpm -v # should print 10.8.1\n</code></pre> <ul> <li>Install ffmpeg:</li> </ul> <pre><code>sudo apt update\nsudo apt install ffmpeg\n</code></pre> <ul> <li>Upload a video and upload it to sds: (for example, if your video is stored in ~/example.mp4)</li> </ul> <pre><code>cd rsnode\nppd terminal\n(inside ppd terminal):\nputstream /home/your-username/example.mp4\n</code></pre> <ul> <li>You will see a notice such as:</li> </ul> <pre><code>[INFO] upload_file.go:217: * File  v05p1m52pg6u1l4kgmu0topkauejbr0uqm72oub8\n[INFO] upload_file.go:218: * has been sent to destinations\n</code></pre> <ul> <li>Optionally, you can generate a sharelink for that file: (inside ppd terminal):</li> </ul> <pre><code>sharefile v05p1m52pg6u1l4kgmu0topkauejbr0uqm72oub8 0 0\n</code></pre> <ul> <li>You will see a notice such as:</li> </ul> <pre><code>[INFO] share.go:153: ShareId e3a2a25a9fec4490\n[INFO] share.go:154: ShareLink Nr6r1J_e3a2a25a9fec4490\n</code></pre>"},{"location":"docs-resource-node/sds-video-streaming-handbook/#setup-the-streaming-site","title":"Setup the streaming site:","text":"<p>Streaming app requires access to the SDS's node wallet in order to consume ozone for streaming, thus, it requires the wallet's mmnemonic phrase.</p> <p>The purpose of the Server application is to provide the mmnemonic phrase to the Client, without exposing it to the web browsers viewing the stream.</p>"},{"location":"docs-resource-node/sds-video-streaming-handbook/#server","title":"Server:","text":"<ul> <li>Go to sds folder which you cloned from github earlier and edit the .env file:</li> </ul> <pre><code>cd ~/sds/example/streaming/server\nmv .env.example .env\nnano .env\n</code></pre> <ul> <li>Choose a port for the sign server</li> <li>Enter the wallet address of the sds node you are using for streaming</li> <li>Enter the seed phrase for the wallet above</li> <li>Enter the wallet password from the sds node config file</li> </ul> <p>Example file:</p> <pre><code>PORT=18888\nWALLET_ADDRESS=st1xxxxxxxxxxxxxxxxxxxxx\nWALLET_MNEMONIC=guitar erupt toddler cream.....\nWALLET_PASSWORD=123456\n</code></pre> <p>Save the file.</p> <ul> <li>Edit the video.json file with the file(s) you uploaded earlier: Example of video.json file with the example file uploaded above:</li> </ul> <pre><code>[\n  {\n    \"linkType\": \"filehash\",\n    \"fileHash\": \"v05p1m52pg6u1l4kgmu0topkauejbr0uqm72oub8\",\n    \"fileName\": \"video1-FH\"\n  },\n  {\n    \"linkType\": \"sharelink\",\n    \"shareLink\": \"Nr6r1J_e3a2a25a9fec4490\",\n    \"sharePassword\": \"\",\n    \"fileName\": \"video1-SL\"\n  }\n]\n</code></pre> <ul> <li> <p>Save the file</p> </li> <li> <p>Start the react app and leave it running in the background (run it in a tmux or screen):</p> </li> </ul> <pre><code>node server.js\n</code></pre>"},{"location":"docs-resource-node/sds-video-streaming-handbook/#client","title":"Client:","text":"<ul> <li>Edit the client .env file:</li> </ul> <pre><code>cd ~/sds/example/streaming/client\nmv .env.example .env\nnano .env\n</code></pre> <ul> <li>Enter the wallet address of the sds node you are using for streaming</li> <li>Enter your sds node external ip and REST port (you can find the REST port in node config at rest_port = )</li> <li>Enter your react sign url, this is the port defined in streaming/server/.env file</li> <li>Leave the rest of variables empty</li> </ul> <p>Example file:</p> <pre><code>REACT_APP_WALLET_ADDRESS=st1xxxxxxxxxxx\nREACT_APP_WALLET_MNEMONIC=\nREACT_APP_WALLET_PASSWORD=\nREACT_APP_SERVICE_URL=http://sds-node-external-ip:18581\nREACT_APP_NODE_SIGN_URL=http://current-server-external-ip:18888\n</code></pre> <ul> <li>Edit the videos.json file:</li> </ul> <p>The streaming site will parse the videos.json file from the server so you should disable the client one:</p> <pre><code>echo -e '[\\n {\\n }\\n]\\n' &gt; videos.json\n</code></pre> <ul> <li> <p>Save the file.</p> </li> <li> <p>Start the client and leave it running in the background:</p> </li> </ul> <pre><code>npm i\nnpm start\n</code></pre> <p>You will now see the links to access the streaming site and view the files uploaded.</p> <p>You can customize the landing page html code in</p> <p><code>~/sds/example/streaming/client/LandingPage.js</code></p> <p></p> <p></p>"},{"location":"docs-resource-node/setup-and-run-a-sds-resource-node/","title":"Setup and run a SDS Resource Node","text":"<p>The Stratos Decentralized Storage (SDS) network is a scalable, reliable, self-balancing elastic acceleration network. We can simply take it as a decentralized file system suitable for running on general-purpose hardware.</p> <p>SDS is composed of many Resource Nodes that store data, and a few Meta Nodes that coordinate with each other.</p> <p>Note that provides their resource(disk/bandwidth/computation power) for SDS is called Resource Node.</p>"},{"location":"docs-resource-node/setup-and-run-a-sds-resource-node/#requirements","title":"Requirements","text":"<ul> <li>Minimum Hardware Requirements</li> </ul> Type CPU RAM Storage Bandwidth Deposit TIER 1 8 Cores\u00b9, 2.5GHz\u00b2 16 GB 4 TB Up: 50Mbps Down: 100Mbps 800 STOS TIER 2 16 Cores\u00b9, 2.5GHz\u00b2 32 GB 8 TB Up: 100Mbps Down: 100Mbps 1600 STOS TIER 3 32 Cores\u00b9, 2.5GHz\u00b2 64 GB 16 TB Up: 1Gbps Down 1Gbps 3200 STOS <p> \u00b9 \u00a0\u00a0 Can be achieved using dual CPU server configurations (eg. 2cpu x 4cores, 2cpu x 8cores, etc, as long as the frequency per core is respected). \u00b2 \u00a0\u00a0 2.5GHz refers to Base Frequency, not Turbo/Boost Frequency. </p> <p></p> <ul> <li> <p>Software(tested version)</p> <ul> <li>Ubuntu 18.04+</li> <li>Go 1.19 - 1.22 linux/amd64</li> </ul> </li> </ul>"},{"location":"docs-resource-node/setup-and-run-a-sds-resource-node/#keywords","title":"Keywords","text":"<p>There are some keywords that are widely used in SDS. We describe them as</p> <ul> <li> <p><code>resource node</code>(<code>PP</code> node): Node that participates in the Stratos Resource Network by providing their disk/bandwidth/computation power to earn rewards in the Proof-of-Traffic(PoT) model.</p> </li> <li> <p><code>meta node</code>(<code>SP</code> nodes): Node that manages the tasks in the Resource Network between resource nodes, including indexing all content, auditing the traffic report and communicating between Resource Network and Stratos-chain through a relay mechanism.</p> </li> <li> <p><code>active resource node</code>: A resource node that has been activated by depositing to the Stratos-chain and registering to a meta node. It is ready to receive tasks assigned by the meta node.</p> </li> <li> <p><code>suspended resource node</code>: A resource node that has not satisfied the performance KPI evaluation criteria and is suspended from receiving further tasks from the meta node.</p> </li> <li> <p><code>traffic</code>: The data volume evaluated in the Resource Network. The incentive for all participants in the Stratos Ecosystem is based on traffic.</p> </li> <li> <p><code>STOS</code>(Stratos Tokens): The native token facilitating value circulation in Stratos Ecosystem.</p> </li> <li> <p><code>ozone</code>(oz): The traffic unit used in Stratos Ecosystem.</p> </li> <li> <p><code>epoch</code>: The Proof-of-Traffic evaluation periodic window. The traffic for the Resource Network is evaluated at the end of each epoch.</p> </li> <li> <p><code>value network</code>: The Stratos-chain, the network that circulates all values in the Stratos Ecosystem.</p> </li> </ul>"},{"location":"docs-resource-node/setup-and-run-a-sds-resource-node/#setup-environment","title":"Setup Environment","text":"<p>Tip</p> <p>In order to run an SDS resource node, you need to build SDS source code which requires <code>Go 1.19+</code>, <code>git</code>, <code>curl</code> and <code>make</code> installed.</p> <p>If you have installed them previously, just skip this section. Otherwise, please install them as the following</p> <p>This process depends on your operating system.</p> <p></p> <ul> <li>Linux Users</li> </ul> <p>The following example is based on Ubuntu 18.04+ 64-bit(Debian) and assumes you are using a terminal environment by default. Please run the equivalent commands if you are running other Linux distributions.</p> <pre><code># Update the system\nsudo apt update\nsudo apt upgrade\n\n# Install git, snap and make(you can also install them separately as your needs)\nsudo apt install git build-essential curl tmux --yes\n\n# Prepare binary PATH:\nmkdir ~/bin\necho 'export PATH=\"$HOME/bin:$PATH\"' &gt;&gt; ~/.profile\nsource ~/.profile\n</code></pre> <p>To install Go 1.22, please follow these steps:</p> <pre><code># If you already have Go installed, check with\ngo version\n\n# If you have 1.18 or older, remove it using the same method you installed with. For example:\nsudo snap remove go\nsudo apt remove golang-go\n</code></pre> <p>Install Go 1.22:</p> <pre><code># Do a clean-up:\nsudo rm -rf /usr/local/go\n\n# Download the Go Binary Package:\nwget https://go.dev/dl/go1.22.3.linux-amd64.tar.gz\n\n# Unzip it to /usr/local directory:\nsudo tar -C /usr/local -xzf go1.22.3.linux-amd64.tar.gz\n\n# Add the Go PATH:\necho 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.profile\nsource ~/.profile\n\n# Verify with\ngo version\n\n# You should see:\n# go version go1.22.3 linux/amd64\n</code></pre> <p></p> <ul> <li>Windows Users</li> </ul> <p>It is possible to build and run the software on Windows. However, we did not test it on Windows completely. It may give you unexpected results, or it may require additional setup.</p> <p>An alternative option is to install a separate virtual Linux system using VirtualBox or VMware Workstation</p>"},{"location":"docs-resource-node/setup-and-run-a-sds-resource-node/#compile-sds-resource-node","title":"Compile SDS resource node","text":"<ul> <li>Compile the binary executables with source code</li> </ul> <pre><code>git clone https://github.com/stratosnet/sds.git\ncd sds\ngit checkout tags/v0.12.2\nmake build\n</code></pre> <ul> <li>Installing the binary executable</li> </ul> <p>Once the compilation is successful, you will find three binary executables (ppd, relayd, sdsweb) under the <code>target</code> folder. Copy them to your home binary path:</p> <pre><code>cp target/* ~/bin\n</code></pre> <p></p> <ul> <li>Verify the installation with:</li> </ul> <pre><code>ppd version\n</code></pre> <p>You should get <code>v0.12.2</code>.</p>"},{"location":"docs-resource-node/setup-and-run-a-sds-resource-node/#create-sds-resource-node","title":"Create SDS resource node","text":""},{"location":"docs-resource-node/setup-and-run-a-sds-resource-node/#create-a-root-directory","title":"Create a root directory","text":"<p>To start a resource node, you need to be in a directory dedicated to your resource node.</p> <p>Create a new directory, or go to the root directory of your existing node.</p> <p>In the following instruction, we assume you have entered the root directory of the resource node.</p> <pre><code># create a new folder \ncd $HOME\nmkdir rsnode\n# Make sure we are inside the root directory of the resource node\ncd rsnode\n</code></pre> <p></p>"},{"location":"docs-resource-node/setup-and-run-a-sds-resource-node/#configure-sds-resource-node","title":"Configure SDS resource node","text":"<p>Next, you need to generate the configuration file and its accounts of this resource node. The command <code>ppd config</code> will help you to generate necessary configurations.</p> <p></p>"},{"location":"docs-resource-node/setup-and-run-a-sds-resource-node/#generaterecover-wallet","title":"Generate/Recover wallet","text":"<p>The <code>ppd config</code> command consists of several flags or subcommand. Let take a look at its general definition using <code>ppd config -h</code>.</p> <pre><code>ppd config -h\n\ncreate default configuration file\n\nUsage:\n  ppd config [flags]\n  ppd config [command]\n\nAvailable Commands:\n  accounts    create accounts for the node\n  update      update the config file to the latest version\n\nFlags:\n  -p, --create-p2p-key   create p2p key with config file, need interactive input\n  -w, --create-wallet    create wallet with config file, need interactive input\n  -h, --help             help for config\n\nGlobal Flags:\n  -c, --config string   configuration file path  (default \"./config/config.toml\")\n  -r, --home string     path for the node (default \"/root/sds10\")\n\nUse \"ppd config [command] --help\" for more information about a command.\n</code></pre> <p></p> <p>Tip</p> <p>There are two ways to generate a configuration file and create (or recover) a wallet:</p> <ul> <li> <p>Option 1 will generate a configuration file and a wallet automatically.</p> </li> <li> <p>Option 2 will generate a configuration file and allow you to create or recover a wallet.</p> </li> </ul> <p></p> <p>When asked to <code>input bip39 mnemonic</code>,</p> <p>Input your mnemonic -&gt; recovers an existing wallet account;</p> <p>keep it blank -&gt; generates a new wallet account</p> <p>Usage:</p> <pre><code># Make sure we are inside the root directory of the resource node\ncd ~/rsnode\n# to create config with interactive key creation\nppd config -w -p\n</code></pre> Example (creating a new wallet account)  You will get a new wallet account  <pre><code># Make sure we are inside the root directory of the resource node\ncd ~/rsnode        \nppd config -w -p\n\n[INFO] setting.go:159: The config at location /home/rawl/tmp/config/config.toml does not exist\n[INFO] config.go:29: generating default config file\n[INFO] config.go:66: No wallet key specified in config. Attempting to create one...\nEnter wallet nickname: main1\nEnter password:         # choose a password\nEnter password again:   # retype the password\ninput bip39 mnemonic (leave blank to generate a new one)        # press enter\ninput hd-path for the account, default: \"m/44'/606'/0'/0/0\" :   # press enter\nsave the mnemonic phase properly for future recovery:\n=======================================================================\njunior quantum now kit gadget usage audit glide rocket tissue crawl surprise \npoint verify put virus prepare monitor electric spice tourist horror achieve poem\n=======================================================================\n\n[INFO] setup_wallet.go:62: Wallet st1na2yyucggvmjv5kmgc2jeaacpmjr6u9g7vqv32 has been generated successfully\nDo you want to use this wallet as your node wallet: Y(es)/N(o): y\n\n[INFO] common.go:162: No p2p key specified in config. Attempting to create one...\nEnter password for p2p key:         # choose a password\nEnter password for p2p key again:   # retype the password\n\nHow should the p2p key be generated?  1) From the wallet  2) From a hex-encoded private key  3) Randomly: 1\nUse the HD path (m/44'/606'/0/0) to generate the p2p key (stsds1qvsypctsdm30keudfwcmtal63dxhnfhjunxms8)? [y/N] y\n</code></pre> Example (recovering an existing wallet account)  You will get the same wallet account if you already have one.  <pre><code># Make sure we are inside the root directory of the resource node\ncd ~/rsnode        \nppd config -w -p\n\n[INFO] setting.go:159: The config at location /home/rawl/tmp/config/config.toml does not exist\n[INFO] config.go:29: generating default config file\n[INFO] config.go:66: No wallet key specified in config. Attempting to create one...\nEnter wallet nickname: main1\nEnter password:         # choose a password\nEnter password again:   # retype the password\ninput bip39 mnemonic (leave blank to generate a new one)        # enter your 24-words seed phrase\ninput hd-path for the account, default: \"m/44'/606'/0'/0/0\" :   # press enter\nsave the mnemonic phase properly for future recovery:\n=======================================================================\njunior quantum now kit gadget usage audit glide rocket tissue crawl surprise \npoint verify put virus prepare monitor electric spice tourist horror achieve poem\n=======================================================================\n\n[INFO] setup_wallet.go:62: Wallet st1na2yyucggvmjv5kmgc2jeaacpmjr6u9g7vqv32 has been generated successfully\nDo you want to use this wallet as your node wallet: Y(es)/N(o): y\n\n[INFO] common.go:162: No p2p key specified in config. Attempting to create one...\nEnter password for p2p key:         # choose a password\nEnter password for p2p key again:   # retype the password\n\nHow should the p2p key be generated?  1) From the wallet  2) From a hex-encoded private key  3) Randomly: 1\nUse the HD path (m/44'/606'/0/0) to generate the p2p key (stsds1qvsypctsdm30keudfwcmtal63dxhnfhjunxms8)? [y/N] y\n</code></pre> <p>Note</p> <p>When you enter your seed phrase, it will not be shown as a security measure.</p> <p>When generating the p2p key, option 1) will generate the same p2p address for the existing wallet, every time.</p> <p>If you want to run multiple nodes on the same wallet address, choose option 3).</p> <p>Alternatively, you can use unique wallets and unique p2p addresses, but a single <code>beneficiary_address</code> where all the rewards will be gathered to. </p> <p>It's just a matter of personal preference.</p> <p></p>"},{"location":"docs-resource-node/setup-and-run-a-sds-resource-node/#directory-structure","title":"Directory structure","text":"<p>After the above command executed successfully, Your <code>rsnode</code> folder should include directories and files similar to the following.</p> <pre><code>.\n\u251c\u2500\u2500 accounts\n\u2502   \u251c\u2500\u2500 st10t5chdnhx6myggwwhfq7q39hnjhzapau9yy6tv.json\n\u2502   \u2514\u2500\u2500 stsds1hez7aewx6srjtrw3064w3qy4dk22uv0cx7jxww.json\n\u2502\u2500\u2500 config\n\u2502   \u2514\u2500\u2500 config.toml\n\u2514\u2500\u2500 tmp\n  \u2514\u2500\u2500 logs\n      \u2514\u2500\u2500 stdout.log\n</code></pre> <p><code>accounts</code> folder keeps important account info, including the <code>Wallet Address</code>(starting with <code>st</code>) and <code>P2P Address</code>(starting with <code>stsds</code>) of your SDS resource node.</p> <p><code>configs</code> folder includes all configurations for this SDS resource node. User may need to modify <code>configs/config.toml</code> file to adapt to specific requirements of the network.</p> <p><code>tmp</code> folder is hols the logs and outputs.</p> <p></p>"},{"location":"docs-resource-node/setup-and-run-a-sds-resource-node/#edit-configuration-file","title":"Edit configuration file","text":"<p>You will need to edit a few lines in the file <code>configs/config.toml</code> to setup your node.</p> <p>Open config file and make the following modifications:</p> <pre><code>nano config/config.toml\n</code></pre> <p></p> <p>\u270f\ufe0f - Edit your external ip address:</p> <p>Replace <code>99.99.99.99</code> with your external ip address.</p> <p>This ip address and port must be accessible from the Internet. If you are behind a router, the <code>network_port</code> must be forwarded, please refer to https://portforward.com/.</p> <pre><code>[node.connectivity]\n# Is the node running on an internal network? Eg: false\ninternal = false\n# IP address of the node. Eg: \"127.0.0.1\"\nnetwork_address = '99.99.99.99'\n# Main port for communication on the network. Must be open to the internet. Eg: \"18081\"\nnetwork_port = '18081'\n</code></pre> <p>Tip</p> <p>To find your external ip, you can run the following command in another terminal:</p> <pre><code>curl ifconfig.co\n</code></pre> <p></p> <p>\u270f\ufe0f - Edit the first meta node to connect on first run: (you can skip this if you start with v0.12.2) </p> <p><pre><code># The first meta node to connect to when starting the node\n[node.connectivity.seed_meta_node]\np2p_address = ''\np2p_public_key = ''\nnetwork_address = ''\n</code></pre> metanode you can start with <pre><code># europe\np2p_address = 'stsds1ypxg8sj5vn4s4v0w965g4r9g3pt3vlz6wyzx0f'\np2p_public_key = 'stsdspub1y6exsr8snwz65ev3pzq6k3yfy2ku3kexqdd0en35dnr8mxc9w6sq5jg6lf'\nnetwork_address = '34.34.149.18:8888'\n\n# asia\np2p_address = 'stsds10kmygjv7e2t39f6jka6445q20e9lv4a7u3qex3'\np2p_public_key = 'stsdspub1srn3qetarx3x6f2x9wqfv3nh2aufxv03ncl5v6jkmyg666scvz6s4xgprq'\nnetwork_address = '34.85.35.57:8888'\n\n# NA\np2p_address = 'stsds1z96pm5ls0ff2y7y8adpy6r3l8jqeaud7envnqv'\np2p_public_key = 'stsdspub1lf769k20k36e4gvnewcwdtfudzj95qk45d5f0p300jmr7e6y73zsdyh25y'\nnetwork_address = '34.82.40.37:8888'\n</code></pre></p> <p></p> <p>\u270f\ufe0f - Edit the beneficiary_address:</p> <pre><code># Address for receiving reward. Eg: \"stxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\nbeneficiary_address = ''\n</code></pre> <p>Enter your wallet address where you want to receive your node mining rewards.</p> <p>This is useful when you run multiple nodes, each with its unique operating wallet and you want to receive all the rewards in one place.</p> <p>If you only have one node, you can enter here the same address as defined under <code>wallet_address</code>.</p> Example of a full config file <pre><code>[version]\n# App version number. Eg: 11\napp_ver = 12\n# Network connections from nodes below this version number will be rejected. Eg: 11\nmin_app_ver = 12\n# Formatted version number. Eg: \"v0.11.0\"\nshow = 'v0.12.2'\n\n# Configuration of the connection to the Stratos blockchain\n[blockchain]\n# ID of the chain Eg: \"stratos-1\"\nchain_id = 'stratos-1'\n# Multiplier for the simulated tx gas cost Eg: 1.5\ngas_adjustment = 1.5\n# Connect to the chain using an insecure connection (no TLS) Eg: true\ninsecure = false\n# Network address of the chain grpc Eg: \"127.0.0.1:9090\"\ngrpc_server = 'grpc.thestratos.org:443'\n\n# Structure of the home folder. Default paths (eg: \"./storage\" become relative to the node home. Other paths are relative to the working directory\n[home]\n# Key files (wallet and P2P key). Eg: \"./accounts\"\naccounts_path = '/home/user/sds1/accounts'\n# Where downloaded files will go. Eg: \"./download\"\ndownload_path = '/home/user/sds1/download'\n# The list of peers (other sds nodes). Eg: \"./peers\"\npeers_path = '/home/user/sds1/peers'\n# Where files are stored. Eg: \"./storage\"\nstorage_path = '/home/user/sds1/storage'\n\n[keys]\n# Address of the P2P key. Eg: \"stsdsxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\np2p_address = 'stsds1exampleexampleexampleexample'\np2p_password = '1'\n# Address of the stratos wallet. Eg: \"stxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\nwallet_address = 'st1exampleexampleexampleexample'\nwallet_password = '1'\n# Address for receiving reward. Eg: \"stxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\nbeneficiary_address = 'st1exampleexampleexampleexample'\n\n# Configuration of this node\n[node]\n# Should debug info be printed out in logs? Eg: false\ndebug = true\n# When not 0, limit disk usage to this amount (in megabytes) Eg: 7629394 = 8 * 1000 * 1000 * 1000 * 1000 / 1024 / 1024  (8TB)\nmax_disk_usage = 7629394\n\n[node.connectivity]\n# Is the node running on an internal network? Eg: false\ninternal = false\n# IP address of the node. Eg: \"127.0.0.1\"\nnetwork_address = '12.13.14.15'\n# Main port for communication on the network. Must be open to the internet. Eg: \"18081\"\nnetwork_port = '18081'\n# Port for prometheus metrics\nmetrics_port = '18152'\n# Port for the JSON-RPC api. See https://docs.thestratos.org/docs-resource-node/sds-rpc-for-file-operation/\nrpc_port = '18252'\n# Namespaces enabled in the RPC API. Eg: \"user,owner\"\nrpc_namespaces = 'user'\n\n# The first meta node to connect to when starting the node\n[node.connectivity.seed_meta_node]\np2p_address = 'stsds1twy3wslrwmpkshx5fps6ysmqx5lc09p0ukurgf'\np2p_public_key = 'stsdspub1xtewcceylwekj78qwyvvpp3ms8ku44ksxkcxhhw9c4vz9xtfu2yq2l4am7'\nnetwork_address = '34.82.187.241:8888'\n\n# Configuration for the monitor server\n[monitor]\n# Should the monitor server use TLS? Eg: false\ntls = false\n# Path to the TLS certificate file\ncert_file_path = ''\n# Path to the TLS private key file\nkey_file_path = ''\n# Port used for the monitor websocket connection. It's the monitor UI that uses this port, not the person accessing the UI in a browser\nport = '18352'\n# List of IPs that are allowed to connect to the monitor websocket port. This is used to decide which IP can connect their monitor to the node, NOT to decide who can view the monitor UI page.\nallowed_origins = ['localhost']\n\n# Configuration for video streaming\n[streaming]\n# Port for the internal HTTP server\ninternal_port = '18452'\n# Port for the REST server\nrest_port = '18552'\n\n[traffic]\n# Interval at which traffic is logged (in seconds) Eg: 10\nlog_interval = 10\n# Max number of concurrent network connections. Eg: 1000\nmax_connections = 1000\n# Max number of download messages received per second (per connection). 0 Means unlimited. 1000 \u2248 1MB/sec. Eg: 1000\nmax_download_rate = 0\n# Max number of upload messages sent per second (per connection). 0 Means unlimited. 1000 \u2248 1MB/sec. Eg: 1000\nmax_upload_rate = 0\n\n# Configuration for the web server (when running sdsweb)\n[web_server]\n# Location of the web server files Eg: \"./web\"\npath = '/home/user/sds1/web'\n# Port where the web server is hosted with sdsweb. If the port is opened and token_on_startup is true, anybody who loads the monitor UI will have full access to the monitor\nport = '18652'\n# Automatically enter monitor token when opening the monitor UI. This should be false if the web_server port is opened to internet and you don't want public access to your node monitor'\ntoken_on_startup = false\n</code></pre> <p></p> <p>You can save and close the config file with Ctrl + X.</p>"},{"location":"docs-resource-node/setup-and-run-a-sds-resource-node/#run-sds-resource-node","title":"Run SDS resource node","text":"<p>After setting up configuration properly, filled your wallet with STOS, you can now start your resource node.</p> <pre><code># Node executable must be running in background at all times \n# so it's recommended to start a tmux window first:\ntmux new -s rsnode\n\n# Make sure you are inside the root directory of the resource node\ncd ~/rsnode\n\n# start the resource node\nppd start\n</code></pre>"},{"location":"docs-resource-node/setup-and-run-a-sds-resource-node/#registration-and-activation","title":"Registration and Activation","text":"<p>In order to interact with the resource node, you need to open A NEW COMMAND-LINE TERMINAL, and enter the root directory of the same resource node.</p> <p>Then, use <code>ppd terminal</code> commands to start the interaction with resource node.</p> <p>All <code>ppd</code> sub-commands should be executed in this <code>ppd terminal</code>.</p> <pre><code># Open a new command-line terminal\n# Make sure we are inside the root directory of the same resource node\ncd ~/rsnode\n\n# Interact with resource node through a set of \"ppd terminal\" sub-commands\nppd terminal\n</code></pre> <p></p> <ul> <li>Registering the resource node to a meta node</li> </ul> <p>The resource node(PP) should be registered to a meta node(SP) before doing anything else.</p> <p>In <code>ppd terminal</code>, input one of the two following identical sub-commands:</p> <pre><code>rp\n\n# or\n\nregisterpeer\n</code></pre> <p></p> <ul> <li>Activating the resource node with deposit</li> </ul> <p>You can activate your resource node for a specific TIER.</p> <p>Choose the amount based on the tier you want to run on.</p> Tier Amount Tier 1 800 STOS Tier 2 1600 STOS Tier 3 3200 STOS <p>After it is activated successfully, your resource node starts to receive tasks from meta nodes and thus gaining mining rewards accordingly.</p> <pre><code>activate &lt;amount&gt; &lt;fee&gt; [gas] \n</code></pre> <p><code>amount</code> is the amount of tokens you want to deposit. 1stos = 10^9gwei = 10^18wei.</p> <p><code>fee</code> is the amount of tokens to pay as a fee for the activation transaction. 10000wei would work. It will use default value if no fee amount is provided.</p> <p><code>gas</code> is the amount of gas to pay for the transaction. 1000000 would be a safe number. It will use default value if no gas amount is provided.</p> <p>Example:</p> <pre><code>activate 1600stos 0.01stos\n</code></pre> <ul> <li>Start Mining</li> </ul> <p>You should run this command:</p> <ol> <li> <p>After new node is activated</p> </li> <li> <p>After node is unsuspended</p> </li> </ol> <p>Run the following command in <code>ppd terminal</code>:</p> <pre><code>startmining\n</code></pre> <ul> <li>Verify Activation Status</li> </ul> <p>Run the following command in <code>ppd terminal</code>:</p> <pre><code>status\n</code></pre> <p></p>"},{"location":"docs-resource-node/setup-and-run-a-sds-resource-node/#check-resource-node-status","title":"Check resource node status","text":"<p>There are a set of Restful APIs to check resource node status and Proof of Traffic(PoT) rewards.</p> <p>You can input the following APIs in an explorer directly. We list some of them here and more details as well as examples can be found in Stratos Chain REST APIs</p> <p></p> <p>Check node registration status(<code>register</code> module)</p> <p></p> <ul> <li>Query total deposit state of all registered resource nodes and meta nodes</li> </ul> <pre><code>https://rest.thestratos.org/stratos/register/v1/deposit_total\n</code></pre> <p></p> <ul> <li>Query params of <code>register</code> module</li> </ul> <pre><code>https://rest.thestratos.org/stratos/register/v1/params\n</code></pre> <p></p> <ul> <li>Get all deposit info of a specific owner</li> </ul> <pre><code>https://rest.thestratos.org/stratos/register/v1/deposit_by_owner/{owner wallet address}\n</code></pre> <p></p> <ul> <li>Get info of a registered resource node</li> </ul> <pre><code>https://rest.thestratos.org/stratos/register/v1/resource_node/{resource node network address}\n</code></pre> <p></p> <ul> <li>Get info of a registered meta node</li> </ul> <pre><code>https://rest.thestratos.org/stratos/register/v1/meta_node/{meta node network address}\n</code></pre> <p></p> <ul> <li>Get total number of registered resource nodes</li> </ul> <pre><code>https://rest.thestratos.org/stratos/register/v1/resource_node_count\n</code></pre> <p></p> <ul> <li>Get total number of registered meta nodes</li> </ul> <pre><code>https://rest.thestratos.org/stratos/register/v1/meta_node_count\n</code></pre> <p></p>"},{"location":"docs-resource-node/setup-and-run-a-sds-resource-node/#check-pot-rewards","title":"Check PoT rewards","text":"<ul> <li>Query PoT rewards of a wallet_address at a specific epoch</li> </ul> <pre><code>https://rest.thestratos.org/stratos/pot/v1/rewards/wallet/{wallet_address}/epoch/{epoch}\n</code></pre> <ul> <li>Query current Pot rewards of a wallet_address</li> </ul> <pre><code>https://rest.thestratos.org/stratos/pot/v1/rewards/wallet/{wallet_address}\n</code></pre> <ul> <li>Query owner's Pot slashing info at a specific height</li> </ul> <pre><code>https://rest.thestratos.org/stratos/pot/v1/slashing/{wallet_address}\n</code></pre> <ul> <li> <p>Check SDS <code>prepay</code> and <code>Ozone</code>(<code>SDS</code> module)</p> </li> <li> <p>Get a simulated prepay result</p> </li> </ul> <p><pre><code>https://rest.thestratos.org/stratos/sds/v1/sim_prepay/&lt;amount of `wei` to prepay&gt;\n</code></pre> </p> <ul> <li>Get current nozPrice</li> </ul> <p><pre><code>https://rest.thestratos.org/stratos/sds/v1/noz_price\n</code></pre> </p> <ul> <li>Get current nozSupply</li> </ul> <pre><code>https://rest.thestratos.org/stratos/sds/v1/noz_supply\n</code></pre> <p></p>"},{"location":"docs-resource-node/setup-and-run-a-sds-resource-node/#other-ppd-terminal-commands","title":"Other <code>ppd terminal</code> commands","text":"<p>Please refer to ppd terminal subcommands for more details.</p> <p></p> <p></p>"},{"location":"docs-stratos-chain/how-to-become-a-validator/","title":"HowTo Become a Validator","text":"<p>Stratos Chain is based on Tendermint, which relies on a set of validators to secure the network. </p> <p>This document explains how to become a validator step by step.</p> <p>In testing phase, the mechanisms and values are subject to change.</p>"},{"location":"docs-stratos-chain/how-to-become-a-validator/#what-is-a-validator","title":"What is a Validator?","text":"<p>Info</p> <p>The role of validators is to run a full-node and participate in consensus by broadcasting votes which contain cryptographic signatures signed by their private key. </p> <p>Validators commit new blocks in the blockchain and receive revenue in exchange for their work. </p> <p>They must also participate in governance by voting on proposals. </p> <p>Validators are weighted according to their total stake.</p> <p>A full-node is a program that fully validates transactions and blocks of a blockchain. In practice, running a full node implies running a non-compromised and up-to-date version of the software with low network latency and with no downtime.</p> <p>The weight(i.e. voting power) of a validator is determined by the total amount of staking tokens(STOS) bonded as collateral. These bonded staking tokens can be self-delegated directly by the validator or delegated to the validator by any tokens holders(<code>delegators</code>). Not all the validator candidates will actively participate in block processing. Currently, only the most staked 100 validators, sorted by their weight(voting power), will be in the <code>active</code> list and thus gain block rewards.</p> <p>If the active validators double sign, are frequently offline or do not participate in governance, their staked tokens will be slashed as penalty, which depends on the severity of the violation.</p> <p></p>"},{"location":"docs-stratos-chain/how-to-become-a-validator/#becoming-a-validator","title":"Becoming a validator","text":"<p>In order to become a validator, First you have installed and run a Stratos-chain full-node. You can setup your full-node if you haven't yet.</p> <p>The following instructions assume you have successfully run a Stratos-chain full-node and followed our instructions by default.</p> <p></p>"},{"location":"docs-stratos-chain/how-to-become-a-validator/#connect-to-stratos-chain-testnet","title":"Connect to Stratos-chain Testnet","text":"<p>Please refer to full-node setup guide to:</p> <p> download related files</p> <p> start your Stratos-chain full-node and catch up to the latest block height(synchronization)</p> <p> create your Stratos-chain Wallet</p> <p> send an amount of tokens to this wallet</p> <p></p>"},{"location":"docs-stratos-chain/how-to-become-a-validator/#directory-structure","title":"Directory Structure","text":"<p>After the node has finished sync, your Stratos-chain wallet has been created and charged with an amount of tokens, <code>$HOME</code> directory will have a <code>.stchaind</code> directory.</p> <pre><code>.\n\u251c\u2500\u2500 config\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 addrbook.json\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 app.toml\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 client.toml\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 config.toml\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 genesis.json\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 node_key.json\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 priv_validator_key.json\n\u251c\u2500\u2500 data\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 application.db\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 blockstore.db\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 priv_validator_state.json\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 snapshots\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 state.db\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 tx_index.db\n\u2514\u2500\u2500 keyring-file\n    \u251c\u2500\u2500 6894f6eef2b730a5f071eed1f3aeb471dfeeeaaf.address\n    \u251c\u2500\u2500 d6052b289b78468612a8f97cf59eac184ba852dd.address\n    \u251c\u2500\u2500 d704353fe67f948c99d2e3105adc5159c9e8f2af.address\n    \u251c\u2500\u2500 f07ab66406c02aa1a398f4fa41a91192fae08997.address\n    \u251c\u2500\u2500 fdb03146cb5a83e08785e8d1f083132d4386b4bd.address\n    \u251c\u2500\u2500 wallet1.info\n    \u251c\u2500\u2500 user10.info\n    \u251c\u2500\u2500 user1.info\n    \u251c\u2500\u2500 user2.info\n    \u2514\u2500\u2500 user3.info\n</code></pre> <p>Tip</p> <p>By default, the <code>.stchaind</code> have been saved or created under the <code>$HOME</code> folder. If you are not sure what is your <code>$HOME</code> folder, in terminal, use <code>echo $HOME</code> to check.</p> <p>In <code>config</code> folder:</p> <ul> <li><code>addrbook.json</code> stores peer addresses.</li> <li><code>app.toml</code> contains the default settings required for app.</li> <li><code>config.toml</code> contains various options pertaining to the stratos-chain configurations.</li> <li><code>genesis.json</code> defines the initial state upon genesis of stratos-chain.</li> <li><code>node_key.json</code> contains the node private key and should thus be kept secret.</li> <li><code>priv_validator_key.json</code> contains the validator address, public key and private key, and should thus be kept secret.</li> </ul> <p>In <code>data</code> folder:</p> <ul> <li>All <code>*.db</code> folders are <code>Tendermint</code> databases</li> <li><code>Tendermint</code> uses a <code>write ahead log</code> (WAL) for consensus</li> <li><code>priv_validator_state.json</code>holds the validator's state</li> </ul> <p></p>"},{"location":"docs-stratos-chain/how-to-become-a-validator/#check-your-wallet-account-balance-and-account-type","title":"Check your wallet account balance and account type","text":"<pre><code>stchaind query bank balances st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\nbalances:\n- amount: \"499999996283820000000\"\n  denom: wei\npagination:\n  next_key: null\n  total: \"0\"\n</code></pre> <pre><code>stchaind query account st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\n|\n'@type': /cosmos.auth.v1beta1.BaseAccount\naccount_number: \"0\"\naddress: st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\npub_key:\n  '@type': /stratos.crypto.v1.ethsecp256k1.PubKey\n  key: Agkwb1xacHBqeqGBIqRacXgf0qKTnEBPCEtH2vTE01Ke\nsequence: \"4\"\n</code></pre>"},{"location":"docs-stratos-chain/how-to-become-a-validator/#get-a-new-validators-pubkey","title":"Get a new validator's pubkey","text":"<p>Validators are actors on the network committing new blocks by submitting their votes. It refers to the node itself, not a single person or a single account. In Stratos-chain, The protocol requires a fixed known set of validators, where each validator is identified by their public key. To get the node public key, run the following command under your node folder.</p> <pre><code>stchaind tendermint show-validator\n</code></pre> <pre><code># expected output\n{\"@type\":\"/cosmos.crypto.ed25519.PubKey\",\"key\":\"69gothWTE9FJBZ5gBjjSNhg8y/5SsI1hBaD81Dum7lo=\"}\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/how-to-become-a-validator/#create-a-new-validator","title":"Create a new validator","text":"<p>A validator can be created by sending a <code>create-validator</code> transaction command</p> <p>DON'T USE MORE STAKING TOKENS THAN YOU HAVE</p> <p>Where:</p> <ul> <li><code>pubKey</code>: The private key associated with this Tendermint PubKey is used to sign prevotes and precommits. Got form step4</li> <li><code>moniker</code>: the validator's name, which is going to be the public name associated to your validator that can easily identify you among all the other validators.</li> <li><code>website</code>: website(Optional)</li> <li><code>description</code>: description(Optional)</li> <li><code>commission-rate</code>: The commission rate on block rewards and fees charged to delegators</li> <li><code>commission-max-rate</code>: The maximum commission rate which this validator can charge. The <code>commission-max-change-rate</code> is used to measure % point change over the commission-rate, e.g., 1% to 2% is a 100% rate increase. This flags cannot be changed after create-validator is processed</li> <li><code>commission-max-change-rate</code>: The maximum daily increase of the validator commission. This flags cannot be changed after create-validator is processed</li> <li><code>min-self-delegation</code>: Minimum amount of tokens the validator needs to have bonded at all time. It is a strictly positive integer that represents the minimum amount of self-delegated staking token your validator must always have. A validator with a self delegation lower than this number will automatically be unbonded.</li> <li><code>amount</code>: the amount to delegate, the minimum amount of tokens that must be delegated to be a bonded validator is \"1\".</li> <li><code>from</code>: the wallet address that the delegation amount come from.</li> <li>the current <code>chain-id</code> is <code>stratos-1</code> for Mainnet </li> <li>on Mainnet, <code>--keyring-backend=file</code>.</li> </ul> <p>Example: <pre><code>stchaind tx staking create-validator \\\n--amount=100stos \\\n--pubkey='{\"@type\":\"/cosmos.crypto.ed25519.PubKey\",\"key\":\"69gothWTE9FJBZ5gBjjSNhg8y/5SsI1hBaD81Dum7lo=\"}' \\\n--moniker=\"myValidator\" \\\n--commission-rate=0.10 \\\n--commission-max-rate=0.20 \\\n--commission-max-change-rate=0.01 \\\n--min-self-delegation=1 \\\n--from=st1dz20dmhjkuc2tur3amgl8t45w807a640leh8p0 \\\n--chain-id=stratos-1 \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-adjustment=1.5 \\\n--gas-prices=1000000000wei -y\n</code></pre></p> <p></p>"},{"location":"docs-stratos-chain/how-to-become-a-validator/#different-validator-states","title":"Different Validator States","text":"<p>After a validator is created with a <code>create-validator</code> transaction, the validator is in one of three states:</p> <p>States:</p> <ul> <li> <p>In validator set: Validator is in the <code>active</code> set and participates in consensus. Validator can be slashed for misbehavior.</p> </li> <li> <p><code>Jailed</code>: Validator misbehaved and is in jail.</p> </li> <li> <p><code>Unbonded</code>: Validator is not in the active set. Validator cannot be slashed. It is still possible to delegate tokens to an unbonded validator. Undelegating from an unbonded validator is immediate.</p> </li> </ul> <p>In the response of <code>query staking validators</code> command in next step, the value of <code>jailed</code> implies if a validator is in jail, while the value of status implies its bonding <code>status</code>:</p> <pre><code>  // UNSPECIFIED defines an invalid validator status.\n  BOND_STATUS_UNSPECIFIED = 0 \n  // UNBONDED defines a validator that is not bonded.\n  BOND_STATUS_UNBONDED = 1 \n  // UNBONDING defines a validator that is unbonding.\n  BOND_STATUS_UNBONDING = 2 \n  // BONDED defines a validator that is bonded.\n  BOND_STATUS_BONDED = 3 \n</code></pre> <p></p>"},{"location":"docs-stratos-chain/how-to-become-a-validator/#view-validatorvalidators","title":"View validator/validators","text":""},{"location":"docs-stratos-chain/how-to-become-a-validator/#view-all-validators","title":"View all validators","text":"<pre><code>stchaind query staking validators\n- |\npagination:\n  next_key: null\n  total: \"0\"\nvalidators:\n- commission:\n    commission_rates:\n      max_change_rate: \"0.010000000000000000\"\n      max_rate: \"0.200000000000000000\"\n      rate: \"0.100000000000000000\"\n    update_time: \"2023-01-09T17:08:58.489050300Z\"\n  consensus_pubkey:\n    '@type': /cosmos.crypto.ed25519.PubKey\n    key: 69gothWTE9FJBZ5gBjjSNhg8y/5SsI1hBaD81Dum7lo=\n  delegator_shares: \"500000000000.000000000000000000\"\n  description:\n    details: \"\"\n    identity: \"\"\n    moniker: node\n    security_contact: \"\"\n    website: \"\"\n  jailed: false\n  min_self_delegation: \"1\"\n  operator_address: stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\n  status: BOND_STATUS_BONDED\n  tokens: \"500000000000\"\n  unbonding_height: \"0\"\n  unbonding_time: \"1970-01-01T00:00:00Z\"\n</code></pre>"},{"location":"docs-stratos-chain/how-to-become-a-validator/#view-a-specific-validator","title":"View a specific validator","text":"<pre><code>stchaind query staking validator &lt;your_validator_operator_address&gt;\n</code></pre> <pre><code>stchaind query staking validator stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\n|\ncommission:\n  commission_rates:\n    max_change_rate: \"0.010000000000000000\"\n    max_rate: \"0.200000000000000000\"\n    rate: \"0.100000000000000000\"\n  update_time: \"2023-01-09T17:08:58.489050300Z\"\nconsensus_pubkey:\n  '@type': /cosmos.crypto.ed25519.PubKey\n  key: 69gothWTE9FJBZ5gBjjSNhg8y/5SsI1hBaD81Dum7lo=\ndelegator_shares: \"500000000000.000000000000000000\"\ndescription:\n  details: \"\"\n  identity: \"\"\n  moniker: node\n  security_contact: \"\"\n  website: \"\"\njailed: false\nmin_self_delegation: \"1\"\noperator_address: stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\nstatus: BOND_STATUS_BONDED\ntokens: \"500000000000\"\nunbonding_height: \"0\"\nunbonding_time: \"1970-01-01T00:00:00Z\"\n</code></pre> <p>Tip</p> <ul> <li> <p>As an active validator, the value of status should be <code>BOND_STATUS_BONDED</code> and <code>jailed</code> is false.</p> </li> <li> <p>From all validator candidates, only the top 100 validators with the most total stake are the active validators. If a validator's total stake falls below the top 100, then that validator loses their validator privileges. </p> </li> <li> <p>The validator cannot participate in consensus until the stake is high enough to be in the top 100. In <code>Stratos Exporer</code>, the validator is shown in <code>inactive</code> list, but not <code>active</code> list.</p> </li> </ul> <p></p>"},{"location":"docs-stratos-chain/how-to-become-a-validator/#validator-operations","title":"Validator Operations","text":"<p>We listed some examples of commonly used commands for validators</p> <p>Tip</p> <ul> <li>You may need to replace the values in these examples with your own data</li> <li>The current <code>chain-id</code> is <code>stratos-</code> for mainnet.</li> <li>For mainnet, <code>--keyring-backend=file</code></li> </ul> <p></p>"},{"location":"docs-stratos-chain/how-to-become-a-validator/#-staking-module","title":"- <code>staking</code> module","text":"<p>responsible for the proof of stake (PoS) layer of the Stratos-chain. It contains create/edit validator as well as delegation operations.</p> <p></p> <ul> <li>Create new validator initialized with a self-delegation to it.</li> </ul> <p>Example:</p> <pre><code>stchaind tx staking create-validator \\\n--amount=100stos \\\n--pubkey='{\"@type\":\"/cosmos.crypto.ed25519.PubKey\",\"key\":\"JwtmYzaX0b+zjuDypUI2+qy8wa/LFtUUUg0+vr11tpg=\"}' \\\n--moniker=\"myValidator\" \\\n--commission-rate=0.10 \\\n--commission-max-rate=0.20 \\\n--commission-max-change-rate=0.01 \\\n--min-self-delegation=1 \\\n--from=st1dz20dmhjkuc2tur3amgl8t45w807a640leh8p0 \\\n--chain-id=stratos-1 \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-adjustment=1.5 \\\n--gas-prices=1000000000wei -y\n</code></pre> <p></p> <ul> <li>Edit(modify) an existing validator Info(params). You can add more information to the validator, such as <code>--website</code>, or <code>--memo</code>.</li> </ul> <p>Example:</p> <pre><code>stchaind tx staking edit-validator \\\n--from=st1dz20dmhjkuc2tur3amgl8t45w807a640leh8p0 \\\n--min-self-delegation=100  \\\n--memo=\"Change 'min-self-delegation' from 1 to 100\" \\\n--website=\"https://my.web.site\" \\\n--chain-id=stratos-1 \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-adjustment=1.5 \\\n--gas-prices=1000000000wei -y\n</code></pre> <p></p> <ul> <li>Delegate an amount of liquid coins to a validator from your wallet.</li> </ul> <p>Example:</p> <pre><code>stchaind tx staking delegate stvaloper1fmdh9vf262qxe5ehmp9jvgkqzaeye4qmxjrr3k 100stos \\\n--from=st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda \\\n--chain-id=stratos-1 \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-adjustment=1.5 \\\n--gas-prices=1000000000wei\n</code></pre> <p></p> <ul> <li>Unbond an amount of bonded shares from a validator.</li> </ul> <p>Example:</p> <pre><code>stchaind tx staking unbond stvaloper12adksjsd7gcsn23h5jmvdygzx2lfw5q4pyf57u 100stos \\\n--from=st12adksjsd7gcsn23h5jmvdygzx2lfw5q4kgq5zh \\\n--chain-id=stratos-1 \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-adjustment=1.5 \\\n--gas-prices=1000000000wei -y\n</code></pre> <p></p> <ul> <li>Query delegations for an individual delegator on all validators.</li> </ul> <p>Example:</p> <pre><code>stchaind query staking delegations st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\n</code></pre> <p></p> <ul> <li>Query details about an individual validator.</li> </ul> <p>Example:</p> <pre><code>stchaind query staking validator stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\n</code></pre> <p></p> <ul> <li>Query values for amounts stored in the staking pool.</li> </ul> <p>Example:</p> <pre><code>stchaind query staking pool\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/how-to-become-a-validator/#-distribution-module","title":"- <code>distribution</code> module","text":"<p>Responsible for distributing staking rewards between validators, delegators, and the Community Pool. It contains operations to claim rewards form a validator and specially, query all slashes of a validator. You cannot withdraw a part of reward. Every time you withdraw, all reward will be withdrawn.</p> <p></p> <ul> <li>Withdraw rewards and commission that your own validator has earned.</li> </ul> <p>Example:</p> <pre><code>stchaind tx distribution withdraw-rewards stvaloper1fmdh9vf262qxe5ehmp9jvgkqzaeye4qmxjrr3k \\\n--commission \\\n--from=st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda \\\n--chain-id=stratos-1 \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-prices=1000000000wei \\\n--gas-adjustment=1.5\n</code></pre> <p></p> <ul> <li>Withdraw rewards from a given delegation address and optionally withdraw validator's commission if the delegation address given is a validator operator.</li> </ul> <p>Purpose: This command is used to withdraw staking rewards from a specific validator.</p> <p>Usage: You need to specify the validator's address from which you want to withdraw rewards.</p> <p>Example:</p> <pre><code>stchaind tx distribution withdraw-rewards stvaloper1fmdh9vf262qxe5ehmp9jvgkqzaeye4qmxjrr3k \\\n--from=st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda \\\n--chain-id=stratos-1 \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-adjustment=1.5 \\\n--gas-prices=1000000000wei -y\n</code></pre> <p></p> <ul> <li>Withdraw all delegation rewards for a delegator.</li> </ul> <p>Purpose: This command is used to withdraw staking rewards from all validators to which you have delegated tokens.</p> <p>Usage: This command does not require you to specify individual validators; it withdraws all accumulated rewards from all validators.</p> <p>Example:</p> <pre><code>stchaind tx distribution withdraw-all-rewards \\\n--from=st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda \\\n--chain-id=mesos-1 \\\n--keyring-backend=test \\\n--gas=auto \\\n--gas-adjustment=1.5 \\\n--gas-prices=1000000000wei -y\n</code></pre> <p></p> <ul> <li>Query all rewards earned by a delegator, optionally restrict to reward from a single validator.</li> </ul> <p>Example:</p> <pre><code>stchaind query distribution rewards st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda --height=9765\n</code></pre> <p></p> <ul> <li>Query distribution outstanding (un-withdrawn) rewards for a validator and all their delegations.</li> </ul> <p>Example:</p> <pre><code>stchaind query distribution validator-outstanding-rewards stvaloper1fmdh9vf262qxe5ehmp9jvgkqzaeye4qmxjrr3k --height=9765\n</code></pre> <p></p> <ul> <li>Query all coins in the <code>community pool</code>.</li> </ul> <p>Example:</p> <pre><code>stchaind query distribution community-pool --height=9765\n</code></pre> <p></p> <ul> <li>Query all slashes of a validator for a given block range.</li> </ul> <p>Example:</p> <pre><code>stchaind query distribution slashes stvaloper1095s2f3m60qz48spy3wr52gw8xmy7xqywnxnrq 0 500\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/how-to-become-a-validator/#-slashing-module","title":"- <code>slashing</code> module","text":"<p>Responsible for enabling Stratos Chain to penalize any validator for an attributable violation of protocol rules by slashing (i.e. partially destroying) the bonded tokens. We usually use <code>unjail</code> command to un-jail a validator and Information about validator's liveness activity is tracked through <code>signing-info</code>.</p> <p></p> <ul> <li>Unjail a jailed validator.</li> </ul> <p>Example:</p> <pre><code>stchaind tx slashing unjail --from=st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda \\\n--chain-id=stratos-1 \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-adjustment=1.5 \\\n--gas-prices=1000000000wei -y\n</code></pre> <p></p> <ul> <li>Use a validators' consensus public key to find the signing-info for that validator.</li> </ul> <p>Example:</p> <pre><code>stchaind query slashing signing-info '{\"@type\":\"/cosmos.crypto.ed25519.PubKey\",\"key\":\"gkpFejHRUaNjvaKpYXvsaUGJsIC5zrXu0ZlqOSF2Wms=\"}'\n</code></pre> <p>You can find all detailed explanations at</p> <ul> <li>Stratos-chain 'stchaind' Commands(part1)</li> <li>Stratos-chain 'stchaind' Commands(part2)</li> <li>Stratos-chain REST APIs</li> <li>Stratos-Chain gRPC Queries</li> </ul> <p></p>"},{"location":"docs-stratos-chain/how-to-become-a-validator/#slashing","title":"Slashing","text":"<p><code>slashing</code> is a validator punishment mechanism. If a validator misbehaves, its bonded stake along with its delegators' stake will be slashed. As Cosmos states, there are 3 main faults that can result in slashing of funds for a validator and its delegators:</p> <p>Faults:</p> <ul> <li> <p>Double-sign: occurs when a validating entity (private key) submits two signed messages for the same block. <code>double-sign</code> makes it more difficult for the network to reach consensus.   The system will then permanently burn (\"slash\") that validator's total delegations (stake-backing) by the parameter <code>SlashFractionDoubleSign</code>(5% currently).   All delegators to an offending validator will lose 5% of all STOSs delegated to this validator. At this point the validator will be <code>tombstoned</code>,   which means the validator will be permanently removed from the active validator set, and can never unjail.    </p> </li> <li> <p>Unavailability(Downtime): It occurs when a validator is unavailable to sign transactions on a blockchain for a certain period of time.   for example, if a validator in the active set is offline for too long(missing more than 95% of the last 10.000 blocks),   the validator will be slashed by the parameter <code>SlashFractionDowntime</code>(0.01%)   and temporarily removed from the active set(<code>jailed</code>) for at least the <code>DowntimeJailDuration</code>(10 minutes currently).   If the jailing is due to being offline for too long, the validator can send an <code>unjail</code> transaction in order to re-join the validator set.    </p> </li> <li> <p>Non-voting: If a validator did not vote on a proposal and once the fault is reported, its stake will receive a minor slash.</p> </li> </ul> <p>We have to be aware that even if a validator does not intentionally misbehave, it can still be slashed if</p> <ul> <li>its node crashes</li> <li>loses connectivity</li> <li>gets DDOSed</li> <li>its private key is compromised</li> </ul> <p></p>"},{"location":"docs-stratos-chain/how-to-become-a-validator/#validators-faq","title":"Validators FAQ","text":""},{"location":"docs-stratos-chain/how-to-become-a-validator/#why-the-validator-status-is-0-and-cannot-find-it-in-active-list","title":"Why the validator status is <code>0</code> and cannot find it in <code>active</code> list?","text":"<p>Validator status is 0 means that the validator stake is <code>unbonded</code>. When using create-validator transaction, you have defined the flag min-self-delegation, the minimum amount of stake the validator needs to have bonded at all time. If the validator's self-delegated stake falls below this limit, their entire staking pool will unbond and the validator status is 0. Although this validator has been created, it will not show in the validator set.</p> <p>You need to delegate more tokens to this validator until the amount of stake is more than <code>min-self-delegation</code>.</p> <p>In addition, since we limited the number of active validators to the most staked 100 candidates, if your validator's total stake less than that of the 100th validator, your validator will lose its validator privileges and will not display in the <code>active</code> validator set. The minimum stake of an <code>active</code> validator(stake of the 100th validator) can can be found at <code>Stratos Exporer</code>.</p> <p>To solve this problem, you can get more tokens delegated until the total stake of your validator is more than the minimum stake of an <code>active</code> validator using the following command</p> <pre><code>stchaind tx staking delegate &lt;validator-addr&gt; &lt;amount&gt; \\\n--from=&lt;name|address of private key&gt; \\\n--chain-id=&lt;current chain-id&gt; \\\n--keyring-backend=&lt;keyring's backend'&gt; \\\n--gas=auto \\\n--gas-adjustment=1.5 \\\n--gas-prices=1000000000wei\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/how-to-become-a-validator/#why-my-validator-is-jailed-and-inactive","title":"Why my validator is <code>jailed</code> and inactive?","text":"<p>Sometimes, you may see your validator is jailed and the voting power become 0. The shares of the validator are <code>unbonded</code> in order to not affecting the running of the network. If this happens, check your validator information and see if your validator was jailed by sending the following command.</p> <pre><code>stchaind query staking validator &lt;validator_operator_address&gt;\n...\njailed: true\nstatus: 1\n...\n</code></pre> <p>This means the validator is <code>jailed</code> and the validator status is <code>unbonding</code>.</p> <p>Tip</p> <p>A lot of scenarios may lead to a validator jailing, like:</p> <ul> <li>Double-sign. Validator cannot re-join to validator set.</li> <li>Unbond too many stake, making the bonded stake is lower than the <code>min-self-delegation</code></li> <li>Downtime: unavailable to sign transactions on a blockchain for a certain period of time</li> <li>Non-voting</li> <li>Low on disk space</li> <li>Node crashes(node does not start or does not catch up to the latest block)</li> </ul> <p>Except for <code>double-sign</code>, you have to wait for your node finishes catch-up and wait at least 10 minutes(downtime jail duration).</p> <p>Then, you can unjail your validator.</p> <p>Finally, check your validator again to see if the validator's voting-power is back.</p> <p>If the problem still persists, please make sure you have enough tokens delegated to your validator.</p> <p></p>"},{"location":"docs-stratos-chain/how-to-become-a-validator/#how-can-i-check-my-validator-info-such-as-voting-power","title":"How can I check my validator info such as voting-power?","text":"<p>There are three ways to check it:</p> <ul> <li>Stratos Explorer</li> <li><code>status</code> command:</li> </ul> <pre><code>stchaind status | jq\n</code></pre> <p>Response:</p> <pre><code>    {\n    \"NodeInfo\": {\n        \"protocol_version\": {\n            \"p2p\": \"8\",\n            \"block\": \"11\",\n            \"app\": \"0\"\n        },\n        \"id\": \"16a0758d175cbf5c08d41dffa73eb5c0190869ed\",\n        \"listen_addr\": \"tcp://0.0.0.0:26656\",\n        \"network\": \"mesos-1\",\n        \"version\": \"0.37.4\",\n        \"channels\": \"40202122233038606100\",\n        \"moniker\": \"node\",\n        \"other\": {\n            \"tx_index\": \"on\",\n            \"rpc_address\": \"tcp://127.0.0.1:26657\"\n        }\n    },\n    \"SyncInfo\": {\n        \"latest_block_hash\": \"4A1AA4808B4199B2247B5DEA1B94B016FA60691EFF8B191AED556978C5981673\",\n        \"latest_app_hash\": \"DCD79CCD19F078615BD073D9420D3368D768674EEB80361FAB0AA143BBDCC65C\",\n        \"latest_block_height\": \"1026\",\n        \"latest_block_time\": \"2023-01-11T01:54:59.009329495Z\",\n        \"earliest_block_hash\": \"139676534FECFA507D56A06B03BD528E70ACA6D4DB6560219707011966613DE4\",\n        \"earliest_app_hash\": \"E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855\",\n        \"earliest_block_height\": \"1\",\n        \"earliest_block_time\": \"2023-01-09T17:08:58.4890503Z\",\n        \"catching_up\": false\n    },\n    \"ValidatorInfo\": {\n        \"Address\": \"18A7169C1B427D994133F7B3D4504E92789DB37C\",\n        \"PubKey\": {\n            \"type\": \"tendermint/PubKeyEd25519\",\n            \"value\": \"69gothWTE9FJBZ5gBjjSNhg8y/5SsI1hBaD81Dum7lo=\"\n        },\n        \"VotingPower\": \"500000\"\n    }\n  }\n</code></pre> <ul> <li>API</li> </ul> <pre><code>curl localhost:26657/status\n</code></pre> <p>Response:</p> <pre><code>   {\n  \"jsonrpc\": \"2.0\",\n  \"id\": -1,\n  \"result\": {\n    \"node_info\": {\n      \"protocol_version\": {\n        \"p2p\": \"8\",\n        \"block\": \"11\",\n        \"app\": \"0\"\n      },\n      \"id\": \"16a0758d175cbf5c08d41dffa73eb5c0190869ed\",\n      \"listen_addr\": \"tcp://0.0.0.0:26656\",\n      \"network\": \"mesos-1\",\n      \"version\": \"0.37.4\",\n      \"channels\": \"40202122233038606100\",\n      \"moniker\": \"node\",\n      \"other\": {\n        \"tx_index\": \"on\",\n        \"rpc_address\": \"tcp://127.0.0.1:26657\"\n      }\n    },\n    \"sync_info\": {\n      \"latest_block_hash\": \"0B67BB5EF1CB8DB944E9A09D2E5E9A69CFCF3CF28510EC36775A6DE16087C4D7\",\n      \"latest_app_hash\": \"97C730F39277540A16363B9B25D0283FE139A1BB894F3BBD744CC6785733C204\",\n      \"latest_block_height\": \"1035\",\n      \"latest_block_time\": \"2023-01-11T01:55:44.25650962Z\",\n      \"earliest_block_hash\": \"139676534FECFA507D56A06B03BD528E70ACA6D4DB6560219707011966613DE4\",\n      \"earliest_app_hash\": \"E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855\",\n      \"earliest_block_height\": \"1\",\n      \"earliest_block_time\": \"2023-01-09T17:08:58.4890503Z\",\n      \"catching_up\": false\n    },\n    \"validator_info\": {\n      \"address\": \"18A7169C1B427D994133F7B3D4504E92789DB37C\",\n      \"pub_key\": {\n        \"type\": \"tendermint/PubKeyEd25519\",\n        \"value\": \"69gothWTE9FJBZ5gBjjSNhg8y/5SsI1hBaD81Dum7lo=\"\n      },\n      \"voting_power\": \"500000\"\n    }\n   }\n  }\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/how-to-become-a-validator/#is-there-any-minimum-amount-of-stake-to-delegate-to-a-validator","title":"Is there any minimum amount of stake to delegate to a validator?","text":"<p>( and is there a minimum amount of STOS that must be delegated to be an active (bonded) validator?)</p> <p>There's no limitation for delegating the validator, but a tiny amount of delegation may be ignored by the algorithm when distributing rewards.</p> <p>When you use <code>create-validator</code> transaction to create a validator, the flag <code>--min-self-delegation</code> defines the minimum amount of stake. If a validator's bonded stake goes below the limit that it predefined, this validator and all of its delegators will unbond. In testing phase, the system takes only the top 100 validators with the highest weight(voting power) into the <code>active</code> list. The more bonded stake a validator has, the more possible to be an <code>active</code> one. We recommend 100stos when you create your validator.</p> <p></p>"},{"location":"docs-stratos-chain/how-to-become-a-validator/#what-is-self-delegation-how-can-i-increase-my-self-delegation","title":"What is self-delegation? How can I increase my self-delegation?","text":"<p><code>Self-delegation</code> is a delegation of stake from a validator to itself. The delegated amount can be increased by sending a <code>delegate</code> transaction from your validator's wallet address.</p> <p></p>"},{"location":"docs-stratos-chain/how-to-become-a-validator/#what-are-the-responsibilities-of-a-validator","title":"What are the responsibilities of a validator?","text":"<p>Validators have two main responsibilities:</p> <ul> <li>Be able to constantly run a correct version of the software: Validators need to make sure that their servers are always online and their private keys are not compromised.</li> <li>Actively participate in governance: Validators are required to vote on every proposal.</li> </ul> <p>Additionally, they should always be up-to-date with the current state of the ecosystem so that they can easily adapt to any change.</p> <p></p>"},{"location":"docs-stratos-chain/how-to-become-a-validator/#how-often-will-a-validator-be-chosen-to-propose-the-next-block","title":"How often will a validator be chosen to propose the next block?","text":"<p>The validator that is selected to propose the next block is called proposer. Each proposer is selected deterministically, and the frequency of being chosen is proportional to the voting power (i.e. amount of bonded tokens) of the validator.</p> <p></p>"},{"location":"docs-stratos-chain/how-to-become-a-validator/#why-validator-keeps-getting-jailed-after-some-time","title":"Why validator keeps getting jailed after some time?","text":"<p>If you have tried to <code>unjail</code>, but your node is jailed again shortly after, it most probably means that your validator has been tombstoned.</p> <p>A validator is in <code>tombstone</code> status only when it double-signs. Once your validator double-signs it will no longer be able to re-join the active set with the same validator key.</p> <p>In order to avoid this, you need to always make sure that each of your nodes does not validate with the same private key.</p> <p>Also, once your validator is tombstoned, all you can do is create a new one, and earn again all the delegations that you had before.</p> <p></p> <p></p>"},{"location":"docs-stratos-chain/how-to-setup-rest-grpc-full-chain/","title":"HowTo Setup Full-Chain as REST or gRPC","text":"<p>In order to work properly, a SDS node needs to generate, sign and broadcast transaction to the Stratos chain through a Full-Chain node.</p> <p>Stratos provides a public endpoint at rest-mesos.thestratos.org for cases when there's only a SDS node running and a Full-Chain is not available.</p> <p>However, this setup is particularly useful if you run both a Full-Chain and a SDS node because you can setup your own REST/gRPC endpoint in your Full-Chain node so it can be used for your SDS node. This means that you will have improved performance, faster responses and you won't be dependent on the public endpoint which may get overloaded at times.</p> <p>This setup is also useful for server farms running multiple SDS nodes.</p> <p>Tip</p> <p>Currently, in mesos-1 testnet, SDS nodes are using REST API but this will be changed to gRPC API once mainnet is launched.</p> <p></p>"},{"location":"docs-stratos-chain/how-to-setup-rest-grpc-full-chain/#rest-setup","title":"REST Setup","text":"<p>To enable REST API in your Full-Chain Node, edit the app.toml file:</p> <pre><code>nano ~/.stchaind/config/app.toml\n</code></pre> <p>And set <code>enable</code> to <code>true</code> and (optionally) edit the <code>address</code> variables. You can change the ip to listen only on local or lan requests and/or you can change the default port.</p> <pre><code>###############################################################################\n###                           API Configuration                             ###\n###############################################################################\n\n# Enable defines if the API server should be enabled.\nenable = true\n\n# Address defines the API server to listen on.\naddress = \"tcp://0.0.0.0:1317\"\n</code></pre> <p>Usage example:</p> <pre><code>curl http://localhost:1317/cosmos/bank/v1beta1/balances/st1pgzvq9p5gyxu7gpe8l33g8nzq0xsfyeaeww3ru\n\n\n{\"height\":\"46397\",\"result\":[\n  {\n    \"denom\": \"wei\",\n    \"amount\": \"499999996283820000000\"\n  }\n]}\n</code></pre> <p>You can see all the REST queries here.</p> <p>To use your Full-Chain REST API for your SDS node, edit this file:</p> <pre><code>nano ~/rsnode/configs/config.toml\n</code></pre> <p>and edit this line with your REST url:</p> <pre><code>stratos_chain_url = 'http://127.0.0.1:1317'\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/how-to-setup-rest-grpc-full-chain/#grpc-setup","title":"gRPC Setup","text":"<p>gRPC will be used by SDS nodes in mainnet. To enable or configure gRPC for your Full-Chain node, edit this file:</p> <pre><code>nano ~/.stchaind/config/app.toml\n</code></pre> <p>And search for this section:</p> <pre><code>###############################################################################\n###                           gRPC Configuration                            ###\n###############################################################################\n\n# Enable defines if the gRPC server should be enabled.\nenable = true\n\n# Address defines the gRPC server address to bind to.\naddress = \"0.0.0.0:9090\"\n</code></pre> <p>Usage example:</p> <p>Tip</p> <p>You can get the precompiled <code>grpcurl</code> binary here.</p> <pre><code>grpcurl -plaintext 127.0.0.1:9090 list stratos.register.v1.Query\n\nstratos.register.v1.Query.BondedMetaNodeCount\nstratos.register.v1.Query.BondedResourceNodeCount\nstratos.register.v1.Query.DepositByNode\nstratos.register.v1.Query.DepositByOwner\nstratos.register.v1.Query.DepositTotal\nstratos.register.v1.Query.MetaNode\nstratos.register.v1.Query.Params\nstratos.register.v1.Query.RemainingOzoneLimit\nstratos.register.v1.Query.ResourceNode\n</code></pre> <p>You can see all the gRPC queries here.</p> <p>To use your Full-Chain gRPC API for your SDS node (only after mainnet launch), edit your SDS config file:</p> <pre><code>nano ~/rsnode/configs/config.toml\n</code></pre> <p>and edit this line:</p> <pre><code>stratos_chain_url = '127.0.0.1:9090'\n</code></pre> <p></p> <p></p>"},{"location":"docs-stratos-chain/how-to-start-with-state-sync/","title":"How to use state sync to start stratos-chain","text":""},{"location":"docs-stratos-chain/how-to-start-with-state-sync/#introduction","title":"Introduction","text":"<p>State sync allows a new node to join a network by fetching a snapshot of the application state at a recent height instead of fetching and replaying all historical blocks. </p> <p>Since the application state is generally much smaller than the blocks, and restoring it is much faster than replaying blocks, this can reduce the time to sync with the network from days to minutes.</p> <p>Warning</p> <p>State Sync feature only works with new node installations.</p>"},{"location":"docs-stratos-chain/how-to-start-with-state-sync/#start-a-node-using-statesync","title":"Start a node using stateSync:","text":""},{"location":"docs-stratos-chain/how-to-start-with-state-sync/#1-get-the-latest-trusted-block-and-hash","title":"1. Get the latest trusted block and hash","text":"<p>Since snapshots are generated every 1,000 blocks, you'll need to obtain the hash for the block number at 1,000-interval heights.</p> <pre><code>curl -s http://rpc.thestratos.org/block | \\\njq -r '.result.block.header.height' | \\\nxargs -I {} bash -c \\\n'BLOCK_NUM=$(({} / 1000 * 1000)); \\\nBLOCK_HASH=$(curl -s http://rpc.thestratos.org/block?height=$BLOCK_NUM | \\\njq -r .result.block_id.hash); \\\necho \"\"; \\\necho \"trust-height: $BLOCK_NUM\"; \\\necho \"trust-hash: $BLOCK_HASH\"'\n</code></pre> <pre><code>Example result:\n\ntrust-height: 4744000\ntrust-hash: CD4B6AA71435AF1FCA3B2A4FCAE0753F222EA0DDA660F0F2C417201964880C80\n</code></pre>"},{"location":"docs-stratos-chain/how-to-start-with-state-sync/#2-setup-configtoml","title":"2. Setup config.toml","text":"<p>Edit the state sync section of <code>.stchaind/config/config.toml</code> as follows:</p> <p>Remember to use the trust height and hash from the above command, not from the example.</p> <pre><code>#######################################################\n###         State Sync Configuration Options        ###\n#######################################################\n[statesync]\n# State sync rapidly bootstraps a new node by discovering, fetching, and restoring a state machine\n# snapshot from peers instead of fetching and replaying historical blocks. Requires some peers in\n# the network to take and serve state machine snapshots. State sync is not attempted if the node\n# has any local state (LastBlockHeight &gt; 0). The node will have a truncated block history,\n# starting from the height of the snapshot.\nenable = true\n\n# RPC servers (comma-separated) for light client verification of the synced state machine and\n# retrieval of state data for node bootstrapping. Also needs a trusted height and corresponding\n# header hash obtained from a trusted source, and a period during which validators can be trusted.\n#\n# For Cosmos SDK-based chains, trust_period should usually be about 2/3 of the unbonding time (~2\n# weeks) during which they can be financially punished (slashed) for misbehavior.\nrpc_servers = \"35.203.182.250:26657,35.230.38.120:26657\"\ntrust_height = 4744000\ntrust_hash = \"CD4B6AA71435AF1FCA3B2A4FCAE0753F222EA0DDA660F0F2C417201964880C80\"\ntrust_period = \"168h0m0s\"\n\n# Time to spend discovering snapshots before initiating a restore.\ndiscovery_time = \"15s\"\n\n# Temporary directory for state sync snapshot chunks, defaults to the OS tempdir (typically /tmp).\n# Will create a new, randomly named directory within, and remove it when done.\ntemp_dir = \"./tmp\"\n\n# The timeout duration before re-requesting a chunk, possibly from a different\n# peer (default: 1 minute).\nchunk_request_timeout = \"10s\"\n\n# The number of concurrent chunk fetchers to run (default: 1).\nchunk_fetchers = \"4\"\n</code></pre>"},{"location":"docs-stratos-chain/how-to-start-with-state-sync/#3-start-the-node","title":"3. Start the node","text":"<p>Node can now be started with the usual command:</p> <pre><code>stchaind start\n</code></pre>"},{"location":"docs-stratos-chain/how-to-start-with-state-sync/#become-snapshot-provider","title":"Become snapshot provider","text":"<p>To provide the StateSync snapshot, the operator must enable the <code>snapshot-interval</code> in the node configuration:</p> <pre><code># snapshot-interval specifies the block interval at which local state sync snapshots are\n# taken (0 to disable). Must be a multiple of pruning-keep-every.\nsnapshot-interval = 1000\n\n# snapshot-keep-recent specifies the number of recent snapshots to keep and serve (0 to keep all).\nsnapshot-keep-recent = 2\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/mainnet-bridge/","title":"HowTo Bridge STOS From Ethereum to Stratos Mainnet","text":""},{"location":"docs-stratos-chain/mainnet-bridge/#introduction","title":"Introduction","text":"<ul> <li>IMPORTANT: Before proceding, make sure to download and install the latest version of Stratos Network Wallet [Download]</li> <li>IMPORTANT: Never send STOS directly from Ethereum network to a Stratos wallet. Migration has to go through the bridge app or else the tokens will be lost.</li> <li>The bridge web app is only available for Metamask.</li> <li>STOS tokens have to be on ETH network and you need some ETH for gas fees.</li> <li>If your tokens are on a CEX (other than Gate.io), you need to withdraw them to Metamask first. If your tokens are on Gate.io, you might be interested in withdrawing directly from Gate to Stratos Network (tutorial here).</li> <li>If in doubt, please use telegram or discord to ask for assistance (links at the bottom of the page). Or, at least, send a small test transaction first, the fee will be worth the trouble if something is wrong. </li> </ul> <p>WARNING</p> <p>The ONLY URL for the bridge is: </p> <p>app.exoswap.io</p> <p>Always check the URL and beware of scammers!</p>"},{"location":"docs-stratos-chain/mainnet-bridge/#ethereum-to-stratos","title":"Ethereum to Stratos","text":"<ul> <li>Make sure your Metamask wallet has STOS tokens as ERC-20 and some ETH for gas fee. Next, open the bridge URL and connect the wallet.</li> </ul> <ul> <li>Enter the amount of STOS you want to bridge and click Approve.</li> </ul> <ul> <li>Approve a spending limit. Make sure you set the limit at least equal to the amount you want to bridge.</li> </ul> <ul> <li>Once the spending limit is approved, initiate the transfer. This process could take aprox. 2-3 minutes.</li> </ul> <ul> <li>Next, you need to add the Stratos Network details to Metamask. Click the upper left button and then click <code>Add Network</code>.</li> </ul> <ul> <li>In the next screen, enter the following details:</li> </ul> Setting Name Value Network name <code>Stratos</code> New RPC URL <code>https://web3-rpc.thestratos.org</code> Chain ID <code>2048</code> Currency symbol <code>STOS</code> Block Explorer URL <code>https://web3-explorer.thestratos.org</code> <ul> <li>Your STOS tokens should now be visible on the Stratos network. </li> </ul>"},{"location":"docs-stratos-chain/mainnet-bridge/#stratos-to-ethereum","title":"Stratos to Ethereum","text":"<p>Migrating back to Ethereum network is basically the same process, but backwards.</p> <ol> <li> <p>Open Metamask and make sure it's connected to Stratos Network.</p> </li> <li> <p>Once you see your STOS tokens in Metamask (connected to Stratos), open ExoSwap.</p> </li> <li> <p>Change the order of the operation using the switch button in the middle and make sure the first chain is set to Stratos:</p> <p></p> </li> <li> <p>Start the transfer process.</p> </li> </ol> <p>Warning</p> <p>Fees for bridging from Stratos to Ethereum are quite high (out of our control, it's what Ethereum network is charging) so alternatively, you could use the migration option through Gate.io.</p> <p></p>"},{"location":"docs-stratos-chain/mainnet-staking/","title":"HowTo Stake STOS on Stratos Mainnet","text":""},{"location":"docs-stratos-chain/mainnet-staking/#introduction","title":"Introduction","text":"<ul> <li>IMPORTANT: Before proceding, make sure to download and install the latest version of Stratos Network Wallet [Download].</li> <li>If your tokens are on the ETH network or on a CEX, you need to bridge them to Stratos Network tutorial here.</li> <li>If in doubt, please use telegram or discord to ask for assistance.  </li> <li>Please choose carefully your staking metwork (Stratos Wallet OR MetaMask) as you won't be able to import one wallet into another (they are using different type of seed phrase). The only way to switch from a wallet type to another is by unstaking and then sending the tokens to the other wallet type, but that will take 21 days.</li> </ul> <p>WARNING</p> <p>The ONLY URL for the bridge and staking is: </p> <p>app.exoswap.io</p> <p>Always check the URL and beware of scammers!</p>"},{"location":"docs-stratos-chain/mainnet-staking/#using-stratos-wallet","title":"Using Stratos Wallet","text":"<ul> <li> <p>Go to thestratos.org/stratos-network-wallet and download the Stratos Wallet.</p> </li> <li> <p>Import an existing wallet address or generate a new one. To generate a new one, click <code>Create or Import Wallet</code> and the click <code>Generate new Mnemonic</code> button to generate a new seed phrase.</p> </li> </ul> <p>Please keep your seed phrase in a safe location. You won't be able to retrieve it again from the wallet application!</p> <p></p> <ul> <li>Copy the wallet address in the st1ABC format by clicking the copy button.</li> </ul> <p></p> <ul> <li>Open the Address Convertor Page and Paste the st1xxx format address in the <code>stos based address</code> field.</li> </ul> <p>Next, copy the translated address in the 0xABC form.</p> <p></p> <ul> <li>Go to Metamask and transfer STOS tokens to the 0xABC address.</li> </ul> <p></p> <ul> <li> <p>Go back to your Stratos Wallet and click the refresh balance button. You should see your tokens there.</p> </li> <li> <p>Next, go to the <code>Reward</code> tab and choose a validator. Click <code>Delegate</code> next to it and stake your coins.</p> </li> </ul> <p></p> <ul> <li>Your tokens are now staked. </li> </ul> <p>You can check back from time to time and withdraw your rewards by clicking on the <code>Get all rewards</code> button.</p>"},{"location":"docs-stratos-chain/mainnet-staking/#unstake-with-stratos-wallet","title":"Unstake with Stratos Wallet","text":"<ul> <li>To unstake your tokens, open the Stratos Wallet, go to <code>Send Transaction</code>, choose transaction type <code>Undelegate</code>, select the validator you want to unstake from, enter amount and generate the transaction.</li> </ul> <p>Warning</p> <p>There is a 21 days cool-down period so you will receive your unstaked coins back into your wallet after 21 days.</p>"},{"location":"docs-stratos-chain/mainnet-staking/#using-metamask","title":"Using MetaMask","text":"<ul> <li> <p>To stake your STOS tokens to a validator on Stratos Chain using MetaMask, your STOS tokens must be on the Stratos Network and your MetaMask must be connected to Stratos Chain.</p> </li> <li> <p>Once you completed the Ethereum to Stratos bridge, you should find your STOS tokens in your MetaMask account connected to Stratos Network.</p> </li> </ul> <p> </p> <ul> <li>Open app.exoswap.io. Navigate to <code>Staking</code> and connect your MetaMask wallet.</li> </ul> <p> </p> <ul> <li>Choose any validator in the list and enter the desired amount of tokens you would want to stake, then press <code>Delegate</code>.</li> </ul> <p>Do not use <code>MAX</code>, leave at least 0.01 STOS in balance to cover the transaction fees.</p> <p> </p> <ul> <li>Confirm the transaction.</li> </ul> <p> </p> <ul> <li> <p>Your STOS is now delegated and earning staking rewards.</p> </li> <li> <p>You can claim the rewards anytime and re-stake them but always remember to leave a small amount to cover for the transaction fees.</p> </li> </ul> <p> </p>"},{"location":"docs-stratos-chain/mainnet-staking/#unstake-with-metamask","title":"Unstake with MetaMask","text":"<ul> <li> <p>Open app.exoswap.io. Navigate to <code>Staking</code> and connect your MetaMask wallet.</p> </li> <li> <p>Open the validator you staked to and click on the drop down menu under amount details and select <code>Undelegate</code>. </p> </li> </ul> <p> </p> <ul> <li> <p>Select the amount of tokens you want to undelegate and press the <code>Undelegate</code> button to process the transaction. </p> </li> <li> <p>MetaMask will ask you to confirm the transaction. </p> </li> </ul> <p></p> <ul> <li>After 21 days, you will receive your rewards back in your balance.</li> </ul> <p>Please keep in mind</p> <ul> <li> <p>A validator's voting power will NOT affect your earning potential. Your earning will be the same, regardless of the validator you chose.</p> </li> <li> <p>The only thing influencing your rewards if the commission amount each validator is charging. </p> </li> <li> <p>For the sake of decentralization, we should all make sure we keep our validators` Voting Power as equal as possible.</p> </li> <li> <p>Your staking rewards can be withdrawn at any time but your staking DEPOSIT has a 21 days lock-down period. </p> </li> </ul> <p></p>"},{"location":"docs-stratos-chain/network/","title":"Network","text":""},{"location":"docs-stratos-chain/network/#network-details","title":"Network details","text":"MainnetMesos Testnet <p>The documentation corresponding contains details for the RPC - HTTP, WS endpoints. There is also a full node setup if you wish to setup your own full node.</p> Service Details RPC https://rpc.thestratos.org/ REST https://rest.thestratos.org/ gRPC https://grpc.thestratos.org/ Block Explorer https://explorer.thestratos.org/ <p>Mesos Testnet replicates the Stratos Mainnet, which is to be used for testing. Testnet coins are separate and distinct from actual tokens/assets, and are never supposed to have any value. This allows application developers or validators/testers to experiment, without having to use real assets or worrying about breaking the main Stratos chain.</p> <p>The documentation corresponding contains details for the RPC - HTTP, WS endpoints. There is also a full node setup if you wish to setup your own full node.</p> Service Details RPC https://rpc-mesos.thestratos.org/ REST https://rest-mesos.thestratos.org/ Faucet https://faucet-mesos.thestratos.org/ Block Explorer https://explorer-mesos.thestratos.org/ <p></p>"},{"location":"docs-stratos-chain/setup-and-run-a-stratos-chain-full-node/","title":"Full-Chain Node","text":""},{"location":"docs-stratos-chain/setup-and-run-a-stratos-chain-full-node/#introduction","title":"Introduction","text":"<p>Stratos blockchain facilitates all decentralized ledger transactions and functionalities, providing settlement services and related financial payment services for network providers and network users in an efficient, fair and transparent manner.</p> <p>The Stratos-chain full-nodes are dedicated servers with sufficient computing power that participate in block generation cycle. It is necessary in order to be a validator.</p> <p>In practice, running a full-node only implies running a non-compromised and up-to-date version of the software with low network latency and without downtime. It is encouraged to run a full-node even if you do not plan to be a validator.</p> <p>The Stratos-chain validator is a full-node that participates in the Stratos Chain block generation cycle and also voting for the validity of a block proposed.</p> <p>You do not need to initiate your validator from block 1, which can take a long time to sync. </p> <p>Instead, you can expedite the process by using the State Sync feature before starting the node.</p> <p></p>"},{"location":"docs-stratos-chain/setup-and-run-a-stratos-chain-full-node/#requirements","title":"Requirements","text":"<p>Here are the required hardware/software to run a Stratos-chain full-node:</p> <p>Minimum Hardware Requirements</p> CPU RAM Storage Stake 8 Cores\u00b9, 2.5GHz\u00b2 32 GB 2 TB 1 STOS\u00b3 <p> \u00b9 \u00a0\u00a0 Can be achieved using dual CPU server configurations (eg. 2cpu x 8cores, as long as the frequency per core is respected). \u00b2 \u00a0\u00a0 2.5GHz refers to Base Frequency, not Turbo/Boost Frequency.  \u00b3 \u00a0\u00a0 Minimum stake is 1 stos until all 100 validator spots are filled. After that, is marked decided.</p> <p>Software (tested version)</p> <ul> <li>Ubuntu 18.04+</li> <li>Go 1.20+ linux/amd64</li> </ul> <p></p>"},{"location":"docs-stratos-chain/setup-and-run-a-stratos-chain-full-node/#setup-environment","title":"Setup Environment","text":"<p>In order to run a Stratos-chain full-node, you may need to build <code>stratos-chain</code> source code yourself which requires <code>Go 1.19+</code>, <code>git</code>, <code>curl</code> and <code>make</code> installed.</p> <p>This process depends on your operating system.</p> <p></p>"},{"location":"docs-stratos-chain/setup-and-run-a-stratos-chain-full-node/#linux-users","title":"Linux Users","text":"<p>The following example is based on Ubuntu 18.04+ 64-bit(Debian) and assumes you are using a terminal environment by default.</p> <p>Please run the equivalent commands if you are running other Linux distributions.</p> <pre><code># Update the system\nsudo apt update\nsudo apt upgrade\n\n# Install git, snap and make(you can also install them separately as your needs)\nsudo apt install git build-essential curl tmux libgmp3-dev flex bison jq --yes\n\n# Install PBC library\nwget https://crypto.stanford.edu/pbc/files/pbc-0.5.14.tar.gz\ntar xfz pbc-0.5.14.tar.gz &amp;&amp; cd pbc-0.5.14\n./configure\nmake\nsudo make install\nsudo ldconfig\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/setup-and-run-a-stratos-chain-full-node/#windows-users","title":"Windows Users","text":"<p>It is possible to build and run the software on Windows. However, we did not test it on Windows completely.</p> <p>It may give you unexpected results, or it may require additional setup.</p> <p>An alternative option is to install a separate virtual Linux system using VirtualBox or VMware Workstation.</p> <p></p>"},{"location":"docs-stratos-chain/setup-and-run-a-stratos-chain-full-node/#setup-a-stratos-chain-full-node","title":"Setup a Stratos-chain full-node","text":""},{"location":"docs-stratos-chain/setup-and-run-a-stratos-chain-full-node/#create-a-user-account","title":"Create a user account","text":"<p>To create a separated and more secure environment, it is recommended to create a separated user account <code>stratos</code> to run your node.</p> <pre><code>sudo adduser stratos --home /home/stratos\n</code></pre> <p>Once the user account <code>stratos</code> is created, switch and login the system using <code>stratos</code>. You will proceed with the following steps in context of that user.</p> <p></p>"},{"location":"docs-stratos-chain/setup-and-run-a-stratos-chain-full-node/#get-release-files","title":"Get release files","text":"<p>Tip</p> <p>There are two ways to get the these binary executables:</p> <ul> <li>Download pre-compiled executabled (for Ubuntu 18.04+ x86_64).</li> <li>Download source code and compile it yourself.</li> </ul> <p>Please choose only one of them based on your operating system.</p> <p></p>"},{"location":"docs-stratos-chain/setup-and-run-a-stratos-chain-full-node/#pre-compiled-executables","title":"Pre-compiled executables","text":"<ul> <li>Create executable folder and path:</li> </ul> <pre><code>mkdir ~/bin \necho 'export PATH=\"$HOME/bin:$PATH\"' &gt;&gt; ~/.profile \nsource ~/.profile\n</code></pre> <p>The following binary <code>stchaind</code> has been built and ready to be downloaded directly.</p> <pre><code>wget https://github.com/stratosnet/stratos-chain/releases/download/v0.12.1/stchaind \\\n-O ~/bin/stchaind &amp;&amp; \\\nchmod +x ~/bin/stchaind\n</code></pre> <p></p> <ul> <li>Check the granularity</li> </ul> <p><pre><code>md5sum ~/bin/stchaind\n</code></pre> <pre><code>## Expected output\n0277fc8036ae2414f447f839f43c91e2  /home/stratos/bin/stchaind\n</code></pre></p> <p></p> <ul> <li>Verify installation</li> </ul> <pre><code>stchaind version\n\n# Should return v0.12.1\n</code></pre> <p>Tip</p> <p>\ud83d\udca1 This binary is built for Ubuntu 18.04+ amd64. </p> <p>If you have other Linux kernels or you have any issues with the pre-compiled binary please, follow the next step to build your own binary from source code.</p> <p>Otherwise, continue with Initialize the node.</p> <p></p>"},{"location":"docs-stratos-chain/setup-and-run-a-stratos-chain-full-node/#compile-the-source-code","title":"Compile the source code","text":"<p>Before the following steps, please make sure you have <code>Go 1.19+</code> installed .</p> <pre><code># Check if go is already installed:\ngo version\n\n# If it's not, you can install it with snapd:\nsudo apt install snapd\nsudo snap install go --classic\n</code></pre> <p>Alternatively, you can follow the official instructions: install golang.</p> <p></p> <ul> <li>Build the extracted source code</li> </ul> <pre><code>git clone https://github.com/stratosnet/stratos-chain.git\ncd stratos-chain\ngit checkout tags/v0.12.1\nmake build\n</code></pre> <p></p> <ul> <li>Installing the binary executable</li> </ul> <pre><code>mkdir ~/bin \necho 'export PATH=\"$HOME/bin:$PATH\"' &gt;&gt; ~/.profile \nsource ~/.profile\ncp build/stchaind ~/bin\nchmod +x ~/bin/stchaind\n</code></pre> <ul> <li>Verify installation</li> </ul> <pre><code>stchaind version\n\n# Should return v0.12.1\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/setup-and-run-a-stratos-chain-full-node/#initialize-the-node","title":"Initialize the node","text":"<p>Create folders and initialize the node:</p> <p>Ignore the output since you need to download the genesis file.</p> <pre><code>stchaind init \"&lt;node moniker&gt;\" --chain-id stratos-1\n</code></pre> <p>\ud83d\udca1 You can choose any <code>node moniker</code>. This will be your validator name.</p> <p></p> <ul> <li>Download the <code>genesis.json</code> and <code>config.toml</code> files</li> </ul> <pre><code>wget https://raw.githubusercontent.com/stratosnet/mainnet/main/genesis/genesis.json \\\n-O ~/.stchaind/config/genesis.json\n\nwget https://raw.githubusercontent.com/stratosnet/mainnet/main/config.toml \\\n-O ~/.stchaind/config/config.toml\n</code></pre> <p></p> <ul> <li>Change <code>moniker</code> in the downloaded <code>config.toml</code> file</li> </ul> <pre><code>nano ~/.stchaind/config/config.toml\n</code></pre> <p>Search <code>moniker</code> (usually at Line #18) in the file and choose a name for your validator:</p> <p><pre><code># A custom human readable name for this node\nmoniker = \"&lt;your_node_moniker&gt;\"\n</code></pre> </p>"},{"location":"docs-stratos-chain/setup-and-run-a-stratos-chain-full-node/#directory-structure","title":"Directory structure","text":"<p>After you finished the above steps, your <code>$HOME</code> folder should include the following directories and files.</p> <pre><code>.\n\u251c\u2500\u2500 ...\n\u251c\u2500\u2500 .stchaind\n\u2502   \u251c\u2500\u2500 config\n\u2502   \u2502   \u251c\u2500\u2500 app.toml\n\u2502   \u2502   \u251c\u2500\u2500 config.toml\n\u2502   \u2502   \u251c\u2500\u2500 genesis.json\n\u2502   \u2502   \u251c\u2500\u2500 node_key.json\n\u2502   \u2502   \u2514\u2500\u2500 priv_validator_key.json\n\u2502   \u251c\u2500\u2500 data\n\u2502   \u2502    \u2514\u2500\u2500 priv_validator_state.json \n\u2502   \u2514\u2500\u2500 keyring-file\n\u251c\u2500\u2500 ...\n</code></pre> <p>Tip</p> <p>\ud83d\udca1 By default, directory <code>.stchaind</code> will be created in the <code>$HOME</code> folder. </p> <p>The <code>.stchaind</code> folder contains the nodes` configurations and data.</p> <p></p>"},{"location":"docs-stratos-chain/setup-and-run-a-stratos-chain-full-node/#start-the-full-chain-node","title":"Start the full-chain node","text":"<p>Important</p> <p>Joining the network at a later time after mainnet launch will require your node to download all the past blocks which, depending on how far ahead the network is, it could take hours or even days.</p> <p>Stratos Chain now supports StateSync which enables your node to use a snapshot of the current chain and start the sync from there, which will only take a couple of minutes.</p> <p>Please follow the StateSync Doc here BEFORE starting the node.</p> <p>There are three ways to run your Stratos-chain full-node. </p> <p>Please choose ONE of them to start the node.</p> <p></p>"},{"location":"docs-stratos-chain/setup-and-run-a-stratos-chain-full-node/#in-background","title":"In background","text":"<pre><code># run your node in backend\ntmux new -s stchaind\nstchaind start \n</code></pre> <p>Use the following Linux Command to stop your node.</p> <pre><code>pkill stchaind\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/setup-and-run-a-stratos-chain-full-node/#in-foreground","title":"In foreground","text":"<pre><code># run your node\nstchaind start\n\n# Use `Ctrl+c` to stop the node.\n</code></pre>"},{"location":"docs-stratos-chain/setup-and-run-a-stratos-chain-full-node/#as-service","title":"As service","text":"<p>All below steps require root privileges</p> <p></p> <ul> <li>Create the service file</li> </ul> <p>Create the <code>/lib/systemd/system/stratos.service</code> file with the following content</p> <pre><code>[Unit]\nDescription=Stratos Chain Node\nAfter=network-online.target\n\n[Service]\nUser=stratos\nExecStart=/home/stratos/bin/stchaind start --home=/home/stratos/.stchaind\nRestart=on-failure\nRestartSec=3\nLimitNOFILE=8192\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> <p>Tip</p> <p>\ud83d\udca1 In the [service] section:</p> <ul> <li><code>User</code> is your system login username</li> <li><code>ExecStart</code> designates the absolute path to the binary <code>stchaind</code></li> <li><code>--home</code> is the absolute path to your node folder.</li> <li>We used the default values for these variables. If you use a different username, group or folder to hold your node data instead of the default values, please modify these values according to your situations. Make sure the above values are correct.</li> </ul> <p></p> <ul> <li>Start your service</li> </ul> <p>Once you have successfully created the service, you need to enable and start it by running</p> <pre><code>systemctl daemon-reload\nsystemctl enable stratos.service\nsystemctl start stratos.service\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/setup-and-run-a-stratos-chain-full-node/#service-operations","title":"Service operations","text":"<ul> <li>Check the service status</li> </ul> <pre><code>systemctl status stratos.service\n</code></pre> <ul> <li>Check service log</li> </ul> <pre><code>journalctl -u stratos.service -f \n\n# exit with ctrl+c\n</code></pre> <ul> <li>Stop the service</li> </ul> <pre><code>systemctl stop stratos.service\n</code></pre>"},{"location":"docs-stratos-chain/setup-and-run-a-stratos-chain-full-node/#check-node-status","title":"Check node status","text":"<p>Once you start your full-node, it will connect to the peers and start syncing. You can check the status of the node by running the following command</p> <pre><code># Check the status of the node\nstchaind status | jq\n</code></pre> <p>The output will be similar to</p> <pre><code>{\n  \"NodeInfo\": {\n    \"protocol_version\": {\n      \"p2p\": \"8\",\n      \"block\": \"11\",\n      \"app\": \"0\"\n    },\n    \"id\": \"431fa1be3ae34f83db720fcdeeaf7bd3c2a5976c\",\n    \"listen_addr\": \"tcp://0.0.0.0:26656\",\n    \"network\": \"stratos-1\",\n    \"version\": \"0.37.5\",\n    \"channels\": \"40202122233038606100\",\n    \"moniker\": \"your-node\",\n    \"other\": {\n      \"tx_index\": \"on\",\n      \"rpc_address\": \"tcp://94.53.41.120:26657\"\n    }\n  },\n  \"SyncInfo\": {\n    \"latest_block_hash\": \"D443883AB048660663F13A52A530DAC60972BE54088929E6ECA805BEA3D0EAE6\",\n    \"latest_app_hash\": \"BE719C38F2665CEEEED705BD42B4CADE05DD4B9E63F102EE8351CB8B50C690F8\",\n    \"latest_block_height\": \"4752278\",\n    \"latest_block_time\": \"2024-08-20T20:57:26.381005711Z\",\n    \"earliest_block_hash\": \"AB23DC591EE39725A719849B7DDAD6205D218586332E98912CE52DE9CE5D2A19\",\n    \"earliest_app_hash\": \"E152858E2B7B2BD6CC427CD9D9E6B8CAE3D2F7C854587BBA9B90262B1AEEA860\",\n    \"earliest_block_height\": \"630001\",\n    \"earliest_block_time\": \"2023-11-04T18:33:05.05823058Z\",\n    \"catching_up\": false\n  },\n  \"ValidatorInfo\": {\n    \"Address\": \"0AA17143FBF6AA55E157548B87AADBEDA5031FC0\",\n    \"PubKey\": {\n      \"type\": \"tendermint/PubKeyEd25519\",\n      \"value\": \"NIh+ybQFoHDiNd133LcwUYjmGxR8ITta/2G1gpcq/AU=\"\n    },\n    \"VotingPower\": \"2703735768\"\n  }\n}\n</code></pre> <p>If the <code>catching_up</code> value is <code>false</code> in the <code>sync_info</code> section, it means that you are fully synced.</p> <p>If it is <code>true</code>, it means your node is still syncing.</p> <p></p>"},{"location":"docs-stratos-chain/setup-and-run-a-stratos-chain-full-node/#setup-a-wallet","title":"Setup a wallet","text":"<p>Once the node finishes catch-up, you are ready to operate your node for various transactions(tx) and queries.</p> <p>In order to hold the tokens that you will later delegate to your validator node, or pay staking for your SDS resource node, first, you need to create a local wallet account.</p> <p></p>"},{"location":"docs-stratos-chain/setup-and-run-a-stratos-chain-full-node/#create-a-new-wallet","title":"Create a new wallet","text":"<p>To create a new wallet account, type the following command</p> <pre><code>stchaind keys add wallet1 \\\n--hd-path=\"m/44'/606'/0'/0/0\" \\\n--keyring-backend=file\n</code></pre> <p>Tip</p> <p>\ud83d\udca1 You can replace <code>wallet1</code> with another name of your choosing. </p> <p>After creating a new local wallet account, you will get its <code>address</code> and <code>pubkey</code>.</p> <p>In addition, you will have a secret recovery phrase(mnemonic phrase) which can be used to recover an existing wallet account and should be kept secret.</p> <p>Example:</p> <pre><code>stchaind keys add wallet1 --hd-path=\"m/44'/606'/0'/0/0\" --keyring-backend=file\n\n- name: wallet1\ntype: local\naddress: st1x2c6gy4vr8alsyzuqr2x8x8xxtvs97sk3jt6dp\npubkey: '{\"@type\":\"/stratos.crypto.v1.ethsecp256k1.PubKey\",\"key\":\"A7HCZTlHEarBPabkOgId5SlyQKdqEsbXJHit7y9LXRy+\"}'\nmnemonic: \"\"\n\n\n**Important** write this mnemonic phrase in a safe place.\nIt is the only way to recover your account if you ever forget your password.\n\nvenue chest pattern tool certain identify adult theme thing public foster promote pave topple thing uncle brisk suffer present popular envelope wrap holiday goddess\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/setup-and-run-a-stratos-chain-full-node/#recover-an-existing-wallet","title":"Recover an existing wallet","text":"<p>If you already have a Stratos wallet account, you can recover it by typing the following command</p> <pre><code>stchaind keys add wallet1 \\\n--recover \\\n--hd-path=\"m/44'/606'/0'/0/0\" \\\n--keyring-backend=file\n</code></pre> <p>Tip</p> <p>\ud83d\udca1 You can replace <code>wallet1</code> with another name of your choosing. </p> <p></p> <p>After the above <code>keys add</code> command executed, a <code>keyring-file</code> folder will be created under <code>~/.stchaind</code> which contains your wallets' information with their addresses. </p> <p>The <code>keyring-file</code> folder looks like</p> <pre><code>.\n\u251c\u2500\u2500 2aee376318ab1d893383befee766d3a362aa34d1.address\n\u251c\u2500\u2500 keyhash\n\u2514\u2500\u2500 wallet1.info\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/setup-and-run-a-stratos-chain-full-node/#check-your-wallet","title":"Check your wallet","text":"<p>There are two ways to check your local wallets</p> <p></p> <ul> <li>Check all local wallet accounts</li> </ul> <pre><code>stchaind keys list --keyring-backend=file\n</code></pre> <p>Example:</p> <pre><code>stchaind keys list --keyring-backend=file\n   - address: st16uzr20lx072gexwjuvg94hz3t8y73u4085s9sw\n     name: wallet1\n     pubkey: '{\"@type\":\"/stratos.crypto.v1.ethsecp256k1.PubKey\",\"key\":\"A/wF15Wd3ogCXstE7S4Zf3DA4KXb0W7exQhP004PLTi3\"}'\n     type: local\n   - address: st1dz20dmhjkuc2tur3amgl8t45w807a640leh8p0\n     name: user1\n     pubkey: '{\"@type\":\"/stratos.crypto.v1.ethsecp256k1.PubKey\",\"key\":\"AgnhB5EkHL8+jD0/zRDR11nIpfOirTRrjgCX6uibhmDW\"}'\n     type: local\n   - address: st1lkcrz3ktt2p7ppu9arglpqcn94pcdd9a9pmatf\n     name: user10\n     pubkey: '{\"@type\":\"/stratos.crypto.v1.ethsecp256k1.PubKey\",\"key\":\"A2sZ2Z9BU9oDELC06Gj8Lfc5UycxTaPux3sEIq8sIzSW\"}'\n     type: local\n   - address: st16czjk2ym0prgvy4gl970t84vrp96s5kayfqmf2\n     name: user2\n     pubkey: '{\"@type\":\"/stratos.crypto.v1.ethsecp256k1.PubKey\",\"key\":\"AwfcJTOVWdx6ai61cy8VGJ1SdWHzwm2CCmr/+PwSpFeR\"}'\n     type: local\n   - address: st17patveqxcq42rguc7nayr2g3jtawpzvhfmmumt\n     name: user3\n     pubkey: '{\"@type\":\"/stratos.crypto.v1.ethsecp256k1.PubKey\",\"key\":\"AtFxbuB4s+2SYzImGPIBwe0H0mKCXbIPu1T63OvbgE/3\"}'\n     type: local\n</code></pre> <p></p> <ul> <li>Check a specific local wallet account</li> </ul> <pre><code>stchaind keys show &lt;your wallet name&gt; --keyring-backend=file\n</code></pre> <p>Example:</p> <pre><code>stchaind keys show wallet1 --keyring-backend=file\n   - address: st16rzhy6wy2rupydps0gem69y2cnus2j09n42ksx\n     name: wallet1\n     pubkey: '{\"@type\":\"/stratos.crypto.v1.ethsecp256k1.PubKey\",\"key\":\"A13YKi3/7p9FsFPTfVgxEO0YK8bnDHmBPfA3ID+k37ET\"}'\n     type: local\n</code></pre> <p></p> <ul> <li>Check wallet account info and balance</li> </ul> <p>You can query your account information using this command:</p> <pre><code>stchaind query account &lt;your wallet address&gt;\n</code></pre> <p>Example:</p> <pre><code>stchaind query account st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx\n|\n'@type': /cosmos.auth.v1beta1.BaseAccount\naccount_number: \"1\"\naddress: st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx\npub_key:\n  '@type': /stratos.crypto.v1.ethsecp256k1.PubKey\n  key: A7jyRacJN1YLbmDxlA6qhs2yNHQle+ketWaUPhTuJUS2\nsequence: \"132\"\n</code></pre> <p></p> <p>You can query your wallet balances using this command:</p> <pre><code>stchaind query bank balances &lt;your wallet address&gt;\n</code></pre> <p>Example:</p> <pre><code>stchaind query bank balances st1d3qtsjyypa639q9kf0wmuf2dn4a7zrnujw84q4\n|\nbalances:\n- amount: \"9998000000000000000\"\n  denom: wei\npagination:\nnext_key: null\ntotal: \"0\n</code></pre> <p></p> <ul> <li>Try your first tx - <code>send</code></li> </ul> <p>This tx command will send an amount of tokens from one wallet address to another:</p> <pre><code>stchaind tx bank send &lt;from address&gt; &lt;to address&gt; &lt;amount&gt; \\\n--keyring-backend=file \\\n--chain-id=stratos-1 \\\n--gas=auto \\\n--gas-prices=1000000000wei \\\n--gas-adjustment=1.5\n</code></pre> <ul> <li>For <code>chain-id</code> and <code>keyring-backend</code>, see Networks.</li> <li>Make sure your <code>&lt;from address&gt;</code> has enough tokens</li> <li>Please wait for around 7 seconds for block generation after a transaction.</li> </ul> <p>Example:</p> <p>Let us assume:</p> <ul> <li>from address: <code>st1dz20dmhjkuc2tur3amgl8t45w807a640leh8p0</code></li> <li>to address: <code>st123wun5lnwerdrt0mk2uxtusgawpfr228a0sseg</code></li> <li>amount: <code>1stos</code></li> </ul> <pre><code>stchaind tx bank send st1dz20dmhjkuc2tur3amgl8t45w807a640leh8p0 \\\nst123wun5lnwerdrt0mk2uxtusgawpfr228a0sseg 1stos \\\n--keyring-backend=file \\\n--chain-id=stratos-1 \\\n--gas=auto \\\n--gas-prices=1000000000wei \\\n--gas-adjustment=1.5\n\n\nEnter keyring passphrase (attempt 1/3):\ngas estimate: 117088\nauth_info:\n  fee:\n    amount:\n    - amount: \"117088000000000\"\n      denom: wei\n    gas_limit: \"117088\"\n    granter: \"\"\n    payer: \"\"\n  signer_infos: []\n  tip: null\nbody:\n  extension_options: []\n  memo: \"\"\n  messages:\n  - '@type': /cosmos.bank.v1beta1.MsgSend\n    amount:\n    - amount: \"100000000000000000\"\n      denom: wei\n    from_address: st1dz20dmhjkuc2tur3amgl8t45w807a640leh8p0\n    to_address: st123wun5lnwerdrt0mk2uxtusgawpfr228a0sseg\n  non_critical_extension_options: []\n  timeout_height: \"0\"\nsignatures: []\n\nconfirm transaction before signing and broadcasting [y/N]: y\n\ncode: 0\ncodespace: \"\"\ndata: \"\"\nevents: []\ngas_used: \"0\"\ngas_wanted: \"0\"\nheight: \"0\"\ninfo: \"\"\nlogs: []\nraw_log: '[]'\ntimestamp: \"\"\ntx: null\ntxhash: B8E22210FD5A654E900FA83340D955E07D1DD5FFF27FRAF0FB5FB0F7CC1D4A50\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/setup-and-run-a-stratos-chain-full-node/#validator","title":"Validator","text":"<p>At this point, you have a Full-Chain Node. </p> <p>Full-Chain nodes are also important to the network as they are able to handle queries from a client and provide scale for the validator. They are also able to mantain historical information about the state of the chain.</p> <p>But they are not able to accept transactions from clients, validate them and insert them into the blockchain, like Validators do. So they won't be earning any rewards.</p> <p>To convert your Full-Node to a Validator, please follow the next guide.</p> <p>How To Become a Validator</p> <p></p> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/","title":"Stratos Chain stchaind commands part 1","text":"<p>This document is the first part that describes a summarized list of <code>stchaind</code> commands for Stratos Chain.</p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#requirements","title":"Requirements","text":"<p>Unlike other projects, Stratos does not require expensive GPUs and high wattage power supplies, but if the node wants to obtain revenue, it needs to provide enough bandwidth and storage capacity to ensure the traffic on the node can reach the reward requirements. </p> <p>We recommend the following to run your node:</p> <p>Minimum Hardware Requirements</p> CPU RAM Storage Stake 8 Cores\u00b9, 2.5GHz\u00b2 32 GB 2 TB 1 STOS\u00b3 <p> \u00b9 \u00a0\u00a0 Can be achieved using dual CPU server configurations (eg. 2cpu x 8cores, as long as the frequency per core is respected). \u00b2 \u00a0\u00a0 2.5GHz refers to Base Frequency, not Turbo/Boost Frequency.  \u00b3 \u00a0\u00a0 Minimum stake is 1 stos until all 100 validator spots are filled. After that, is marked decided.</p> <p>Software (tested version)</p> <ul> <li>Ubuntu 18.04+</li> <li>Go 1.19+ linux/amd64</li> </ul> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#connect-to-stratos-chain-testnet","title":"Connect to Stratos Chain Testnet","text":"<p>Please refer to full-node setup guide to:</p> <p> download related files</p> <p> start your node to catch up to the latest block height(synchronization)</p> <p> create your Stratos Chain Wallet</p> <p> <code>Faucet</code> or <code>send</code> an amount of tokens to this wallet</p> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#directory-structure","title":"Directory Structure","text":"<p>After the node has caught up to the latest block, your Stratos-chain Wallet has been created and fed with an amount of tokens, <code>$HOME/.stchaind</code> directory will include the following directories and files.</p> <pre><code>.\n\u251c\u2500\u2500 config\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 addrbook.json\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 app.toml\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 client.toml\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 config.toml\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 genesis.json\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 node_key.json\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 priv_validator_key.json\n\u251c\u2500\u2500 data\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 application.db\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 blockstore.db\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 cs.wal\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 evidence.db\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 priv_validator_state.json\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 snapshots\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 state.db\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 tx_index.db\n\u2514\u2500\u2500 keyring-test\n    \u251c\u2500\u2500 6894f6eef2b730a5f071eed1f3aeb471dfeeeaaf.address\n    \u251c\u2500\u2500 d6052b289b78468612a8f97cf59eac184ba852dd.address\n    \u251c\u2500\u2500 d704353fe67f948c99d2e3105adc5159c9e8f2af.address\n    \u251c\u2500\u2500 f07ab66406c02aa1a398f4fa41a91192fae08997.address\n    \u251c\u2500\u2500 fdb03146cb5a83e08785e8d1f083132d4386b4bd.address\n    \u251c\u2500\u2500 user0.info\n    \u251c\u2500\u2500 user10.info\n    \u251c\u2500\u2500 user1.info\n    \u251c\u2500\u2500 user2.info\n    \u2514\u2500\u2500 user3.info\n</code></pre> <p></p> <p>In <code>stchaind/config</code> folder:</p> <ul> <li><code>addrbook.json</code> stores peer addresses.</li> <li><code>app.toml</code> contains the default settings required for app.</li> <li><code>config.toml</code> contains various options pertaining to the stratos-chain configurations.</li> <li><code>genesis.json</code> defines the initial state upon genesis of stratos-chain.</li> <li><code>node_key.json</code> contains the node private key and should thus be kept secret.</li> <li><code>priv_validator_key.json</code> contains the validator address, public key and private key, and should thus be kept secret.</li> </ul> <p></p> <p>In <code>stchaind/data</code> folder:</p> <ul> <li>All <code>*.db</code> folders are <code>Tendermint</code> databases</li> <li><code>Tendermint</code> uses a <code>write ahead log</code> (WAL) for consensus</li> <li><code>priv_validator_state.json</code>holds the validator's state</li> </ul> <p></p> <p>In  <code>stchaind/keyring-test</code> folder: </p> <ul> <li>holds the user's information and address in the keyring-backend </li> </ul> <p>Tip</p> <p>By default, the binary executable <code>stchaind</code> has been saved or created in the <code>$HOME</code> folder. If you are not sure what is your <code>$HOME</code> folder, in terminal, use <code>echo $HOME</code> to check. In the following instruction, we suppose you have entered the <code>$HOME</code> folder(use <code>cd $HOME</code>)</p> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#stchaind-commands","title":"'stchaind' Commands","text":"<p>For ease of use, these commands have been classified by the following modules:</p> <ul> <li><code>Bank</code></li> <li><code>Distribution</code></li> <li><code>Gov</code></li> <li><code>Slashing</code></li> <li><code>Staking</code></li> <li><code>Register</code></li> <li><code>Sds</code></li> <li><code>Pot</code></li> <li><code>Tendermint</code></li> <li><code>Others</code></li> </ul> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#global-flags","title":"Global Flags","text":"<p>Each command has its specific flags as well as several global flags. The specific flags will be explained along with each command, while the global flags are summarized as the following that can be used for all <code>stchaind</code> commands.</p> <pre><code>Global Flags(can be used for all stchaind commands):\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --chain-id string          Specify Chain ID for sending Tx (default \"testnet\")\n      --fees string              Fees to pay along with transaction; eg: 10wei\n      --from string              Name or address of private key with which to sign\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices to determine the transaction fee (e.g. 10wei)\n  -h, --help                     help for stchaind\n      --home string              directory for config and data (default \"/home/hong/.stchaind\")\n      --keyring-backend string   Select keyring's backend (default \"os\")\n      --log_format string        The logging format (json|plain) (default \"plain\")\n      --log_level string         The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --node string              &lt;host&gt;:&lt;port&gt; to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --trace                    print out full stack trace on errors\n</code></pre> <p>Tip</p> <ul> <li> <p><code>--chain-id</code>: the current <code>chain-id</code> may change when updating in testing phase . When it is applied, user needs to point out current <code>chain-id</code> which is <code>mesos-1</code> for Testnet and <code>stratos-1</code> for Mainnet.</p> </li> <li> <p>on Testnet, <code>--keyring-backend=file</code></p> </li> <li> <p>on Mainnet, <code>--keyring-backend=os|file|pass</code>. You must use the same one you used when creating the wallet in previous guide (Setup Full-Chain Node). </p> </li> <li> <p><code>--home</code>: this directory contains node's account information. By default, node's account info is saved or created under <code>$HOME/.stchaind</code>. In this case, user does not need to add <code>--home</code> flag in the commands. Otherwise, user has to use this flag to specify the path to the node's root directory(default '$HOME') explicitly if not using the default directory. In the following instruction, we suppose the node info has been installed or created under <code>$HOME/.stchaind</code> and skip the <code>--home</code> flag. User can add it where applicable.</p> </li> </ul> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#denomination","title":"Denomination","text":"<p>When executing commands that require a certain amount of tokens, you can use either denomination:</p> <ul> <li>1 stos =</li> <li>1,000,000,000 gwei =</li> <li>1,000,000,000,000,000,000 wei</li> </ul> <p>For example, the following commands will result in transfering the same value (100 stos):</p> <pre><code>stchaind tx staking delegate stvaloper1fmdh9vf262qxe5ehmp9jvgkqzaeye4qmxjrr3k 100stos \\\n--from=st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda \\\n--chain-id=stratos-1 \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-prices=1000000000wei \\\n--gas-adjustment=1.5\n\nstchaind tx staking delegate stvaloper1fmdh9vf262qxe5ehmp9jvgkqzaeye4qmxjrr3k 100000000000gwei \\\n--from=st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda \\\n--chain-id=stratos-1 \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-prices=1000000000wei \\\n--gas-adjustment=1.5\n\nstchaind tx staking delegate stvaloper1fmdh9vf262qxe5ehmp9jvgkqzaeye4qmxjrr3k 100000000000000000000wei \\\n--from=st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda \\\n--chain-id=stratos-1 \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-prices=1000000000wei \\\n--gas-adjustment=1.5\n</code></pre>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#bank-module","title":"Bank Module","text":""},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-send","title":"-<code>send</code>","text":"<p>Create and sign a <code>send</code> transaction.</p> <pre><code>Usage:\n  stchaind tx bank send [from_key_or_address] [to_address] [amount] [flags]\n\nFlags:\n  -a, --account-number uint   The account number of the signing account (offline mode only)\n      --dry-run               ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n      --fee-account string    Fee account pays fees for the transaction instead of deducting from the signer\n      --gas string            gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --generate-only         Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                  help for send\n      --keyring-dir string    The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                Use a connected Ledger device\n      --note string           Note to add a description to the transaction (previously --memo)\n      --offline               Offline mode (does not allow any online functionality\n  -o, --output string         Output format (text|json) (default \"json\")\n  -s, --sequence uint         The sequence number of the signing account (offline mode only)\n      --sign-mode string      Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint   Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes \n  In testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>stchaind tx bank send st1sqzsk8mplxx22fdgg878ccc3329gfd9g7d9g9d st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx 1stos \\\n--chain-id=stratos-1  \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-prices=1000000000wei \\\n--gas-adjustment=1.5\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-balances","title":"-<code>balances</code>","text":"<p>query account bank balances.</p> <pre><code>Usage:\n  stchaind query bank balances [account address] [flags]\n\nFlags:\n      --count-total       count total number of records in all balances to query for\n      --denom string      The specific balance denomination to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for balances\n      --limit uint        pagination limit of all balances to query for (default 100)\n      --offset uint       pagination offset of all balances to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of all balances to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of all balances to query for\n      --reverse           results are sorted in descending order\n</code></pre> <p>Example:</p> <pre><code>stchaind query bank balances st16czjk2ym0prgvy4gl970t84vrp96s5kayfqmf2\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#distribution-module","title":"Distribution Module","text":""},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-withdraw-rewards","title":"-<code>withdraw-rewards</code>","text":"<p>Withdraw rewards from a given delegation address and optionally withdraw validator's commission if the delegation address given is a validator operator.</p> <pre><code>Usage:\n  stchaind tx distribution withdraw-rewards [validator-addr] [flags]\n\nFlags:\n  -a, --account-number uint   The account number of the signing account (offline mode only)\n      --commission            Withdraw the validator's commission in addition to the rewards\n      --dry-run               ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n      --fee-account string    Fee account pays fees for the transaction instead of deducting from the signer\n      --gas string            gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --generate-only         Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                  help for withdraw-rewards\n      --keyring-dir string    The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                Use a connected Ledger device\n      --note string           Note to add a description to the transaction (previously --memo)\n      --offline               Offline mode (does not allow any online functionality\n  -o, --output string         Output format (text|json) (default \"json\")\n  -s, --sequence uint         The sequence number of the signing account (offline mode only)\n      --sign-mode string      Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint   Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                   Skip tx broadcasting prompt confirmation\n\n  In testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>stchaind tx distribution withdraw-rewards stvaloper1fmdh9vf262qxe5ehmp9jvgkqzaeye4qmxjrr3k \\\n--from=st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda \\\n--chain-id=stratos-1  \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-prices=1000000000wei \\\n--gas-adjustment=1.5\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-withdraw-all-rewards","title":"-<code>withdraw-all-rewards</code>","text":"<p>Withdraw all delegation rewards for a delegator.</p> <pre><code>Usage:\n  stchaind tx distribution withdraw-all-rewards [flags]\n\nFlags:\n  -a, --account-number uint   The account number of the signing account (offline mode only)\n      --dry-run               ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n      --fee-account string    Fee account pays fees for the transaction instead of deducting from the signer\n      --gas string            gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --generate-only         Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                  help for withdraw-all-rewards\n      --keyring-dir string    The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                Use a connected Ledger device\n      --max-msgs int          Limit the number of messages per tx (0 for unlimited)\n      --note string           Note to add a description to the transaction (previously --memo)\n      --offline               Offline mode (does not allow any online functionality\n  -o, --output string         Output format (text|json) (default \"json\")\n  -s, --sequence uint         The sequence number of the signing account (offline mode only)\n      --sign-mode string      Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint   Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                   Skip tx broadcasting prompt confirmation\n\n  In testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>stchaind tx distribution withdraw-all-rewards \\\n--from=st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda \\\n--chain-id=stratos-1  \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-prices=1000000000wei \\\n--gas-adjustment=1.5\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-commission","title":"-<code>commission</code>","text":"<p>Query validator commission rewards from delegators to that validator.</p> <pre><code>Usage:\n  stchaind query distribution commission [validator] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for commission\n  -o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query distribution commission stvaloper1gtw399h9vfnekqsz3dg4n6mj0qgdpnh30x66xa\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-rewards","title":"-<code>rewards</code>","text":"<p>Query all rewards earned by a delegator, optionally restrict to reward from a single validator.</p> <pre><code>Usage:\n  stchaind query distribution rewards [delegator-addr] [validator-addr] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for rewards\n  -o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query distribution rewards st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda --height=9765\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-outstanding-rewards","title":"-<code>outstanding-rewards</code>","text":"<p>Query distribution outstanding (un-withdrawn) rewards for a validator and all their delegations.</p> <pre><code>Usage:\n  stchaind query distribution validator-outstanding-rewards [validator] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for validator-outstanding-rewards\n  -o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query distribution validator-outstanding-rewards stvaloper1fmdh9vf262qxe5ehmp9jvgkqzaeye4qmxjrr3k\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-community-pool","title":"-<code>community-pool</code>","text":"<p>Query all coins in the community pool which is under Governance control.</p> <pre><code>Usage:\n  stchaind query distribution community-pool [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for community-pool\n  -o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query distribution community-pool --height=9765\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-slashes","title":"-<code>slashes</code>","text":"<p>Query all slashes of a validator for a given block range.</p> <pre><code>Usage:\n  stchaind query distribution slashes [validator] [start-height] [end-height] [flags]\n\nFlags:\n      --count-total       count total number of records in validator slashes to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for slashes\n      --limit uint        pagination limit of validator slashes to query for (default 100)\n      --offset uint       pagination offset of validator slashes to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of validator slashes to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of validator slashes to query for\n      --reverse           results are sorted in descending order\n</code></pre> <p>Example:</p> <pre><code>stchaind query distribution slashes stvaloper1095s2f3m60qz48spy3wr52gw8xmy7xqywnxnrq 0 500\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-distribution-params","title":"-<code>distribution-params</code>","text":"<p>Query distribution params.</p> <pre><code>Usage:\n  stchaind query distribution params [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for params\n  -o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query distribution params\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#gov-module","title":"Gov Module","text":""},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-submit-proposal","title":"-<code>submit-proposal</code>","text":"<p>Submit a proposal along with an initial deposit. Proposal title, description, type and deposit can be given directly or through a proposal JSON file.</p> <p>Except for itself, the command <code>submit-proposal</code> also provides three sub-commands, <code>param-change</code>, <code>community-pool-spend</code> and <code>software-upgrade</code>, to submit a proposal for changing global parameters, distributing funds in <code>community-pool</code> and upgrading software.</p> <pre><code>Usage:\n  stchaind tx gov submit-proposal [flags]\n  stchaind tx gov submit-proposal [command]\n\nAvailable Commands:\n  cancel-software-upgrade Cancel the current software upgrade proposal\n  community-pool-spend    Submit a community pool spend proposal\n  param-change            Submit a parameter change proposal\n  software-upgrade        Submit a software upgrade proposal\n\nFlags:\n  -a, --account-number uint   The account number of the signing account (offline mode only)\n      --deposit string        The proposal deposit\n      --description string    The proposal description\n      --dry-run               ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n      --fee-account string    Fee account pays fees for the transaction instead of deducting from the signer\n      --gas string            gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --generate-only         Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                  help for submit-proposal\n      --keyring-dir string    The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                Use a connected Ledger device\n      --note string           Note to add a description to the transaction (previously --memo)\n      --offline               Offline mode (does not allow any online functionality\n  -o, --output string         Output format (text|json) (default \"json\")\n      --proposal string       Proposal file path (if this path is given, other proposal flags are ignored)\n  -s, --sequence uint         The sequence number of the signing account (offline mode only)\n      --sign-mode string      Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint   Set a block timeout height to prevent the tx from being committed past a certain height\n      --title string          The proposal title\n      --type string           The proposal Type\n  -y, --yes                   Skip tx broadcasting prompt confirmation\n\n\n  In testing phase, --keyring-backend=\"test\"\n</code></pre> <p></p> <ul> <li><code>submit-proposal</code> example:</li> </ul> <pre><code>Usage:\nstchaind tx gov submit-proposal &lt;proposal.json&gt; --from=&lt;Name|address of private key&gt;\n</code></pre> <p>Where <code>proposal.json</code> contains:</p> <pre><code>    {\n      \"title\": \"Test Proposal\",\n      \"description\": \"My awesome proposal\",\n      \"type\": \"Text\",\n      \"deposit\": \"100000000000gwei\"\n    }\n</code></pre> <p>Which is equivalent to:</p> <pre><code>stchaind tx gov submit-proposal \\\n--title=\"Test Proposal\" \\\n--description=\"My awesome proposal\" \\\n--type=\"Text\" \\\n--deposit=\"100000000000gwei\" \\\n--from=&lt;name|address of private key&gt;\n</code></pre> <p><code>submit-proposal</code> Tx command:</p> <pre><code>stchaind tx gov submit-proposal \\\n--title=\"Test Proposal\" \\\n--description=\"My awesome proposal\" \\\n--type=\"Text\" \\\n--deposit=\"100000000000gwei\" \\\n--from=st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda \\\n--chain-id=stratos-1  \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-prices=1000000000wei \\\n--gas-adjustment=1.5\n</code></pre> <p></p> <ul> <li><code>param-change</code> example:</li> </ul> <p>Submit a parameter proposal along with an initial deposit. The proposal details must be supplied via a JSON file. For values that contains objects, only non-empty fields will be updated.</p> <pre><code>Usage:\nstchaind tx gov submit-proposal param-change [proposal-file] [flags]\n</code></pre> <p><code>param-change</code> example tx command:</p> <pre><code>stchaind tx gov submit-proposal param-change &lt;proposal-file&gt; \\\n--from=&lt;name|address of private key&gt; \\\n--chain-id=&lt;current chain-id&gt; \\\n--keyring-backend=&lt;keyring's backend'&gt; \\\n--gas=auto --gas-prices=1000000000wei\n</code></pre> <p>A sample of <code>param_change.json</code> could be:</p> <pre><code>{\n    \"title\": \"Param-Change\",\n    \"description\": \"This is a test to update deposit params in gov Module\",\n    \"changes\": [\n        {\n            \"subspace\": \"gov\",\n            \"key\": \"depositparams\",\n            \"value\": {\"max_deposit_period\":\"72800000000000\"}\n        }\n    ],\n    \"deposit\": \"1000000000000gwei\"\n}\n</code></pre> <p><code>param-change</code> tx command:</p> <pre><code>stchaind tx gov submit-proposal param-change ./helpers/param_change.json \\\n--from=st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda \\\n--chain-id=stratos-1 \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-prices=1000000000wei \\\n--gas-adjustment=1.5\n</code></pre> <p></p> <ul> <li><code>community-pool-spend</code> example:</li> </ul> <p>Submit a community pool spend proposal along with an initial deposit. The proposal details must be supplied via a JSON file.</p> <pre><code>Usage:\nstchaind tx gov submit-proposal community-pool-spend [proposal-file] [flags]\n</code></pre> <p>The <code>proposal.json</code> could be: <pre><code>    {\n      \"title\": \"Community Pool Spend\",\n      \"description\": \"Pay me some STOSes!\",\n      \"recipient\": \"st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda\",\n      \"amount\": [\n        {\n          \"denom\": \"wei\",\n          \"amount\": \"1000000000000\"\n        }\n      ],\n      \"deposit\": [\n        {\n          \"denom\": \"gwei\",\n          \"amount\": \"1000000000000\"\n        }\n      ]\n    }\n</code></pre></p> <p><code>community-pool-spend</code> tx command:</p> <pre><code>stchaind tx gov submit-proposal community-pool-spend ./helpers/proposal.json \\\n--from=st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda \\\n--chain-id=stratos-1 \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-prices=1000000000wei \\\n--gas-adjustment=1.5\n</code></pre> <p></p> <ul> <li>software-upgrade example:</li> </ul> <p>Submit a software upgrade along with an initial deposit.</p> <pre><code>Usage:\n  stchaind tx gov submit-proposal software-upgrade [name] (--upgrade-height [height]) (--upgrade-info [info]) [flags]\n</code></pre> <p><code>software-upgrade</code> tx command:</p> <pre><code>stchaind tx gov submit-proposal software-upgrade=\"v0.3.1\" \\\n--upgrade-height=1000 \\\n--from=st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda \\\n--description=test1 \\\n--title=test1 \\\n--deposit=100000000000gwei \\\n--info=testinfo \\\n--chain-id=stratos-1 \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-prices=1000000000wei \\\n--gas-adjustment=1.5\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-deposit","title":"-<code>deposit</code>","text":"<p>Deposit tokens for an active proposal by <code>proposal-id</code> which can be found with the command <code>stchaind query gov proposals</code>.</p> <pre><code>Usage:\n  stchaind tx gov deposit [proposal-id] [deposit] [flags]\n\nFlags:\n  -a, --account-number uint   The account number of the signing account (offline mode only)\n      --dry-run               ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n      --fee-account string    Fee account pays fees for the transaction instead of deducting from the signer\n      --gas string            gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --generate-only         Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                  help for deposit\n      --keyring-dir string    The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                Use a connected Ledger device\n      --note string           Note to add a description to the transaction (previously --memo)\n      --offline               Offline mode (does not allow any online functionality\n  -o, --output string         Output format (text|json) (default \"json\")\n  -s, --sequence uint         The sequence number of the signing account (offline mode only)\n      --sign-mode string      Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint   Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                   Skip tx broadcasting prompt confirmation\n\n  In testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>stchaind tx gov deposit 7 100000000gwei \\\n--from=st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda \\\n--chain-id=stratos-1 \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-prices=1000000000wei \\\n--gas-adjustment=1.5\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-vote-transaction","title":"-<code>vote</code> (transaction)","text":"<p>Submit a vote for an active proposal. Vote options include <code>yes</code>/<code>no</code>/<code>no_with_veto</code>/<code>abstain</code>.</p> <pre><code>Usage:\n  stchaind tx gov vote [proposal-id] [option] [flags]\n\nFlags:\n  -a, --account-number uint   The account number of the signing account (offline mode only)\n      --dry-run               ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n      --fee-account string    Fee account pays fees for the transaction instead of deducting from the signer\n      --gas string            gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --generate-only         Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                  help for vote\n      --keyring-dir string    The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                Use a connected Ledger device\n      --note string           Note to add a description to the transaction (previously --memo)\n      --offline               Offline mode (does not allow any online functionality\n  -o, --output string         Output format (text|json) (default \"json\")\n  -s, --sequence uint         The sequence number of the signing account (offline mode only)\n      --sign-mode string      Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint   Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                   Skip tx broadcasting prompt confirmation\n\n    In testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>stchaind tx gov vote 7 yes \\\n--from=st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda \\\n--chain-id=stratos-1 \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-prices=1000000000wei \\\n--gas-adjustment=1.5\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-proposal","title":"-<code>proposal</code>","text":"<p>Query details for a proposal. You can find the <code>proposal-id</code> by running <code>stchaind query gov proposals</code></p> <pre><code>Usage:\n  stchaind query gov proposal [proposal-id] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for proposal\n  -o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query gov proposal 7\n</code></pre> <p>Result:</p> <pre><code>content:\n  title: Param-Change Staking MaxValidators to 100\n  description: This is a test to update MaxValidators to 100 in staking Module\n  changes:\n  - subspace: staking\n    key: MaxValidators\n    value: \"100\"\nid: 7\nproposal_status: 3\nfinal_tally_result:\n  \"yes\": \"400000000\"\n  abstain: \"0\"\n  \"no\": \"0\"\n  no_with_veto: \"0\"\nsubmit_time: 2021-07-23T14:40:04.976927421Z\ndeposit_end_time: 2021-07-23T14:41:44.976927421Z\ntotal_deposit:\n- denom: wei\n  amount: \"100010000000000000000\"\nvoting_start_time: 2021-07-23T14:40:41.961523583Z\nvoting_end_time: 2021-07-23T14:42:21.961523583Z\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-proposals","title":"-<code>proposals</code>","text":"<p>Query details of all proposals with optional filters(flags).</p> <pre><code>Usage:\n  stchaind query gov proposals [flags]\n\nFlags:\n      --count-total        count total number of records in proposals to query for\n      --depositor string   (optional) filter by proposals deposited on by depositor\n      --height int         Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help               help for proposals\n      --limit uint         pagination limit of proposals to query for (default 100)\n      --offset uint        pagination offset of proposals to query for\n  -o, --output string      Output format (text|json) (default \"text\")\n      --page uint          pagination page of proposals to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string    pagination page-key of proposals to query for\n      --reverse            results are sorted in descending order\n      --status string      (optional) filter proposals by proposal status, status: deposit_period/voting_period/passed/rejected\n      --voter string       (optional) filter by proposals voted on by voted\n\n    stchaind query gov proposals --depositor st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda\n    stchaind query gov proposals --voter st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda\n    stchaind query gov proposals --status (DepositPeriod|VotingPeriod|Passed|Rejected)\n    stchaind query gov proposals --page=2 --limit=100\n</code></pre> <p>Example:</p> <pre><code>stchaind query gov proposals\n</code></pre> <p>Result:</p> <pre><code>- content:\n    title: Param-Change Staking MaxValidators to 5\n    description: This is a test to update MaxValidators to 5 in staking Module\n    changes:\n    - subspace: staking\n      key: MaxValidators\n      value: \"5\"\n  id: 1\n  proposal_status: 3\n  final_tally_result:\n    \"yes\": \"383333332\"\n    abstain: \"0\"\n    \"no\": \"0\"\n    no_with_veto: \"0\"\n  submit_time: 2021-07-19T15:38:08.619640056Z\n  deposit_end_time: 2021-07-19T15:39:48.619640056Z\n  total_deposit:\n  - denom: wei\n    amount: \"100010000000000000000\"\n  voting_start_time: 2021-07-19T15:38:23.789218262Z\n  voting_end_time: 2021-07-19T15:40:03.789218262Z\n\n...\n\n- content:\n    title: Param-Change Staking MaxValidators to 100\n    description: This is a test to update MaxValidators to 100 in staking Module\n    changes:\n    - subspace: staking\n      key: MaxValidators\n      value: \"100\"\n  id: 7\n  proposal_status: 3\n  final_tally_result:\n    \"yes\": \"400000000\"\n    abstain: \"0\"\n    \"no\": \"0\"\n    no_with_veto: \"0\"\n  submit_time: 2021-07-23T14:40:04.976927421Z\n  deposit_end_time: 2021-07-23T14:41:44.976927421Z\n  total_deposit:\n  - denom: wei\n    amount: \"100010000000000000000\"\n  voting_start_time: 2021-07-23T14:40:41.961523583Z\n  voting_end_time: 2021-07-23T14:42:21.961523583Z\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-vote-query","title":"-<code>vote</code> (query)","text":"<p>Query details for a single vote on a proposal given its identifier.</p> <pre><code>Usage:\n  stchaind query gov vote [proposal-id] [voter-addr] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for vote\n  -o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query gov vote 7 st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda\n</code></pre> <p>Result:</p> <pre><code>proposal_id: 7\nvoter: st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda\noption: 1\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-votes","title":"-<code>votes</code>","text":"<p>Query vote details for a single proposal by its identifier.</p> <pre><code>Usage:\n  stchaind query gov votes [proposal-id] [flags]\n\nFlags:\n      --count-total       count total number of records in votes to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for votes\n      --limit uint        pagination limit of votes to query for (default 100)\n      --offset uint       pagination offset of votes to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of votes to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of votes to query for\n      --reverse           results are sorted in descending order\n</code></pre> <p>Example:</p> <pre><code>stchaind query gov votes 7\n</code></pre> <p>Result:</p> <pre><code>- proposal_id: 7\n  voter: st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda\n  option: 1\n- proposal_id: 7\n  voter: st1m4f4hnyfhpaeqlcgv7lfhgzjwmrvfeggwnpygz\n  option: 1\n- proposal_id: 7\n  voter: st1kuhyf59qvukk8r5manky062d6c66utvytm7az6\n  option: 1\n- proposal_id: 7\n  voter: st1gtw399h9vfnekqsz3dg4n6mj0qgdpnh3c2n66k\n  option: 1\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-deposit_1","title":"-<code>deposit</code>","text":"<p>Query details for a single proposal deposit on a proposal by its identifier.</p> <pre><code>Usage:\n  stchaind query gov deposit [proposal-id] [depositer-addr] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for deposit\n  -o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query gov deposit 7 st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda\n</code></pre> <p>Result:</p> <pre><code>proposal_id: 7\ndepositor: st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda\namount:\n- denom: wei\n  amount: \"100000000\"\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-deposits","title":"-<code>deposits</code>","text":"<p>Query details for all deposits on a proposal.</p> <pre><code>Usage:\n  stchaind query gov deposits [proposal-id] [flags]\n\nFlags:\n      --count-total       count total number of records in deposits to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for deposits\n      --limit uint        pagination limit of deposits to query for (default 100)\n      --offset uint       pagination offset of deposits to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of deposits to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of deposits to query for\n      --reverse           results are sorted in descending order\n</code></pre> <p>Example:</p> <pre><code>stchaind query gov deposits 7\n</code></pre> <p>Result:</p> <pre><code>- proposal_id: 7\n  depositor: st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda\n  amount:\n  - denom: wei\n    amount: \"100000000\"\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#slashing-module","title":"Slashing Module","text":""},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-unjail","title":"-<code>unjail</code>","text":"<p>Unjail a jailed validator.</p> <pre><code>Usage:\n  stchaind tx slashing unjail [flags]\n\nFlags:\n  -a, --account-number uint   The account number of the signing account (offline mode only)\n      --dry-run               ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n      --fee-account string    Fee account pays fees for the transaction instead of deducting from the signer\n      --gas string            gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --generate-only         Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                  help for unjail\n      --keyring-dir string    The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                Use a connected Ledger device\n      --note string           Note to add a description to the transaction (previously --memo)\n      --offline               Offline mode (does not allow any online functionality\n  -o, --output string         Output format (text|json) (default \"json\")\n  -s, --sequence uint         The sequence number of the signing account (offline mode only)\n      --sign-mode string      Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint   Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                   Skip tx broadcasting prompt confirmation\n\n  In testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>stchaind tx slashing unjail \\\n--from=st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda \\\n--chain-id=stratos-1 \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-prices=1000000000wei \\\n--gas-adjustment=1.5\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-signing-info","title":"-<code>signing-info</code>","text":"<p>Use a validators' consensus public key to find the signing-info for that validator.</p> <pre><code>Usage:\n  stchaind query slashing signing-info [validator-conspub] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for signing-info\n  -o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query slashing signing-info stvalconspub1zcjduepqsnwlx7rv0ghyvh9tm99zle39df99jt8hccwt8jdrvjs26zqrzh9shdmgyc\n</code></pre> <p>Result:</p> <pre><code>address: stvalcons1sa58sznp26ftquypx994q2eurq6qy38tfm3rn3\nstart_height: 0\nindex_offset: 3874\njailed_until: 1970-01-01T00:00:00Z\ntombstoned: false\nmissed_blocks_counter: 0\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-slashing-params","title":"-<code>slashing-params</code>","text":"<p>Query genesis parameters for the slashing module.</p> <pre><code>Usage:\n  stchaind query slashing params [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for params\n  -o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query slashing params\n</code></pre> <p>Result:</p> <pre><code>signed_blocks_window: 10000\nmin_signed_per_window: \"0.500000000000000000\"\ndowntime_jail_duration: 10m0s\nslash_fraction_double_sign: \"0.050000000000000000\"\nslash_fraction_downtime: \"0.010000000000000000\"\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#staking-module","title":"Staking Module","text":""},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-delegate","title":"-<code>delegate</code>","text":"<p>Delegate an amount of liquid coins to a validator from your wallet.</p> <pre><code>Usage:\n  stchaind tx staking delegate [validator-addr] [amount] [flags]\n\nFlags:\n  -a, --account-number uint   The account number of the signing account (offline mode only)\n      --dry-run               ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n      --fee-account string    Fee account pays fees for the transaction instead of deducting from the signer\n      --gas string            gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --generate-only         Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                  help for delegate\n      --keyring-dir string    The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                Use a connected Ledger device\n      --note string           Note to add a description to the transaction (previously --memo)\n      --offline               Offline mode (does not allow any online functionality\n  -o, --output string         Output format (text|json) (default \"json\")\n  -s, --sequence uint         The sequence number of the signing account (offline mode only)\n      --sign-mode string      Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint   Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                   Skip tx broadcasting prompt confirmation\n\n  In testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>stchaind tx staking delegate stvaloper1fmdh9vf262qxe5ehmp9jvgkqzaeye4qmxjrr3k 1000gwei \\\n--from=st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda \\\n--chain-id=stratos-1 \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-prices=1000000000wei \\\n--gas-adjustment=1.5\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-redelegate","title":"-<code>redelegate</code>","text":"<p>Redelegate an amount of illiquid staking tokens from one validator to another.</p> <pre><code>Usage:\n  stchaind tx staking redelegate [src-validator-addr] [dst-validator-addr] [amount] [flags]\n\nFlags:\n  -a, --account-number uint   The account number of the signing account (offline mode only)\n      --dry-run               ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n      --fee-account string    Fee account pays fees for the transaction instead of deducting from the signer\n      --gas string            gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --generate-only         Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                  help for redelegate\n      --keyring-dir string    The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                Use a connected Ledger device\n      --note string           Note to add a description to the transaction (previously --memo)\n      --offline               Offline mode (does not allow any online functionality\n  -o, --output string         Output format (text|json) (default \"json\")\n  -s, --sequence uint         The sequence number of the signing account (offline mode only)\n      --sign-mode string      Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint   Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                   Skip tx broadcasting prompt confirmation\n\n  In testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>stchaind tx staking redelegate stvaloper1fmdh9vf262qxe5ehmp9jvgkqzaeye4qmxjrr3k stvaloper1gtw399h9vfnekqsz3dg4n6mj0qgdpnh30x66xa 1000gwei \\\n--from=st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda \\\n--chain-id=stratos-1 \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-prices=1000000000wei \\\n--gas-adjustment=1.5\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-unbond","title":"-<code>unbond</code>","text":"<p>Unbond an amount of bonded shares from a validator.</p> <pre><code>Usage:\n  stchaind tx staking unbond [validator-addr] [amount] [flags]\n\nFlags:\n  -a, --account-number uint   The account number of the signing account (offline mode only)\n      --dry-run               ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n      --fee-account string    Fee account pays fees for the transaction instead of deducting from the signer\n      --gas string            gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --generate-only         Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                  help for unbond\n      --keyring-dir string    The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                Use a connected Ledger device\n      --note string           Note to add a description to the transaction (previously --memo)\n      --offline               Offline mode (does not allow any online functionality\n  -o, --output string         Output format (text|json) (default \"json\")\n  -s, --sequence uint         The sequence number of the signing account (offline mode only)\n      --sign-mode string      Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint   Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                   Skip tx broadcasting prompt confirmation\n\n  In testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>stchaind tx staking unbond stvaloper12adksjsd7gcsn23h5jmvdygzx2lfw5q4pyf57u 10000gwei \\\n--from=st12adksjsd7gcsn23h5jmvdygzx2lfw5q4kgq5zh \\\n--chain-id=stratos-1 \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-prices=1000000000wei \\\n--gas-adjustment=1.5\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-create-validator","title":"-<code>create-validator</code>","text":"<p>Create new validator initialized with a self-delegation to it.</p> <pre><code>Usage:\n  stchaind tx staking create-validator [flags]\n\nFlags:\n  -a, --account-number uint                 The account number of the signing account (offline mode only)\n      --amount string                       Amount of coins to bond\n      --commission-max-change-rate string   The maximum commission change rate percentage (per day)\n      --commission-max-rate string          The maximum commission rate percentage\n      --commission-rate string              The initial commission rate percentage\n      --details string                      The validator's (optional) details\n      --dry-run                             ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n      --fee-account string                  Fee account pays fees for the transaction instead of deducting from the signer\n      --gas string                          gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --generate-only                       Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                                help for create-validator\n      --identity string                     The optional identity signature (ex. UPort or Keybase)\n      --ip string                           The node's public IP. It takes effect only when used in combination with --generate-only\n      --keyring-dir string                  The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                              Use a connected Ledger device\n      --min-self-delegation string          The minimum self delegation required on the validator\n      --moniker string                      The validator's name\n      --node-id string                      The node's ID\n      --note string                         Note to add a description to the transaction (previously --memo)\n      --offline                             Offline mode (does not allow any online functionality\n  -o, --output string                       Output format (text|json) (default \"json\")\n      --pubkey string                       The validator's Protobuf JSON encoded public key\n      --security-contact string             The validator's (optional) security contact email\n  -s, --sequence uint                       The sequence number of the signing account (offline mode only)\n      --sign-mode string                    Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint                 Set a block timeout height to prevent the tx from being committed past a certain height\n      --website string                      The validator's (optional) website\n  -y, --yes                                 Skip tx broadcasting prompt confirmation\n\n  In testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Tip</p> <ul> <li><code>moniker</code>: the validator's name</li> <li><code>pubkey</code>: the private key associated with this Tendermint PubKey is used to sign prevotes and precommits</li> <li><code>website</code>: website(Optional)</li> <li><code>description</code>: description(Optional)</li> <li><code>commission-rate</code>: the commission rate on block rewards and fees charged to delegators</li> <li><code>commission-max-rate</code>: the maximum commission rate which this validator can charge. This parameter cannot be changed after create-validator is processed.</li> <li><code>commission-max-change-rate</code>: the maximum daily increase of the validator commission. This parameter cannot be changed after create-validator is processed.</li> <li><code>min-self-delegation</code>: minimum amount of tokens the validator needs to have bonded at all time. If the validator's self-delegated stake falls below this limit, their entire staking pool will unbond.</li> <li><code>amount</code>: the amount of tokens to be bonded to the validator at creation. This value should be greater than the value of <code>min-self-delegation</code></li> </ul> <p>Example:</p> <pre><code>stchaind tx staking create-validator \\\n--amount=100stos \\\n--pubkey='{\"@type\":\"/cosmos.crypto.ed25519.PubKey\",\"key\":\"JwtmYzaX0b+zjuDypUI2+qy8wa/LFtUUUg0+vr11tpg=\"}' \\\n--moniker=\"myValidator\" \\\n--commission-rate=0.10 \\\n--commission-max-rate=0.20 \\\n--commission-max-change-rate=0.01 \\\n--min-self-delegation=1 \\\n--from=st12adksjsd7gcsn23h5jmvdygzx2lfw5q4kgq5zh \\\n--chain-id=stratos-1 \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-prices=1000000000wei \\\n--gas-adjustment=1.5 \n</code></pre> <p>The value of <code>--pubkey</code> can be retrieved by using the command <code>stchaind tendermint show-validator</code></p> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-edit-validator","title":"-<code>edit-validator</code>","text":"<p>Edit an existing validator account.</p> <pre><code>Usage:\n  stchaind tx staking edit-validator [flags]\n\nFlags:\n  -a, --account-number uint          The account number of the signing account (offline mode only)\n      --commission-rate string       The new commission rate percentage\n      --details string               The validator's (optional) details (default \"[do-not-modify]\")\n      --dry-run                      ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n      --fee-account string           Fee account pays fees for the transaction instead of deducting from the signer\n      --gas string                   gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --generate-only                Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                         help for edit-validator\n      --identity string              The (optional) identity signature (ex. UPort or Keybase) (default \"[do-not-modify]\")\n      --keyring-dir string           The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                       Use a connected Ledger device\n      --min-self-delegation string   The minimum self delegation required on the validator\n      --moniker string               The validator's name (default \"[do-not-modify]\")\n      --note string                  Note to add a description to the transaction (previously --memo)\n      --offline                      Offline mode (does not allow any online functionality\n  -o, --output string                Output format (text|json) (default \"json\")\n      --security-contact string      The validator's (optional) security contact email (default \"[do-not-modify]\")\n  -s, --sequence uint                The sequence number of the signing account (offline mode only)\n      --sign-mode string             Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint          Set a block timeout height to prevent the tx from being committed past a certain height\n      --website string               The validator's (optional) website (default \"[do-not-modify]\")\n  -y, --yes                          Skip tx broadcasting prompt confirmation\n\n  In testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Tip</p> <ul> <li><code>min_self_delegation</code> allows to increase only</li> <li><code>commission-max-rate</code> cannot be changed after create-validator</li> <li><code>commission-max-change-rate</code>cannot be changed after create-validator</li> </ul> <p>Example:</p> <pre><code>stchaind tx staking edit-validator \\\n--from=st12adksjsd7gcsn23h5jmvdygzx2lfw5q4kgq5zh \\\n--keyring-backend=file \\\n--min-self-delegation=100  \\\n--memo=\"Change 'min-self-delegation' from 1 to 100\" \\\n--chain-id=stratos-1  \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-prices=1000000000wei \\\n--gas-adjustment=1.5\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-delegation","title":"-<code>delegation</code>","text":"<p>Query a delegation based on delegator address and validator address.</p> <pre><code>Usage:\n  stchaind query staking delegation [delegator-addr] [validator-addr] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for delegation\n  -o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query staking delegation st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda stvaloper1fmdh9vf262qxe5ehmp9jvgkqzaeye4qmxjrr3k\n</code></pre> <p>Result:</p> <pre><code>delegation:\n  delegator_address: st1fmdh9vf262qxe5ehmp9jvgkqzaeye4qm372rda\n  validator_address: stvaloper1fmdh9vf262qxe5ehmp9jvgkqzaeye4qmxjrr3k\n  shares: \"100000000000000000000.000000000000000000\"\nbalance:\n  denom: wei\n  amount: \"1000000000000000000000\"\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-delegations","title":"-<code>delegations</code>","text":"<p>Query delegations for an individual delegator on all validators.</p> <pre><code>Usage:\n  stchaind query staking delegations [delegator-addr] [flags]\n\nFlags:\n      --count-total       count total number of records in delegations to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for delegations\n      --limit uint        pagination limit of delegations to query for (default 100)\n      --offset uint       pagination offset of delegations to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of delegations to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of delegations to query for\n      --reverse           results are sorted in descending order\n</code></pre> <p>Example:</p> <pre><code>stchaind query staking delegations st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\n</code></pre> <p>Result:</p> <pre><code>delegation_responses:\n- balance:\n    amount: \"500000000000\"\n    denom: wei\n  delegation:\n    delegator_address: st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\n    shares: \"500000000000.000000000000000000\"\n    validator_address: stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\npagination:\n  next_key: null\n  total: \"0\"\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-delegations-to","title":"-<code>delegations-to</code>","text":"<p>Query all delegations made to one validator.</p> <pre><code>Usage:\n  stchaind query staking delegations-to [validator-addr] [flags]\n\nFlags:\n      --count-total       count total number of records in validator delegations to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for delegations-to\n      --limit uint        pagination limit of validator delegations to query for (default 100)\n      --offset uint       pagination offset of validator delegations to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of validator delegations to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of validator delegations to query for\n      --reverse           results are sorted in descending ord\n</code></pre> <p>Example:</p> <pre><code>stchaind query staking delegations-to stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\n</code></pre> <p>Result:</p> <pre><code>delegation_responses:\n- balance:\n    amount: \"500000000000\"\n    denom: wei\n  delegation:\n    delegator_address: st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\n    shares: \"500000000000.000000000000000000\"\n    validator_address: stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\npagination:\n  next_key: null\n  total: \"0\"\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-unbonding-delegations","title":"-<code>unbonding-delegations</code>","text":"<p>Query unbonding delegations for an individual delegator.</p> <pre><code>Usage:\n  stchaind query staking unbonding-delegations [delegator-addr] [flags]\n\nFlags:\n      --count-total       count total number of records in unbonding delegations to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for unbonding-delegations\n      --limit uint        pagination limit of unbonding delegations to query for (default 100)\n      --offset uint       pagination offset of unbonding delegations to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of unbonding delegations to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of unbonding delegations to query for\n      --reverse           results are sorted in descending order\n</code></pre> <p>Example:</p> <pre><code>stchaind q staking unbonding-delegations st1xnhfx7c0nev9me835409efjj7whd672xs6d2m2\n</code></pre> <p>Result:</p> <pre><code>- delegator_address: st1xnhfx7c0nev9me835409efjj7whd672xs6d2m2\n  validator_address: stvaloper1xnhfx7c0nev9me835409efjj7whd672x8ky28p\n  entries:\n  - creation_height: 5805\n    completion_time: 2021-08-30T19:53:31.144199109Z\n    initial_balance: \"10000\"\n    balance: \"10000\"\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-unbonding-delegation","title":"-<code>unbonding-delegation</code>","text":"<p>Query unbonding delegations for an individual delegator on an individual validator.</p> <pre><code>Usage:\n  stchaind query staking unbonding-delegation [delegator-addr] [validator-addr] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for unbonding-delegation\n  -o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example</p> <pre><code>stchaind q staking unbonding-delegation st1xnhfx7c0nev9me835409efjj7whd672xs6d2m2 stvaloper1xnhfx7c0nev9me835409efjj7whd672x8ky28p\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-unbonding-delegations-from","title":"-<code>unbonding-delegations-from</code>","text":"<p>Query all unbonding delegatations from a validator.</p> <pre><code>Usage:\n  stchaind query staking unbonding-delegations-from [validator-addr] [flags]\n\nFlags:\n      --count-total       count total number of records in unbonding delegations to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for unbonding-delegations-from\n      --limit uint        pagination limit of unbonding delegations to query for (default 100)\n      --offset uint       pagination offset of unbonding delegations to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of unbonding delegations to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of unbonding delegations to query for\n      --reverse           results are sorted in descending order\n</code></pre> <p>Example:</p> <pre><code>stchaind query staking unbonding-delegations-from stvaloper1xnhfx7c0nev9me835409efjj7whd672x8ky28p\n</code></pre> <p>Result:</p> <pre><code>- delegator_address: st1xnhfx7c0nev9me835409efjj7whd672xs6d2m2\n  validator_address: stvaloper1xnhfx7c0nev9me835409efjj7whd672x8ky28p\n  entries:\n  - creation_height: 5805\n    completion_time: 2021-08-30T19:53:31.144199109Z\n    initial_balance: \"10000\"\n    balance: \"10000\"\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-redelegation","title":"-<code>redelegation</code>","text":"<p>Query a redelegation record based on delegator and a source and destination validator address.</p> <pre><code>Usage:\n  stchaind query staking redelegation [delegator-addr] [src-validator-addr] [dst-validator-addr] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for redelegation\n  -o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query staking redelegation st15xlpwafgnvvs5hdk8938dp2ve6cjmy4vcf4l76 stvaloper1gamc7ajhzukp08nle9z9asyfx4u4dlz53dquzj stvaloper1zgqhnz69jppcwg9z27vtq3zq9r3du5v6vjqvpq\n</code></pre> <p>Result:</p> <pre><code>- redelegation:\n    delegator_address: st15xlpwafgnvvs5hdk8938dp2ve6cjmy4vcf4l76\n    validator_src_address: stvaloper1gamc7ajhzukp08nle9z9asyfx4u4dlz53dquzj\n    validator_dst_address: stvaloper1zgqhnz69jppcwg9z27vtq3zq9r3du5v6vjqvpq\n    entries: []\n  entries:\n  - redelegationentry:\n      creation_height: 1909\n      completion_time: 2021-09-02T19:33:26.890343914Z\n      initial_balance: \"10000\"\n      shares_dst: \"10000.000000000000000000\"\n    balance: \"10000\"\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-redelegations","title":"-<code>redelegations</code>","text":"<p>Query all redelegations records for one delegator.</p> <pre><code>Usage:\n  stchaind query staking redelegations [delegator-addr] [flags]\n\nFlags:\n      --count-total       count total number of records in delegator redelegations to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for redelegations\n      --limit uint        pagination limit of delegator redelegations to query for (default 100)\n      --offset uint       pagination offset of delegator redelegations to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of delegator redelegations to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of delegator redelegations to query for\n      --reverse           results are sorted in descending order\n</code></pre> <p>Example:</p> <pre><code>stchaind query staking redelegations st15xlpwafgnvvs5hdk8938dp2ve6cjmy4vcf4l76\n</code></pre> <p>Result:</p> <pre><code>- redelegation:\n    delegator_address: st15xlpwafgnvvs5hdk8938dp2ve6cjmy4vcf4l76\n    validator_src_address: stvaloper1gamc7ajhzukp08nle9z9asyfx4u4dlz53dquzj\n    validator_dst_address: stvaloper1zgqhnz69jppcwg9z27vtq3zq9r3du5v6vjqvpq\n    entries: []\n  entries:\n  - redelegationentry:\n      creation_height: 1909\n      completion_time: 2021-09-02T19:33:26.890343914Z\n      initial_balance: \"10000\"\n      shares_dst: \"10000.000000000000000000\"\n    balance: \"10000\"\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-redelegations-from","title":"-<code>redelegations-from</code>","text":"<p>Query all unbonding delegatations from a validator.</p> <pre><code>Usage:\n  stchaind query staking unbonding-delegations-from [validator-addr] [flags]\n\nFlags:\n      --count-total       count total number of records in unbonding delegations to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for unbonding-delegations-from\n      --limit uint        pagination limit of unbonding delegations to query for (default 100)\n      --offset uint       pagination offset of unbonding delegations to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of unbonding delegations to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of unbonding delegations to query for\n      --reverse           results are sorted in descending order\n</code></pre> <p>Example:</p> <pre><code>stchaind query staking unbonding-delegations-from stvaloper1xnhfx7c0nev9me835409efjj7whd672x8ky28p\n</code></pre> <p>Result:</p> <pre><code>- delegator_address: st1xnhfx7c0nev9me835409efjj7whd672xs6d2m2\n  validator_address: stvaloper1xnhfx7c0nev9me835409efjj7whd672x8ky28p\n  entries:\n  - creation_height: 5805\n    completion_time: 2021-08-30T19:53:31.144199109Z\n    initial_balance: \"10000\"\n    balance: \"10000\"\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-historical-info","title":"-<code>historical-info</code>","text":"<p>Query historical info at given height.</p> <pre><code>Usage:\n  stchaind query staking historical-info [height] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for historical-info\n  -o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <pre><code>Note:\nThe response of `historical-info` is depended on the `skating` parameter `HistoricalEntries`. \nIf `HistoricalEntries` is \"0\", the response will always be\n\nERROR: no historical info found\n</code></pre> <p>Example:</p> <pre><code>stchaind query staking historical-info 300\n</code></pre> <p>Result:</p> <pre><code>header:\n  app_hash: fun5OdjHvsMZU1g+mcpgnfDuVBDSTTQjrTjJ3jvEkpo=\n  chain_id: test-chain\n  consensus_hash: BICRvH3cKD93v7+R1zxE2ljD34qcvIZ0Bdi389qtoi8=\n  data_hash: 47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\n  evidence_hash: 47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\n  height: \"300\"\n  last_block_id:\n    hash: heoL6s+ZfzE4xdhvUuKe5OKppwYIklXVvV+hDQe17G0=\n    part_set_header:\n      hash: wHoreN7ckwhF3a4dTDRKi47wvrIq0gme2AgNXBf/E3U=\n      total: 1\n  last_commit_hash: sk5idFtJj7qZFHyVbQ/PsB/TQfovdKn2SEekPWF7ZJc=\n  last_results_hash: 47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\n  next_validators_hash: UjS9kaOnUeBVw1h2V43kpGYxGoDVQLWYha9o721NVt4=\n  proposer_address: GKcWnBtCfZlBM/ez1FBOknids3w=\n  time: \"2023-01-11T00:51:55.887814534Z\"\n  validators_hash: UjS9kaOnUeBVw1h2V43kpGYxGoDVQLWYha9o721NVt4=\n  version:\n    app: \"0\"\n    block: \"11\"\nvalset:\n- commission:\n    commission_rates:\n      max_change_rate: \"0.010000000000000000\"\n      max_rate: \"0.200000000000000000\"\n      rate: \"0.100000000000000000\"\n    update_time: \"2023-01-09T17:08:58.489050300Z\"\n  consensus_pubkey:\n    '@type': /cosmos.crypto.ed25519.PubKey\n    key: 69gothWTE9FJBZ5gBjjSNhg8y/5SsI1hBaD81Dum7lo=\n  delegator_shares: \"500000000000.000000000000000000\"\n  description:\n    details: \"\"\n    identity: \"\"\n    moniker: node\n    security_contact: \"\"\n    website: \"\"\n  jailed: false\n  min_self_delegation: \"1\"\n  operator_address: stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\n  status: BOND_STATUS_BONDED\n  tokens: \"500000000000\"\n  unbonding_height: \"0\"\n  unbonding_time: \"1970-01-01T00:00:00Z\"\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-pool","title":"-<code>pool</code>","text":"<p>Query values for amounts stored in the staking pool.</p> <pre><code>Usage:\n  stchaind query staking pool [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for pool\n  -o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query staking pool\n</code></pre> <p>Result:</p> <pre><code>bonded_tokens: \"500000000000\"\nnot_bonded_tokens: \"0\"\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-staking-params","title":"-<code>staking-params</code>","text":"<p>Query values set as staking parameters.</p> <pre><code>Usage:\n  stchaind query staking params [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for params\n  -o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query staking params\n</code></pre> <p>Result:</p> <pre><code>bond_denom: wei\nhistorical_entries: 10000\nmax_entries: 7\nmax_validators: 100\nunbonding_time: 1814400s\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-validator","title":"-<code>validator</code>","text":"<p>Query details about an individual validator</p> <pre><code>Usage:\n  stchaind query staking validator [validator-addr] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for validator\n  -o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query staking validator stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\n</code></pre> <p>Result:</p> <pre><code>- |\ncommission:\n  commission_rates:\n    max_change_rate: \"0.010000000000000000\"\n    max_rate: \"0.200000000000000000\"\n    rate: \"0.100000000000000000\"\n  update_time: \"2023-01-09T17:08:58.489050300Z\"\nconsensus_pubkey:\n  '@type': /cosmos.crypto.ed25519.PubKey\n  key: 69gothWTE9FJBZ5gBjjSNhg8y/5SsI1hBaD81Dum7lo=\ndelegator_shares: \"500000000000.000000000000000000\"\ndescription:\n  details: \"\"\n  identity: \"\"\n  moniker: node\n  security_contact: \"\"\n  website: \"\"\njailed: false\nmin_self_delegation: \"1\"\noperator_address: stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\nstatus: BOND_STATUS_BONDED\ntokens: \"500000000000\"\nunbonding_height: \"0\"\nunbonding_time: \"1970-01-01T00:00:00Z\"\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-1/#-validators","title":"-<code>validators</code>","text":"<p>Query values for amounts stored in the staking pool.</p> <pre><code>Usage:\n  stchaind query staking validators [flags]\n\nFlags:\n      --count-total       count total number of records in validators to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for validators\n      --limit uint        pagination limit of validators to query for (default 100)\n      --offset uint       pagination offset of validators to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of validators to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of validators to query for\n      --reverse           results are sorted in descending order\n</code></pre> <p>Example:</p> <pre><code>stchaind query staking validators\n</code></pre> <p>Result:</p> <pre><code>- |\npagination:\n  next_key: null\n  total: \"0\"\nvalidators:\n- commission:\n    commission_rates:\n      max_change_rate: \"0.010000000000000000\"\n      max_rate: \"0.200000000000000000\"\n      rate: \"0.100000000000000000\"\n    update_time: \"2023-01-09T17:08:58.489050300Z\"\n  consensus_pubkey:\n    '@type': /cosmos.crypto.ed25519.PubKey\n    key: 69gothWTE9FJBZ5gBjjSNhg8y/5SsI1hBaD81Dum7lo=\n  delegator_shares: \"500000000000.000000000000000000\"\n  description:\n    details: \"\"\n    identity: \"\"\n    moniker: node\n    security_contact: \"\"\n    website: \"\"\n  jailed: false\n  min_self_delegation: \"1\"\n  operator_address: stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\n  status: BOND_STATUS_BONDED\n  tokens: \"500000000000\"\n  unbonding_height: \"0\"\n  unbonding_time: \"1970-01-01T00:00:00Z\"\n</code></pre> <p></p> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/","title":"Stratos Chain stchaind commands part 2","text":"<p>This document is the second part of <code>stchaind</code> commands for Stratos Chain.</p> <ul> <li><code>Bank</code></li> <li><code>Distribution</code></li> <li><code>Gov</code></li> <li><code>Slashing</code></li> <li><code>Staking</code></li> <li><code>Register</code></li> <li><code>Sds</code></li> <li><code>Pot</code></li> <li><code>Tendermint</code></li> <li><code>Others</code></li> </ul> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#register-module","title":"Register Module","text":""},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-create-resource-node","title":"-<code>create-resource-node</code>","text":"<p>Create a new resource node</p> <pre><code>Usage:\n  stchaind tx register create-resource-node [flags]\n\nFlags:\n  -a, --account-number uint       The account number of the signing account (offline mode only)\n      --amount string             Amount of coins to bond\n      --details string            The node's (optional) details\n      --dry-run                   ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n      --fee-account string        Fee account pays fees for the transaction instead of deducting from the signer\n      --gas string                gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --generate-only             Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                      help for create-resource-node\n      --identity string           The (optional) identity signature (ex. UPort or Keybase)\n      --keyring-dir string        The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                    Use a connected Ledger device\n      --moniker string            The node's name\n      --network-address string    The address of the PP node\n      --node-type uint32          The value of node_type is determined by the three node types (storage=4/database=2/computation=1) and their arbitrary combinations.\n      --note string               Note to add a description to the transaction (previously --memo)\n      --offline                   Offline mode (does not allow any online functionality\n  -o, --output string             Output format (text|json) (default \"json\")\n      --pubkey string             The resource node's Protobuf JSON encoded public key\n      --security-contact string   The node's (optional) security contact email\n  -s, --sequence uint             The sequence number of the signing account (offline mode only)\n      --sign-mode string          Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint       Set a block timeout height to prevent the tx from being committed past a certain height\n      --website string            The node's (optional) website\n  -y, --yes                       Skip tx broadcasting prompt confirmation\n\n\n  In testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>Usage:\nstchaind tx register create-resource-node \\\n--network-address=&lt;network-address&gt; \\\n--amount=&lt;amount&gt; \\\n--pubkey=&lt;pubkey of resource node&gt; \\\n--from=&lt;Name|address of private key&gt; \\\n--chain-id=&lt;current chain-id&gt; \\\n--keyring-backend=&lt;keyring's backend&gt; \\\n--moniker=&lt;name of resource node&gt; \\\n--node-type=&lt;resource node type, int 1~7&gt;\n</code></pre> <p>Transaction example:</p> <pre><code> stchaind tx register create-resource-node \\\n --network-address=stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv \\\n --amount=10stos \\\n --pubkey=stsdspub1zcjduepqmrsput8d8c4tqeztrwzjjntg0jdgvmuyd5pur2g0chpxv5cccdsq4drddm \\\n --from=st12adksjsd7gcsn23h5jmvdygzx2lfw5q4kgq5zh \\\n --moniker=resource-node0 \\\n --node-type=1 \\\n --chain-id=stratos-1 \\\n --keyring-backend=file \\\n --gas=auto \\\n --gas-prices=1000000000wei \\\n --gas-adjustment=1.5\n</code></pre> <p>There are three ways to check if the new resource node is in the resource-node list:</p> <ul> <li>Client Command</li> <li>REST API</li> <li>GRPC Command</li> </ul> <p>Client Command:</p> <pre><code>stchaind query register get-resource-node --network-address=stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\n</code></pre> <p>Response: <pre><code>creation_time: \"2023-01-10T16:48:24.591781632Z\"\ndescription:\n  details: \"\"\n  identity: \"\"\n  moniker: resource-node0\n  security_contact: \"\"\n  website: \"\"\nnetwork_address: stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\nnode_type: 1\nowner_address: st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\npubkey:\n  '@type': /cosmos.crypto.ed25519.PubKey\n  key: 2OAeLO0+KrBkSxuFKU1ofJqGb4RtA8GpD8XCZlMYw2A=\nstatus: BOND_STATUS_BONDED\nsuspend: true\ntokens: \"10000000000000000000\"\n</code></pre></p> <p>REST API:</p> <pre><code>http://127.0.0.1:1317/register/deposit/address/stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\n</code></pre> <p>Response:</p> <pre><code>{\n  \"height\": \"7\",\n  \"result\": {\n    \"network_address\": \"stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\",\n    \"pubkey\": {\n      \"type\": \"tendermint/PubKeyEd25519\",\n      \"value\": \"2OAeLO0+KrBkSxuFKU1ofJqGb4RtA8GpD8XCZlMYw2A=\"\n    },\n    \"suspend\": true,\n    \"status\": 3,\n    \"tokens\": \"10000000000000000000\",\n    \"owner_address\": \"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\",\n    \"description\": {\n      \"moniker\": \"resource-node0\",\n      \"identity\": \"\",\n      \"website\": \"\",\n      \"security_contact\": \"\",\n      \"details\": \"\"\n    },\n    \"creation_time\": \"2023-01-10T16:48:24.591781632Z\",\n    \"node_type\": 1,\n    \"bonded_deposit\": {\n      \"denom\": \"wei\",\n      \"amount\": \"10000000000000000000\"\n    },\n    \"un_bonding_deposit\": {\n      \"denom\": \"wei\",\n      \"amount\": \"0\"\n    },\n    \"un_bonded_deposit\": {\n      \"denom\": \"wei\",\n      \"amount\": \"0\"\n    }\n  }\n}\n</code></pre> <p>GRPC Command:</p> <pre><code>grpcurl -plaintext -d '{\"network_addr\":\"stsds1m9fhlyy2eug7kcgrqfdxxxvnscp5qdvut6g4xz\",\"query_type\":\"0\" }' 127.0.0.1:9090 stratos.register.v1.Query.DepositByNode\n</code></pre> <p>Note:</p> <pre><code>query_type     = 0   query the deposit info of both resource nodes or meta and nodes with this account address\nquery_type     = 1   query the deposit info of only meta node with this account address\nquery_type     = 2   query the deposit info of only resource node with this account address\n</code></pre> <p>Response:</p> <pre><code>{\n  \"deposit_info\": {\n    \"network_address\": \"stsds1m9fhlyy2eug7kcgrqfdxxxvnscp5qdvut6g4xz\",\n    \"pubkey\": {\n      \"type_url\": \"/cosmos.crypto.ed25519.PubKey\",\n      \"value\": \"CiD37kGSAjc+jRvAqaphnkKNarZo6KePzYmp1ViQxMHVvg==\"\n    },\n    \"suspend\": true,\n    \"status\": \"BOND_STATUS_BONDED\",\n    \"tokens\": \"2003000000000000000000\",\n    \"owner_address\": \"st18986jyng5vsprmtzkdxla80jrw7qyc6wl73h0u\",\n    \"description\": {\n      \"moniker\": \"stsds1m9fhlyy2eug7kcgrqfdxxxvnscp5qdvut6g4xz\",\n      \"identity\": \"\",\n      \"website\": \"\",\n      \"security_contact\": \"\",\n      \"details\": \"\"\n    },\n    \"creation_time\": {\n      \"seconds\": \"1685729968\",\n      \"nanos\": 908306425\n    },\n    \"node_type\": 4,\n    \"bonded_deposit\": {\n      \"denom\": \"wei\",\n      \"amount\": \"2003000000000000000000\"\n    },\n    \"un_bonding_deposit\": {\n      \"denom\": \"wei\",\n      \"amount\": \"0\"\n    },\n    \"un_bonded_deposit\": {\n      \"denom\": \"wei\",\n      \"amount\": \"0\"\n    }\n  }\n}\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-update-resource-node","title":"-<code>update-resource-node</code>","text":"<p>Update a resource node info</p> <pre><code>Usage:\n  stchaind tx register update-resource-node [flags]\n\nFlags:\n  -a, --account-number uint       The account number of the signing account (offline mode only)\n      --details string            The node's (optional) details\n      --dry-run                   ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n      --fee-account string        Fee account pays fees for the transaction instead of deducting from the signer\n      --gas string                gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --generate-only             Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                      help for update-resource-node\n      --identity string           The (optional) identity signature (ex. UPort or Keybase)\n      --keyring-dir string        The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                    Use a connected Ledger device\n      --moniker string            The node's name\n      --network-address string    The address of the PP node\n      --node-type uint32          The value of node_type is determined by the three node types (storage=4/database=2/computation=1) and their arbitrary combinations.\n      --note string               Note to add a description to the transaction (previously --memo)\n      --offline                   Offline mode (does not allow any online functionality\n  -o, --output string             Output format (text|json) (default \"json\")\n      --security-contact string   The node's (optional) security contact email\n  -s, --sequence uint             The sequence number of the signing account (offline mode only)\n      --sign-mode string          Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint       Set a block timeout height to prevent the tx from being committed past a certain height\n      --website string            The node's (optional) website\n  -y, --yes                       Skip tx broadcasting prompt confirmation\n\n  In testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>Usage:\nstchaind tx register update-resource-node \\\n--network-address=&lt;resourceNode_address&gt; \\\n--from=&lt;Name|address of private key&gt; \\\n--chain-id=&lt;current chain-id&gt; \\\n--keyring-backend=&lt;keyring's backend&gt; \\\n--moniker=&lt;name of resource node&gt; \\\n--node-type=&lt;resource node type, int 1~7&gt;\n</code></pre> <p>Transaction example:</p> <pre><code>stchaind tx register update-resource-node \\\n--network-address=stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv \\\n--from=st12adksjsd7gcsn23h5jmvdygzx2lfw5q4kgq5zh \\\n--moniker=resource-nodeupdate \\\n--node-type=7 \\\n--chain-id=stratos-1 \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-prices=1000000000wei \\\n--gas-adjustment=1.5\n</code></pre> <p>Check if the new resource node info has been updated.</p> <pre><code>stchaind query register get-resource-node --network-address=stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\n</code></pre> <p>Response:</p> <pre><code>creation_time: \"2023-01-10T18:16:14.738068297Z\"\ndescription:\n  details: \"\"\n  identity: \"\"\n  moniker: resource-nodeupdate\n  security_contact: \"\"\n  website: \"\"\nnetwork_address: stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\nnode_type: 7\nowner_address: st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\npubkey:\n  '@type': /cosmos.crypto.ed25519.PubKey\n  key: 2OAeLO0+KrBkSxuFKU1ofJqGb4RtA8GpD8XCZlMYw2A=\nstatus: BOND_STATUS_BONDED\nsuspend: true\ntokens: \"10000000000000000000\"\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-update-resource-node-deposit","title":"-<code>update-resource-node-deposit</code>","text":"<p>update resource node's deposit</p> <pre><code>Usage:\n  stchaind tx register update-resource-node-deposit [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for update-resource-node-deposit\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --network-address string   The address of the PP node\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --deposit-delta string     Deposit change of coins to be made (always positive like 100000gwei)\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\n  In testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>Usage:\nstchaind tx register update-resource-node-deposit \\\n--network-address=&lt;resource_node_address&gt; \\\n--from=&lt;Name|address of private key&gt; \\\n--chain-id=&lt;current chain-id&gt; \\\n--keyring-backend=&lt;keyring's backend&gt; \\\n--deposit-delta=&lt;delta_amount&gt; \\\n--gas=auto\n</code></pre> <p>Transaction example:</p> <pre><code>stchaind tx register update-resource-node \\\n--network-address=stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv \\\n--from=st12adksjsd7gcsn23h5jmvdygzx2lfw5q4kgq5zh \\\n--moniker=resource-nodeupdate \\\n--node-type=7 --chain-id=stratos-1 \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-prices=1000000000wei \\\n--gas-adjustment=1.5\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-remove-resource-node","title":"-<code>remove-resource-node</code>","text":"<p>remove a resource node</p> <pre><code>Usage:\n  stchaind tx register remove-resource-node [flag] [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for remove-resource-node\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --network-address string   The address of the PP node\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\n  In testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>Usage:\nstchaind tx register remove-resource-node \\\n--network-address=&lt;resource_node_address&gt; \\\n--from=&lt;Name|address of private key&gt; \\\n--chain-id=&lt;current chain-id&gt; \\\n--keyring-backend=&lt;keyring's backend&gt;\n</code></pre> <p>Transaction example:</p> <pre><code>stchaind tx register remove-resource-node \\\n--network-address=stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv \\\n--from=st12adksjsd7gcsn23h5jmvdygzx2lfw5q4kgq5zh \\\n--chain-id=stratos-1 \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-prices=1000000000wei \\\n--gas-adjustment=1.5\n</code></pre> <p>Check the status update of the resource node</p> <pre><code>http://127.0.0.1:1317/register/deposit/address/stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\n</code></pre> <p>Response:</p> <pre><code>    {\n    \"height\": \"173\",\n    \"result\": {\n        \"network_address\": \"stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\",\n        \"pubkey\": {\n            \"type\": \"tendermint/PubKeyEd25519\",\n            \"value\": \"2OAeLO0+KrBkSxuFKU1ofJqGb4RtA8GpD8XCZlMYw2A=\"\n        },\n        \"suspend\": true,\n        \"status\": 2,\n        \"tokens\": \"10000000000000000000\",\n        \"owner_address\": \"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\",\n        \"description\": {\n            \"moniker\": \"resource-nodeupdate\",\n            \"identity\": \"\",\n            \"website\": \"\",\n            \"security_contact\": \"\",\n            \"details\": \"\"\n        },\n        \"creation_time\": \"2023-01-10T18:16:14.738068297Z\",\n        \"node_type\": 7,\n        \"bonded_deposit\": {\n            \"denom\": \"wei\",\n            \"amount\": \"0\"\n        },\n        \"un_bonding_deposit\": {\n            \"denom\": \"wei\",\n            \"amount\": \"10000000000000000000\"\n        },\n        \"un_bonded_deposit\": {\n            \"denom\": \"wei\",\n            \"amount\": \"0\"\n        }\n    }\n}\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-create-meta-node","title":"-<code>create-meta-node</code>","text":"<p>Create a new meta node</p> <pre><code>Usage:\n  stchaind tx register create-meta-node [flags]\n\nFlags:\n  -a, --account-number uint       The account number of the signing account (offline mode only)\n      --amount string             Amount of coins to bond\n      --details string            The node's (optional) details\n      --dry-run                   ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n      --fee-account string        Fee account pays fees for the transaction instead of deducting from the signer\n      --gas string                gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --generate-only             Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                      help for create-meta-node\n      --identity string           The (optional) identity signature (ex. UPort or Keybase)\n      --keyring-dir string        The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                    Use a connected Ledger device\n      --moniker string            The node's name\n      --network-address string    The address of the PP node\n      --note string               Note to add a description to the transaction (previously --memo)\n      --offline                   Offline mode (does not allow any online functionality\n  -o, --output string             Output format (text|json) (default \"json\")\n      --pubkey string             The resource node's Protobuf JSON encoded public key\n      --security-contact string   The node's (optional) security contact email\n  -s, --sequence uint             The sequence number of the signing account (offline mode only)\n      --sign-mode string          Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint       Set a block timeout height to prevent the tx from being committed past a certain height\n      --website string            The node's (optional) website\n  -y, --yes                       Skip tx broadcasting prompt confirmation\n\n  In testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>Usage:\nstchaind tx register create-meta-node \\\n--network-address=&lt;network-address&gt; \\\n--amount=&lt;amount&gt; \\\n--pubkey=&lt;pubkey of meta node&gt; \\\n--from=&lt;Name|address of private key&gt; \\\n--chain-id=&lt;current chain-id&gt; \\\n--keyring-backend=&lt;keyring's backend&gt; \\\n--moniker=&lt;name of resource node&gt;\n</code></pre> <p>Transaction example:</p> <pre><code>stchaind tx register create-meta-node \\\n--network-address=stsds1faej5w4q6hgnt0ft598dlm408g4p747y4krwca \\\n--amount=10stos \\\n--pubkey=stsdspub1zcjduepqv7sj69c52rsdu5m8nk6tg4v5y8fh43w2hl9aa7mp3qgr9ym0feyshrc4wv \\\n--from=st12adksjsd7gcsn23h5jmvdygzx2lfw5q4kgq5zh \\\n--moniker=meta-node0 \\\n--chain-id=stratos-1 \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-prices=1000000000wei \\\n--gas-adjustment=1.5\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-meta-node-reg-vote","title":"-<code>meta-node-reg-vote</code>","text":"<p>vote for the registration of a new meta node</p> <pre><code>Usage:\n  stchaind tx register meta-node-reg-vote [flags]\n\nFlags:\n  -a, --account-number uint                The account number of the signing account (offline mode only)\n      --candidate-network-address string    (default \"The network address of the candidate PP node\")\n      --candidate-owner-address string      (default \"The owner address of the candidate PP node\")\n      --dry-run                            ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n      --fee-account string                 Fee account pays fees for the transaction instead of deducting from the signer\n      --gas string                         gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --generate-only                      Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                               help for meta-node-reg-vote\n      --keyring-dir string                 The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                             Use a connected Ledger device\n      --note string                        Note to add a description to the transaction (previously --memo)\n      --offline                            Offline mode (does not allow any online functionality\n      --opinion                            Opinion of the vote for the registration of Meta node.\n  -o, --output string                      Output format (text|json) (default \"json\")\n  -s, --sequence uint                      The sequence number of the signing account (offline mode only)\n      --sign-mode string                   Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint                Set a block timeout height to prevent the tx from being committed past a certain height\n      --voter-network-address string        (default \"The address of the PP node that made the vote.\")\n  -y, --yes                                Skip tx broadcasting prompt confirmation\n\n  In testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Warning</p> <p>A newly-created meta node needs 7 days by default to be voted by other active meta nodes</p> <p>Example:</p> <pre><code>Usage:\nstchaind tx register meta-node-reg-vote \\\n--candidate-network-address=&lt;candidate-network-address&gt; \\\n--candidate-owner-address=&lt;candidate-owner-address&gt; \\\n--opinion=&lt;true|false&gt; \\\n--voter-network-address=&lt;voter-network-address&gt; \\\n--from=&lt;Name|address of private key&gt; \\\n--chain-id=&lt;current chain-id&gt; \\\n--keyring-backend=&lt;keyring's backend&gt;\n</code></pre> <p>Transaction example:</p> <pre><code>stchaind tx register meta-node-reg-vote \\\n--candidate-network-address=stsds1faej5w4q6hgnt0ft598dlm408g4p747y4krwca \\\n--from=st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh \\\n--candidate-owner-address=st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh \\\n--opinion=true \\\n--voter-network-address=stsds13yakj2xgzzdfcw7kd5gtfcfv2k6sn5eg4vdfem \\\n--chain-id=stratos-1 \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-prices=1000000000wei \\\n--gas-adjustment=1.5\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-update-meta-node","title":"-<code>update-meta-node</code>","text":"<p>Update meta node info</p> <pre><code>Usage:\n  stchaind tx register update-meta-node [flags]\n\nFlags:\n  -a, --account-number uint       The account number of the signing account (offline mode only)\n      --details string            The node's (optional) details\n      --dry-run                   ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n      --fee-account string        Fee account pays fees for the transaction instead of deducting from the signer\n      --gas string                gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --generate-only             Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                      help for update-meta-node\n      --identity string           The (optional) identity signature (ex. UPort or Keybase)\n      --keyring-dir string        The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                    Use a connected Ledger device\n      --moniker string            The node's name\n      --network-address string    The address of the PP node\n      --note string               Note to add a description to the transaction (previously --memo)\n      --offline                   Offline mode (does not allow any online functionality\n  -o, --output string             Output format (text|json) (default \"json\")\n      --security-contact string   The node's (optional) security contact email\n  -s, --sequence uint             The sequence number of the signing account (offline mode only)\n      --sign-mode string          Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint       Set a block timeout height to prevent the tx from being committed past a certain height\n      --website string            The node's (optional) website\n  -y, --yes                       Skip tx broadcasting prompt confirmation\n\n  In testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>Usage:\nstchaind tx register update-meta-node \\\n--network-address&lt;network-address&gt; \\\n--from=&lt;Name|address of private key&gt; \\\n--chain-id=&lt;current chain-id&gt; \\\n--keyring-backend=&lt;keyring's backend&gt; \\\n--moniker=&lt;name of meta node&gt;\n</code></pre> <p>Transaction example:</p> <pre><code>stchaind tx register update-meta-node \\\n--network-address=stsds1faej5w4q6hgnt0ft598dlm408g4p747y4krwca \\\n--from=st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh \\\n--moniker=meta-node \\\n--chain-id=stratos-1 \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-prices=1000000000wei \\\n--gas-adjustment=1.5\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-remove-meta-node","title":"-<code>remove-meta-node</code>","text":"<p>Remove an meta node</p> <pre><code>Usage:\n  stchaind tx register remove-meta-node &lt;meta_node_address&gt; &lt;owner_address&gt; [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n      --fees string              Fees to pay along with transaction; eg: 10gwei\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate required gas automatically (default 200000) (default \"200000\")\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices to determine the transaction fee (e.g. 10gwei)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible and the node operates offline)\n  -h, --help                     help for remove-meta-node\n      --indent                   Add indent to JSON response\n      --keyring-backend string   Select keyring's backend (os|file|test) (default \"os\")\n      --ledger                   Use a connected Ledger device\n      --memo string              Memo to send along with transaction\n      --node string              &lt;host&gt;:&lt;port&gt; to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --trust-node               Trust connected full node (don't verify proofs for responses) (default true)\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\n  In testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>Usage:\nstchaind tx register remove-meta-node \\\n--network-address=&lt;meta_node_address&gt; \\\n--from=owner_address&gt; \\\n--chain-id=&lt;current chain-id&gt; \\\n--keyring-backend=&lt;keyring's backend&gt; \\\n--gas=auto\n</code></pre> <p>Transaction example:</p> <pre><code>stchaind tx register remove-meta-node \\\n--network-address=stsds1faej5w4q6hgnt0ft598dlm408g4p747y4krwca \\\n--from=st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh \\\n--chain-id=stratos-1 \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-prices=1000000000wei \\\n--gas-adjustment=1.5\n</code></pre> <p>Check if the meta node has been removed from the meta-node list using REST API</p> <pre><code>stchaind query register get-meta-node --network-address=stsds1faej5w4q6hgnt0ft598dlm408g4p747y4krwca\n</code></pre> <p>Response:</p> <pre><code>    node:\n        creation_time: \"2023-01-10T19:45:09.674241234Z\"\n        description:\n        details: \"\"\n        identity: \"\"\n        moniker: meta-node0\n        security_contact: \"\"\n        website: \"\"\n        network_address: stsds1faej5w4q6hgnt0ft598dlm408g4p747y4krwca\n        owner_address: st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\n        pubkey:\n        '@type': /cosmos.crypto.ed25519.PubKey\n        key: Z6EtFxRQ4N5TZ520tFWUIdN6xcq/y977YYgQMpNvTkk=\n        status: BOND_STATUS_UNBONDING\n        suspend: false\n        tokens: \"10000000000000000000\"\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-update-meta-node-deposit","title":"-<code>update-meta-node-deposit</code>","text":"<p>update meta node's deposit</p> <pre><code>Usage:\n  stchaind tx register update-meta-node-deposit [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n      --fee-account string       Fee account pays fees for the transaction instead of deducting from the signer\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                     help for update-meta-node-deposit\n      --incr-deposit string      Boolean indicator of increase/decrease of deposit delta, true for increase and false for decrease\n      --keyring-dir string       The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                   Use a connected Ledger device\n      --network-address string   The address of the PP node\n      --note string              Note to add a description to the transaction (previously --memo)\n      --offline                  Offline mode (does not allow any online functionality\n  -o, --output string            Output format (text|json) (default \"json\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --sign-mode string         Choose sign mode (direct|amino-json), this is an advanced feature\n      --deposit-delta string     Deposit change of coins to be made (always positive like 100000gwei)\n      --timeout-height uint      Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\n\n  In testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>Usage:\nstchaind tx register update-meta-node-deposit \\\n--network-address=&lt;meta_node_address&gt; \\\n--from=&lt;owner_address&gt; \\\n--chain-id=&lt;current chain-id&gt; \\\n--keyring-backend=&lt;keyring's backend&gt; \\\n--deposit-delta=&lt;delta_amount&gt; \\\n--incr-deposit=&lt;true|false&gt;\n</code></pre> <p>Transaction example:</p> <pre><code>stchaind tx register update-meta-node-deposit \\\n--network-address=stsds1faej5w4q6hgnt0ft598dlm408g4p747y4krwca \\\n--from=st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh \\\n--deposit-delta=100gwei \\\n--incr-deposit=true \\\n--chain-id=stratos-1 \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-prices=1000000000wei \\\n--gas-adjustment=1.5\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-kick-meta-node-vote","title":"-<code>kick-meta-node-vote</code>","text":"<p>kick specified meta node by other meta nodes</p> <pre><code>Usage:\n  stchaind tx register kick-meta-node-vote [flags]\n\nFlags:\n  -a, --account-number uint             The account number of the signing account (offline mode only)\n      --aux                             Generate aux signer data instead of sending a tx\n  -b, --broadcast-mode string           Transaction broadcasting mode (sync|async) (default \"sync\")\n      --chain-id string                 The network chain ID\n      --dry-run                         ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it (when enabled, the local Keybase is not accessible)\n      --fee-granter string              Fee granter grants fees for the transaction\n      --fee-payer string                Fee payer pays fees for the transaction instead of deducting from the signer\n      --fees string                     Fees to pay along with transaction; eg: 10uatom\n      --from string                     Name or address of private key with which to sign\n      --gas string                      gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically. Note: \"auto\" option doesn't always report accurate results. Set a valid coin value to adjust the result. Can be used instead of \"fees\". (default 200000)\n      --gas-adjustment float            adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string               Gas prices in decimal format to determine the transaction fee (e.g. 0.1uatom)\n      --generate-only                   Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase only accessed when providing a key name)\n  -h, --help                            help for kick-meta-node-vote\n      --keyring-backend string          Select keyring's backend (os|file|kwallet|pass|test|memory) (default \"os\")\n      --keyring-dir string              The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                          Use a connected Ledger device\n      --node string                     &lt;host&gt;:&lt;port&gt; to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --note string                     Note to add a description to the transaction (previously --memo)\n      --offline                         Offline mode (does not allow any online functionality)\n      --opinion                         Opinion of the vote for kicking meta node.\n  -o, --output string                   Output format (text|json) (default \"json\")\n  -s, --sequence uint                   The sequence number of the signing account (offline mode only)\n      --sign-mode string                Choose sign mode (direct|amino-json|direct-aux), this is an advanced feature\n      --target-network-address string   The network address of the meta node to be kicked\n      --timeout-height uint             Set a block timeout height to prevent the tx from being committed past a certain height\n      --tip string                      Tip is the amount that is going to be transferred to the fee payer on the target chain. This flag is only valid when used with --aux, and is ignored if the target chain didn't enable the TipDecorator\n      --voter-network-address string    The network address of the meta node that made the vote\n  -y, --yes                             Skip tx broadcasting prompt confirmation\n\n\n  In testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>Usage:\nstchaind tx register kick-meta-node-vote \\\n--voter-network-address=&lt;voter_meta_node_address&gt; \\\n--target-network-address=&lt;target_meta_node_address&gt; \\\n--opinion=&lt;true|false&gt; \\\n--from=&lt;owner_address&gt; \\\n--chain-id=&lt;current chain-id&gt; \\\n--keyring-backend=&lt;keyring's backend&gt;\n</code></pre> <p>Transaction example:</p> <pre><code>stchaind tx register kick-meta-node-vote \\\n--voter-network-address=stsds1cw8qhgsxddak8hh8gs7veqmy5ku8f8za6qlq64 \\\n--target-network-address=stsds13yakj2xgzzdfcw7kd5gtfcfv2k6sn5eg4vdfem \\\n--from=st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh \\\n--chain-id=stratos-1 \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-adjustment=1.5 \\\n--gas-prices=1000000000wei\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-get-resource-nodes","title":"-<code>get-resource-nodes</code>","text":"<p>Query details about an individual resource node by its network address</p> <pre><code>Usage:\n  stchaind query register get-resource-node [flags]\n\nFlags:\n      --height int               Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help                     help for get-resource-node\n      --network-address string   The address of the PP node\n  -o, --output string            Output format (text|json) (default \"text\"\n</code></pre> <p>Example:</p> <p>Query by network-address:</p> <pre><code>Usage:\nstchaind query register get-resource-node --network-address=&lt;resource_node_address&gt;\n</code></pre> <p>Transaction example:</p> <pre><code>stchaind query register get-resource-node --network-address=stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-get-meta-nodes","title":"<code>-get-meta-nodes</code>","text":"<p>Query all meta nodes by network id or moniker</p> <pre><code>Usage:\n  stchaind query register get-meta-node [flags]\n\nFlags:\n      --height int               Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help                     help for get-meta-node\n      --network-address string   The address of the PP node\n  -o, --output string            Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <p>Query by network address: <pre><code>Usage:\nstchaind query register get-meta-nodes --network-address=&lt;meta_node_address&gt;\n</code></pre></p> <p>Transaction example:</p> <pre><code>stchaind query register get-meta-node --network-address=stsds14c3em44vlh276cujnr2ez802uyjyeqrrsu9fuh\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-get-resource-count","title":"-<code>get-resource-count</code>","text":"<p>Query the total number of bonded resource nodes</p> <pre><code>Usage:\n  stchaind query register get-resource-count [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for get-resource-count\n  -o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query register get-resource-count\nnumber: \"2\"\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-get-meta-count","title":"-<code>get-meta-count</code>","text":"<p>Query the total number of bonded meta nodes</p> <pre><code>Usage:\n  stchaind query register get-meta-count [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for get-meta-count\n  -o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <p>Example: <pre><code>stchaind query register get-meta-count\nnumber: \"4\"\n</code></pre></p> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-register-params","title":"-<code>register-params</code>","text":"<p>Query values set as register parameters</p> <pre><code>Usage:\n  stchaind query register params [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for params\n  -o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query register params\nbond_denom: wei\nmax_entries: 16\nresource_node_reg_enabled: true\nunbonding_completion_time: 1209600s\nunbonding_threashold_time: 15552000s\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#sds-module","title":"SDS Module","text":""},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-upload-transaction","title":"-<code>upload</code> (transaction)","text":"<p>Create and sign a file upload tx</p> <pre><code>Usage:\n  stchaind tx sds upload [flags]\n\nFlags:\n  -a, --account-number uint   The account number of the signing account (offline mode only)\n      --dry-run               ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n      --fee-account string    Fee account pays fees for the transaction instead of deducting from the signer\n      --file-hash string      The hash of uploaded file\n      --gas string            gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --generate-only         Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                  help for upload\n      --keyring-dir string    The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                Use a connected Ledger device\n      --note string           Note to add a description to the transaction (previously --memo)\n      --offline               Offline mode (does not allow any online functionality\n  -o, --output string         Output format (text|json) (default \"json\")\n      --reporter string       The reporter address of meta node that reported the file\n  -s, --sequence uint         The sequence number of the signing account (offline mode only)\n      --sign-mode string      Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint   Set a block timeout height to prevent the tx from being committed past a certain height\n      --uploader string       The owner address of resource node that uploaded the file\n  -y, --yes                   Skip tx broadcasting prompt confirmation\n\n  In testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>Usage:\nstchaind tx sds upload \\\n--file-hash=&lt;file hash&gt; \\\n--uploader=&lt;file uploader, owner address of resource node&gt; \\\n--reporter=&lt;file reporter, meta node address&gt; \\\n--from=&lt;Name|address of private key&gt; \\\n--chain-id=&lt;current chain-id&gt; \\\n--keyring-backend=&lt;keyring's backend&gt;\n</code></pre> <p>Transaction example:</p> <pre><code> stchaind tx sds upload \\\n --file-hash=001A1FC0B82DD3B0353B59E90388EEA2B73DEECA872955B414EBC99ECD3E3C1F \\\n --uploader=st16uzr20lx072gexwjuvg94hz3t8y73u4085s9sw \\\n --reporter=stsds14c3em44vlh276cujnr2ez802uyjyeqrrsu9fuh \\\n --from=st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh \\\n --chain-id=stratos-1 \\\n --keyring-backend=file \\\n --gas=auto \\\n --gas-prices=1000000000wei \\\n --gas-adjustment=1.5\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-prepay","title":"-<code>prepay</code>","text":"<p>Create and sign a prepay tx</p> <pre><code>Usage:\n  stchaind tx sds prepay [from_address] [coins] [flags]\n\nFlags:\n  -a, --account-number uint   The account number of the signing account (offline mode only)\n      --dry-run               ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n      --fee-account string    Fee account pays fees for the transaction instead of deducting from the signer\n      --gas string            gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --generate-only         Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                  help for prepay\n      --keyring-dir string    The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                Use a connected Ledger device\n      --note string           Note to add a description to the transaction (previously --memo)\n      --offline               Offline mode (does not allow any online functionality\n  -o, --output string         Output format (text|json) (default \"json\")\n  -s, --sequence uint         The sequence number of the signing account (offline mode only)\n      --sign-mode string      Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint   Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                   Skip tx broadcasting prompt confirmation\n\n  In testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>Usage:\nstchaind tx sds prepay &lt;from_address, Name|address of private key&gt; &lt;coins&gt; \\\n--chain-id=&lt;current chain-id&gt; \\\n--keyring-backend=&lt;keyring's backend&gt; \\\n--gas=auto\n</code></pre> <p>Transaction example:</p> <pre><code> stchaind tx sds prepay st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh 10stos \\\n --chain-id=stratos-1 \\\n --keyring-backend=file \\\n --gas=auto \\\n --gas-prices=1000000000wei \\\n --gas-adjustment=1.5\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-upload-query","title":"-<code>upload</code> (query)","text":"<p>Query uploaded file info by hash</p> <pre><code>Usage:\n  stchaind query sds upload [file_hash] [flags]\n\nFlags:\n      --count-total       count total number of records in upload to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for upload\n      --limit uint        pagination limit of upload to query for (default 100)\n      --offset uint       pagination offset of upload to query for\n  -o, --output string     Output format (text|json) (default \"text\")\n      --page uint         pagination page of upload to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of upload to query for\n      --reverse           results are sorted in descending order\n</code></pre> <p>Example:</p> <pre><code>Usage:\nstchaind query sds upload &lt;file hash&gt;\n</code></pre> <p>Transaction example:</p> <pre><code>stchaind query sds upload 001A1FC0B82DD3B0353B59E90388EEA2B73DEECA872955B414EBC99ECD3E3C1F\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-sds-params","title":"-<code>sds-params</code>","text":"<p>Query values set as sds parameters</p> <pre><code>Usage:\n  stchaind query sds params [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for params\n  -o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query sds params\nbond_denom: wei\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#pot-module","title":"Pot Module","text":""},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-foundation-deposit","title":"-<code>foundation-deposit</code>","text":"<p>Deposit to foundation account</p> <pre><code>Usage:\n  stchaind tx pot foundation-deposit [flags]\n\nFlags:\n  -a, --account-number uint   The account number of the signing account (offline mode only)\n      --amount string         Amount of coins to withdraw\n      --dry-run               ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n      --fee-account string    Fee account pays fees for the transaction instead of deducting from the signer\n      --gas string            gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --generate-only         Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                  help for foundation-deposit\n      --keyring-dir string    The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                Use a connected Ledger device\n      --note string           Note to add a description to the transaction (previously --memo)\n      --offline               Offline mode (does not allow any online functionality\n  -o, --output string         Output format (text|json) (default \"json\")\n  -s, --sequence uint         The sequence number of the signing account (offline mode only)\n      --sign-mode string      Choose sign mode (direct|amino-json), this is an advanced feature\n      --timeout-height uint   Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                   Skip tx broadcasting prompt confirmation\n\n  In testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>Usage:\nstchaind tx pot foundation-deposit \\\n--amount=&lt;amount&gt; \\\n--from=&lt;from_address, Name|address of private key&gt; \\\n--chain-id=&lt;current chain-id&gt; \\\n--keyring-backend=&lt;keyring's backend&gt;\n</code></pre> <p>Transaction example:</p> <pre><code>stchaind tx pot foundation-deposit \\\n--amount=40000stos \\\n--from=st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh \\\n--chain-id=stratos-1 \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-prices=1000000000wei \\\n--gas-adjustment=1.5\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-withdraw","title":"-<code>withdraw</code>","text":"<p>withdraw POT reward</p> <pre><code>Usage:\n  stchaind tx pot withdraw [flags]\n\nFlags:\n  -a, --account-number uint      The account number of the signing account (offline mode only)\n      --amount string            Amount of coins to withdraw\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --dry-run                  ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n      --fees string              Fees to pay along with transaction; eg: 10gwei\n      --from string              Name or address of private key with which to sign\n      --gas string               gas limit to set per-transaction; set to \"auto\" to calculate required gas automatically (default 200000) (default \"200000\")\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices to determine the transaction fee (e.g. 10gwei)\n      --generate-only            Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible and the node operates offline)\n  -h, --help                     help for withdraw\n      --indent                   Add indent to JSON response\n      --keyring-backend string   Select keyring's backend (os|file|test) (default \"os\")\n      --ledger                   Use a connected Ledger device\n      --memo string              Memo to send along with transaction\n      --node string              &lt;host&gt;:&lt;port&gt; to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n  -s, --sequence uint            The sequence number of the signing account (offline mode only)\n      --target-address string    The target account where the money is deposited after withdraw\n      --trust-node               Trust connected full node (don't verify proofs for responses) (default true)\n  -y, --yes                      Skip tx broadcasting prompt confirmation\n\n  In testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>Usage:\nstchaind tx pot withdraw \\\n--amount=&lt;amount to withdraw&gt; \\\n--target-address=&lt;wallet address of reciever&gt; \\\n--from=&lt;from_address, Name|address of private key&gt; \\\n--chain-id=&lt;current chain-id&gt; \\\n--keyring-backend=&lt;keyring's backend&gt;\n</code></pre> <p>Transaction example:</p> <pre><code>stchaind tx pot withdraw \\\n--amount=100gwei \\\n--target-address=st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx \\\n--from=st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh \\\n--chain-id=stratos-1 \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-prices=1000000000wei \\\n--gas-adjustment=1.5\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-legacy-withdraw","title":"-<code>legacy-withdraw</code>","text":"<p>Temporarily used to withdraw POT reward recorded by legacy wallet address</p> <pre><code>Usage:\n  stchaind tx pot legacy-withdraw [flags]\n\nFlags:\n  -a, --account-number uint     The account number of the signing account (offline mode only)\n      --amount string           Amount of coins to withdraw\n      --dry-run                 ignore the --gas flag and perform a simulation of a transaction, but don't broadcast it\n      --fee-account string      Fee account pays fees for the transaction instead of deducting from the signer\n      --gas string              gas limit to set per-transaction; set to \"auto\" to calculate sufficient gas automatically (default 200000)\n      --generate-only           Build an unsigned transaction and write it to STDOUT (when enabled, the local Keybase is not accessible)\n  -h, --help                    help for legacy-withdraw\n      --keyring-dir string      The client Keyring directory; if omitted, the default 'home' directory will be used\n      --ledger                  Use a connected Ledger device\n      --note string             Note to add a description to the transaction (previously --memo)\n      --offline                 Offline mode (does not allow any online functionality\n  -o, --output string           Output format (text|json) (default \"json\")\n  -s, --sequence uint           The sequence number of the signing account (offline mode only)\n      --sign-mode string        Choose sign mode (direct|amino-json), this is an advanced feature\n      --target-address string   The target wallet address to deposit into after withdrawing\n      --timeout-height uint     Set a block timeout height to prevent the tx from being committed past a certain height\n  -y, --yes                     Skip tx broadcasting prompt confirmation\n\n\n  In testing phase, --keyring-backend=\"test\"\n</code></pre> <p>Example:</p> <pre><code>Usage:\nstchaind tx pot legacy-withdraw \\\n--amount=&lt;amount to withdraw&gt; \\\n--target-address=&lt;wallet address of reciever&gt; \\\n--from=&lt;from_address, Name|address of private key&gt; \\\n--chain-id=&lt;current chain-id&gt; \\\n--keyring-backend=&lt;keyring's backend&gt;\n</code></pre> <p>Transaction example:</p> <pre><code>stchaind tx pot legacy-withdraw \\\n--amount=100gwei \\\n--target-address=st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx \\\n--from=st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh \\\n--chain-id=stratos-1 \\\n--keyring-backend=file \\\n--gas=auto \\\n--gas-prices=1000000000wei \\\n--gas-adjustment=1.5\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-report","title":"-<code>report</code>","text":"<p>Query volume report by epoch</p> <pre><code>Usage:\n  stchaind query pot report [flags]\n\nFlags:\n      --epoch string    the epoch when this PoT message reported.\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for report\n  -o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query pot report --epoch=1\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-pot-params","title":"-<code>pot-params</code>","text":"<p>Query values set as pot parameters</p> <pre><code>Usage:\n  stchaind query pot params [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for params\n  -o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query pot params \n\nbond_denom: wei\ncommunity_tax: \"0.020000000000000000\"\ninitial_total_supply:\n  amount: \"400000000000000000000000000\"\n  denom: wei\nmature_epoch: \"2016\"\nmining_reward_params:\n- block_chain_percentage_in_bp: \"2000\"\n  meta_node_percentage_in_bp: \"2000\"\n  mining_reward:\n    amount: \"80000000000000000000\"\n    denom: wei\n  resource_node_percentage_in_bp: \"6000\"\n  total_mined_valve_end:\n    amount: \"16819200000000000000000000\"\n    denom: wei\n  total_mined_valve_start:\n    amount: \"0\"\n    denom: wei\n- block_chain_percentage_in_bp: \"2000\"\n  meta_node_percentage_in_bp: \"1800\"\n  mining_reward:\n    amount: \"40000000000000000000\"\n    denom: wei\n  resource_node_percentage_in_bp: \"6200\"\n  total_mined_valve_end:\n    amount: \"25228800000000000000000000\"\n    denom: wei\n  total_mined_valve_start:\n    amount: \"16819200000000000000000000\"\n    denom: wei\n- block_chain_percentage_in_bp: \"2000\"\n  meta_node_percentage_in_bp: \"1600\"\n  mining_reward:\n    amount: \"20000000000000000000\"\n    denom: wei\n  resource_node_percentage_in_bp: \"6400\"\n  total_mined_valve_end:\n    amount: \"29433600000000000000000000\"\n    denom: wei\n  total_mined_valve_start:\n    amount: \"25228800000000000000000000\"\n    denom: wei\n- block_chain_percentage_in_bp: \"2000\"\n  meta_node_percentage_in_bp: \"1400\"\n  mining_reward:\n    amount: \"10000000000000000000\"\n    denom: wei\n  resource_node_percentage_in_bp: \"6600\"\n  total_mined_valve_end:\n    amount: \"31536000000000000000000000\"\n    denom: wei\n  total_mined_valve_start:\n    amount: \"29433600000000000000000000\"\n    denom: wei\n- block_chain_percentage_in_bp: \"2000\"\n  meta_node_percentage_in_bp: \"1200\"\n  mining_reward:\n    amount: \"5000000000000000000\"\n    denom: wei\n  resource_node_percentage_in_bp: \"6800\"\n  total_mined_valve_end:\n    amount: \"32587200000000000000000000\"\n    denom: wei\n  total_mined_valve_start:\n    amount: \"31536000000000000000000000\"\n    denom: wei\n- block_chain_percentage_in_bp: \"2000\"\n  meta_node_percentage_in_bp: \"1000\"\n  mining_reward:\n    amount: \"2500000000000000000\"\n    denom: wei\n  resource_node_percentage_in_bp: \"7000\"\n  total_mined_valve_end:\n    amount: \"40000000000000000000000000\"\n    denom: wei\n  total_mined_valve_start:\n    amount: \"32587200000000000000000000\"\n    denom: wei\nreward_denom: wei\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#tendermint","title":"<code>Tendermint</code>","text":"<p>Tendermint subcommands</p> <pre><code>Usage:\n  stchaind tendermint [command]\n\nAvailable Commands:\n  reset-state      Remove all the data and WAL\n  show-address     Shows this node's tendermint validator consensus address\n  show-node-id     Show this node's ID\n  show-validator   Show this node's tendermint validator info\n  unsafe-reset-all (unsafe) Remove all the data and WAL, reset this node's validator to genesis state\n  version          Print tendermint libraries' version\n\nFlags:\n  -h, --help   help for tendermint\n\nGlobal Flags:\n  -b, --broadcast-mode string    Transaction broadcasting mode (sync|async|block) (default \"sync\")\n      --chain-id string          Specify Chain ID for sending Tx (default \"testnet\")\n      --fees string              Fees to pay along with transaction; eg: 10wei\n      --from string              Name or address of private key with which to sign\n      --gas-adjustment float     adjustment factor to be multiplied against the estimate returned by the tx simulation; if the gas limit is set manually this flag is ignored  (default 1)\n      --gas-prices string        Gas prices to determine the transaction fee (e.g. 10wei)\n      --home string              directory for config and data (default \"/home/hong/.stchaind\")\n      --keyring-backend string   Select keyring's backend (default \"os\")\n      --log_format string        The logging format (json|plain) (default \"plain\")\n      --log_level string         The logging level (trace|debug|info|warn|error|fatal|panic) (default \"info\")\n      --node string              &lt;host&gt;:&lt;port&gt; to tendermint rpc interface for this chain (default \"tcp://localhost:26657\")\n      --trace                    print out full stack trace on errors\n</code></pre>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-show-address","title":"-<code>show-address</code>","text":"<p>Shows this node's tendermint validator consensus address</p> <pre><code>Usage:\n  stchaind tendermint show-address [flags]\n\nFlags:\n  -h, --help   help for show-address\n</code></pre> <p>Example:</p> <pre><code>stchaind tendermint show-address\n  stvalcons1rzn3d8qmgf7ejsfn77eag5zwjfufmvmu7sn802\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-show-node-id","title":"-<code>show-node-id</code>","text":"<p>Show this node's ID</p> <pre><code>Usage:\n  stchaind tendermint show-node-id [flags]\n\nFlags:\n  -h, --help   help for show-node-id\n</code></pre> <p>Example:</p> <pre><code>stchaind tendermint show-node-id\n  d3875ac126c90fa293f0591ad99cd587b6b5c6cc\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-show-validator","title":"-<code>show-validator</code>","text":"<p>Show this node's tendermint validator info</p> <pre><code>Usage:\n  stchaind tendermint show-validator [flags]\n\nFlags:\n  -h, --help   help for show-validator\n</code></pre> <p>Example:</p> <pre><code>stchaind tendermint show-validator\n  {\"@type\":\"/cosmos.crypto.ed25519.PubKey\",\"key\":\"69gothWTE9FJBZ5gBjjSNhg8y/5SsI1hBaD81Dum7lo=\"}\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-version","title":"-<code>version</code>","text":"<p>Print protocols' and libraries' version numbers against which this app has been compiled</p> <pre><code>Usage:\n  stchaind tendermint version [flags]\n\nFlags:\n  -h, --help   help for version\n</code></pre> <p>Example:</p> <pre><code>stchaind tendermint version\n    tendermint: 0.34.21\n    abci: 0.17.0\n    blockprotocol: 11\n    p2pprotocol: 8\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#others","title":"<code>Others</code>","text":""},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-init-nodes","title":"-<code>init nodes</code>","text":"<p>Initialize validator's and node's configuration files.</p> <pre><code>Usage:\n  stchaind init [moniker] [flags]\n\nFlags:\n  -h, --help        help for init\n  -o, --overwrite   overwrite the genesis.json file\n      --recover     provide seed phrase to recover existing key instead of creating\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-start-st-chain","title":"-<code>start st-chain</code>","text":"<p>Run the full node application with Tendermint in or out of process. By default, the application will run with Tendermint in process.</p> <p>Pruning options can be provided via the '--pruning' flag or alternatively with '--pruning-keep-recent', 'pruning-keep-every', and 'pruning-interval' together.</p> <p>For '--pruning' the options are as follows:</p> <p>default: the last 100 states are kept in addition to every 500th state; pruning at 10 block intervals nothing: all historic states will be saved, nothing will be deleted (i.e. archiving node) everything: all saved states will be deleted, storing only the current state; pruning at 10 block intervals custom: allow pruning options to be manually specified through 'pruning-keep-recent', 'pruning-keep-every', and 'pruning-interval'</p> <p>Node halting configurations exist in the form of two flags: '--halt-height' and '--halt-time'. During the ABCI Commit phase, the node will check if the current block height is greater than or equal to the halt-height or if the current block time is greater than or equal to the halt-time. If so, the node will attempt to gracefully shutdown and the block will not be committed. In addition, the node will not be able to commit subsequent blocks.</p> <p>For profiling and benchmarking purposes, CPU profiling can be enabled via the '--cpu-profile' flag which accepts a path for the resulting pprof file.</p> <pre><code>Usage:\n  stchaind start [flags]\n\nFlags:\n      --abci string                                     specify abci transport (socket | grpc) (default \"socket\")\n      --address string                                  Listen address (default \"tcp://0.0.0.0:26658\")\n      --api.enable                                      Defines if Cosmos-sdk REST server should be enabled\n      --api.enabled-unsafe-cors                         Defines if CORS should be enabled (unsafe - use it at your own risk)\n      --consensus.create_empty_blocks                   set this to false to only produce blocks when there are txs or when the AppHash changes (default true)\n      --consensus.create_empty_blocks_interval string   the possible interval between empty blocks (default \"0s\")\n      --consensus.double_sign_check_height int          how many blocks to look back to check existence of the node's consensus votes before joining consensus\n      --cpu-profile string                              Enable CPU profiling and write to the provided file\n      --db_backend string                               database backend: goleveldb | cleveldb | boltdb | rocksdb | badgerdb (default \"goleveldb\")\n      --db_dir string                                   database directory (default \"data\")\n      --evm.max-tx-gas-wanted uint                      the gas wanted for each eth tx returned in ante handler in check tx mode (default 500000)\n      --evm.tracer string                               the EVM tracer type to collect execution traces from the EVM transaction execution (json|struct|access_list|markdown)\n      --fast_sync                                       fast blockchain syncing (default true)\n      --genesis_hash bytesHex                           optional SHA-256 hash of the genesis file\n      --grpc-web.address string                         The gRPC-Web server address to listen on (default \"0.0.0.0:9091\")\n      --grpc-web.enable                                 Define if the gRPC-Web server should be enabled. (Note gRPC must also be enabled.) (default true)\n      --grpc.address string                             the gRPC server address to listen on (default \"0.0.0.0:9090\")\n      --grpc.enable                                     Define if the gRPC server should be enabled (default true)\n      --halt-height uint                                Block height at which to gracefully halt the chain and shutdown the node\n      --halt-time uint                                  Minimum block time (in Unix seconds) at which to gracefully halt the chain and shutdown the node\n  -h, --help                                            help for start\n      --inter-block-cache                               Enable inter-block caching (default true)\n      --inv-check-period uint                           Assert registered invariants every N blocks\n      --json-rpc.address string                         the JSON-RPC server address to listen on (default \"0.0.0.0:8545\")\n      --json-rpc.api strings                            Defines a list of JSON-RPC namespaces that should be enabled (default [eth,net,web3])\n      --json-rpc.block-range-cap eth_getLogs            Sets the max block range allowed for eth_getLogs query (default 10000)\n      --json-rpc.enable                                 Define if the gRPC server should be enabled (default true)\n      --json-rpc.evm-timeout duration                   Sets a timeout used for eth_call (0=infinite) (default 5s)\n      --json-rpc.filter-cap int32                       Sets the global cap for total number of filters that can be created (default 200)\n      --json-rpc.gas-cap uint                           Sets a cap on gas that can be used in eth_call/estimateGas unit is gwei (0=infinite) (default 25000000)\n      --json-rpc.http-idle-timeout duration             Sets a idle timeout for json-rpc http server (0=infinite) (default 2m0s)\n      --json-rpc.http-timeout duration                  Sets a read/write timeout for json-rpc http server (0=infinite) (default 30s)\n      --json-rpc.logs-cap eth_getLogs                   Sets the max number of results can be returned from single eth_getLogs query (default 10000)\n      --json-rpc.txfee-cap float                        Sets a cap on transaction fee that can be sent via the RPC APIs (1 = default 1 gwei) (default 1)\n      --json-rpc.ws-address string                      the JSON-RPC WS server address to listen on (default \"0.0.0.0:8546\")\n      --min-retain-blocks uint                          Minimum block height offset during ABCI commit to prune Tendermint blocks\n      --minimum-gas-prices string                       Minimum gas prices to accept for transactions; Any fee in a tx must meet this minimum (e.g. 0.01stos)\n      --moniker string                                  node name (default \"ubuntu\")\n      --p2p.laddr string                                node listen address. (0.0.0.0:0 means any interface, any port) (default \"tcp://0.0.0.0:26656\")\n      --p2p.persistent_peers string                     comma-delimited ID@host:port persistent peers\n      --p2p.pex                                         enable/disable Peer-Exchange (default true)\n      --p2p.private_peer_ids string                     comma-delimited private peer IDs\n      --p2p.seed_mode                                   enable/disable seed mode\n      --p2p.seeds string                                comma-delimited ID@host:port seed nodes\n      --p2p.unconditional_peer_ids string               comma-delimited IDs of unconditional peers\n      --p2p.upnp                                        enable/disable UPNP port forwarding\n      --priv_validator_laddr string                     socket address to listen on for connections from external priv_validator process\n      --proxy_app string                                proxy app address, or one of: 'kvstore', 'persistent_kvstore', 'counter', 'e2e' or 'noop' for local testing. (default \"tcp://127.0.0.1:26658\")\n      --pruning string                                  Pruning strategy (default|nothing|everything|custom) (default \"default\")\n      --pruning-interval uint                           Height interval at which pruned heights are removed from disk (ignored if pruning is not 'custom')\n      --pruning-keep-every uint                         Offset heights to keep on disk after 'keep-every' (ignored if pruning is not 'custom')\n      --pruning-keep-recent uint                        Number of recent heights to keep on disk (ignored if pruning is not 'custom')\n      --rpc.grpc_laddr string                           GRPC listen address (BroadcastTx only). Port required\n      --rpc.laddr string                                RPC listen address. Port required (default \"tcp://127.0.0.1:26657\")\n      --rpc.pprof_laddr string                          pprof listen address (https://golang.org/pkg/net/http/pprof)\n      --rpc.unsafe                                      enabled unsafe rpc methods\n      --state-sync.snapshot-interval uint               State sync snapshot interval\n      --state-sync.snapshot-keep-recent uint32          State sync snapshot to keep (default 2)\n      --tls.certificate-path string                     the cert.pem file path for the server TLS configuration\n      --tls.key-path string                             the key.pem file path for the server TLS configuration\n      --trace-store string                              Enable KVStore tracing to an output file\n      --transport string                                Transport protocol: socket, grpc (default \"socket\")\n      --unsafe-skip-upgrades ints                       Skip a set of upgrade heights to continue the old binary\n      --with-tendermint                                 Run abci app embedded in-process with tendermint (default true)\n      --x-crisis-skip-assert-invariants                 Skip x/crisis invariants check on startup\n</code></pre> <p>Example:</p> <pre><code>stchaind start\n</code></pre> <p>Result:</p> <pre><code>stchaind start\n  11:40AM INF Unlocking keyring\n  11:40AM INF starting ABCI with Tendermint\n  11:40AM INF Starting multiAppConn service impl=multiAppConn module=proxy server=node\n  11:40AM INF Starting localClient service connection=query impl=localClient module=abci-client server=node\n  11:40AM INF Starting localClient service connection=snapshot impl=localClient module=abci-client server=node\n  11:40AM INF Starting localClient service connection=mempool impl=localClient module=abci-client server=node\n  11:40AM INF Starting localClient service connection=consensus impl=localClient module=abci-client server=node\n  11:40AM INF Starting EventBus service impl=EventBus module=events server=node\n  11:40AM INF Starting PubSub service impl=PubSub module=pubsub server=node\n  11:40AM INF Starting IndexerService service impl=IndexerService module=txindex server=node\n  11:40AM INF ABCI Handshake App Info hash=\"r\ufffdp=W\\\"\ufffd\ufffd\\x05v\\x17K\ufffd\\a \ufffdA?\ufffd/\ufffd\ufffd\ufffd\ufffd\ufffdk\u012d\\x17W\\x14}\" height=2551 module=consensus protocol-version=0 server=node software-version=v0.8.0\n  11:40AM INF ABCI Replay Blocks appHeight=2551 module=consensus server=node stateHeight=2551 storeHeight=2551\n  11:40AM INF Completed ABCI Handshake - Tendermint and App are synced appHash=\"r\ufffdp=W\\\"\ufffd\ufffd\\x05v\\x17K\ufffd\\a \ufffdA?\ufffd/\ufffd\ufffd\ufffd\ufffd\ufffdk\u012d\\x17W\\x14}\" appHeight=2551 module=consensus server=node\n  11:40AM INF Version info block=11 p2p=8 server=node tendermint_version=0.34.19\n  11:40AM INF This node is a validator addr=EA5F7899F5CC81675EA98BF329BB93CAE294B01C module=consensus pubKey=eYVLsz4XOB5HiadCpXxeUP48FTYrmFUGIe+hYv92E7I= server=node\n  11:40AM INF P2P Node ID ID=f8e9d6c5874feb1e9441380eb8e189ba88238d80 file=node/stchaind/config/node_key.json module=p2p server=node\n  11:40AM INF Adding persistent peers addrs=[] module=p2p server=node\n  11:40AM INF Adding unconditional peer ids ids=[] module=p2p server=node\n  11:40AM INF Add our address to book addr={\"id\":\"f8e9d6c5874feb1e9441380eb8e189ba88238d80\",\"ip\":\"0.0.0.0\",\"port\":26656} book=node/stchaind/config/addrbook.json module=p2p server=node\n  11:40AM INF Starting Node service impl=Node server=node\n  11:40AM INF Starting pprof server laddr=localhost:6060 server=node\n  11:40AM INF Starting RPC HTTP server on 127.0.0.1:26657 module=rpc-server server=node\n  11:40AM INF Starting P2P Switch service impl=\"P2P Switch\" module=p2p server=node\n  11:40AM INF Starting Consensus service impl=ConsensusReactor module=consensus server=node\n  11:40AM INF Reactor  module=consensus server=node waitSync=false\n  11:40AM INF Starting State service impl=ConsensusState module=consensus server=node\n  11:40AM INF Starting baseWAL service impl=baseWAL module=consensus server=node wal=node/stchaind/data/cs.wal/wal\n  11:40AM INF Starting Group service impl=Group module=consensus server=node wal=node/stchaind/data/cs.wal/wal\n  11:40AM INF Starting TimeoutTicker service impl=TimeoutTicker module=consensus server=node\n  11:40AM INF Searching for height height=2552 max=0 min=0 module=consensus server=node wal=node/stchaind/data/cs.wal/wal\n  11:40AM INF Searching for height height=2551 max=0 min=0 module=consensus server=node wal=node/stchaind/data/cs.wal/wal\n  11:40AM INF Found height=2551 index=0 module=consensus server=node wal=node/stchaind/data/cs.wal/wal\n  11:40AM INF Catchup by replaying consensus messages height=2552 module=consensus server=node\n  11:40AM INF Replay: New Step height=2552 module=consensus round=0 server=node step=RoundStepNewHeight\n  11:40AM INF Replay: Done module=consensus server=node\n  11:40AM INF Starting Evidence service impl=Evidence module=evidence server=node\n  11:40AM INF Starting StateSync service impl=StateSync module=statesync server=node\n  11:40AM INF Starting PEX service impl=PEX module=pex server=node\n  11:40AM INF Starting AddrBook service book=node/stchaind/config/addrbook.json impl=AddrBook module=p2p server=node\n  11:40AM INF Starting Mempool service impl=Mempool module=mempool server=node\n  11:40AM INF Starting BlockchainReactor service impl=BlockchainReactor module=blockchain server=node\n  11:40AM INF Saving AddrBook to file book=node/stchaind/config/addrbook.json module=p2p server=node size=0\n  11:40AM INF Ensure peers module=pex numDialing=0 numInPeers=0 numOutPeers=0 numToDial=10 server=node\n  11:40AM INF No addresses to dial. Falling back to seeds module=pex server=node\n  11:40AM INF starting API server... server=api\n  11:40AM INF Starting RPC HTTP server on [::]:1317 server=api\n\n...\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-config","title":"-<code>config</code>","text":"<p>Create or query an application CLI configuration file.</p> <pre><code>Usage:\n  stchaind config &lt;key&gt; &lt;value&gt; [flags]\n\nFlags:\n      --get    print configuration value or its default if unset\n  -h, --help   help for config\n</code></pre> <p>Create Configuration Example:</p> <pre><code>stchaind config keyring-backend local-test\n  configuration saved to $HOME/.stchaind/config/client.toml\n</code></pre> <p>Query Configuration Example:</p> <pre><code>stchaind config keyring-backend\n  test\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-keys","title":"-<code>keys</code>","text":"<p>Keyring management commands. These keys may be in any format supported by the Tendermint crypto library and can be used by light-clients, full nodes, or any other application that needs to sign with a private key.</p> <pre><code>The keyring supports the following backends:\n\n    os          Uses the operating system's default credentials store.\n    file        Uses encrypted file-based keystore within the app's configuration directory.\n                This keyring will request a password each time it is accessed, which may occur\n                multiple times in a single command resulting in repeated password prompts.\n    kwallet     Uses KDE Wallet Manager as a credentials management application.\n    pass        Uses the pass command line utility to store and retrieve keys.\n    test        Stores keys insecurely to disk. It does not prompt for a password to be unlocked\n                and it should be use only for testing purposes.\n\nkwallet and pass backends depend on external tools. Refer to their respective documentation for more\ninformation:\n    KWallet     https://github.com/KDE/kwallet\n    pass        https://www.passwordstore.org/\n\nThe pass backend requires GnuPG: https://gnupg.org/\n\nUsage:\n  stchaind keys [command]\n\nAvailable Commands:\n\n\n  add                   Add an encrypted private key (either newly generated or recovered), encrypt it, and save to &lt;name&gt; file\n  delete                Delete the given keys\n  export                Export private keys\n  import                Import private keys into the local keybase\n  list                  List all keys\n  migrate               Migrate keys from the legacy (db-based) Keybase\n  mnemonic              Compute the bip39 mnemonic for some input entropy\n  parse                 Parse address from hex to bech32 and vice versa\n  show                  Retrieve key information by name or address\n  unsafe-export-eth-key **UNSAFE** Export an Ethereum private key\n  unsafe-import-eth-key **UNSAFE** Import Ethereum private keys into the local keybase\n\nFlags:\n  -h, --help                 help for keys\n      --keyring-dir string   The client Keyring directory; if omitted, the default 'home' directory will be used\n      --output string        Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind keys list --keyring-backend=file\n</code></pre> <p>Result:</p> <pre><code>- name: user0\n  type: local\n  address: st16uzr20lx072gexwjuvg94hz3t8y73u4085s9sw\n  pubkey: '{\"@type\":\"/stratos.crypto.v1.ethsecp256k1.PubKey\",\"key\":\"A/wF15Wd3ogCXstE7S4Zf3DA4KXb0W7exQhP004PLTi3\"}'\n  mnemonic: \"\"\n- name: user1\n  type: local\n  address: st1dz20dmhjkuc2tur3amgl8t45w807a640leh8p0\n  pubkey: '{\"@type\":\"/stratos.crypto.v1.ethsecp256k1.PubKey\",\"key\":\"AgnhB5EkHL8+jD0/zRDR11nIpfOirTRrjgCX6uibhmDW\"}'\n  mnemonic: \"\"\n- name: user10\n  type: local\n  address: st1lkcrz3ktt2p7ppu9arglpqcn94pcdd9a9pmatf\n  pubkey: '{\"@type\":\"/stratos.crypto.v1.ethsecp256k1.PubKey\",\"key\":\"A2sZ2Z9BU9oDELC06Gj8Lfc5UycxTaPux3sEIq8sIzSW\"}'\n  mnemonic: \"\"\n- name: user2\n  type: local\n  address: st16czjk2ym0prgvy4gl970t84vrp96s5kayfqmf2\n  pubkey: '{\"@type\":\"/stratos.crypto.v1.ethsecp256k1.PubKey\",\"key\":\"AwfcJTOVWdx6ai61cy8VGJ1SdWHzwm2CCmr/+PwSpFeR\"}'\n  mnemonic: \"\"\n- name: user3\n  type: local\n  address: st17patveqxcq42rguc7nayr2g3jtawpzvhfmmumt\n  pubkey: '{\"@type\":\"/stratos.crypto.v1.ethsecp256k1.PubKey\",\"key\":\"AtFxbuB4s+2SYzImGPIBwe0H0mKCXbIPu1T63OvbgE/3\"}'\n  mnemonic: \"\"\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-status","title":"-<code>status</code>","text":"<p>Query remote node for status.</p> <pre><code>Usage:\n  stchaind status [flags]\n\nFlags:\n  -h, --help   help for status\n</code></pre> <p>Example:</p> <pre><code>stchaind status | jq\n</code></pre> <p>Result:</p> <pre><code>{\n    \"NodeInfo\": {\n        \"protocol_version\": {\n            \"p2p\": \"8\",\n            \"block\": \"11\",\n            \"app\": \"0\"\n        },\n        \"id\": \"16a0758d175cbf5c08d41dffa73eb5c0190869ed\",\n        \"listen_addr\": \"tcp://0.0.0.0:26656\",\n        \"network\": \"test-chain\",\n        \"version\": \"0.34.21\",\n        \"channels\": \"40202122233038606100\",\n        \"moniker\": \"node\",\n        \"other\": {\n            \"tx_index\": \"on\",\n            \"rpc_address\": \"tcp://127.0.0.1:26657\"\n        }\n    },\n    \"SyncInfo\": {\n        \"latest_block_hash\": \"697A2DB243E5191C6D85285A2ADD4924526924969C6C70FE71827C9FE41D4373\",\n        \"latest_app_hash\": \"E978F87BB23D351B853F5F0CF9FBBBA4464FF5D7CE3746BF3E2357F28CBCE041\",\n        \"latest_block_height\": \"497\",\n        \"latest_block_time\": \"2023-01-11T01:10:37.562405326Z\",\n        \"earliest_block_hash\": \"139676534FECFA507D56A06B03BD528E70ACA6D4DB6560219707011966613DE4\",\n        \"earliest_app_hash\": \"E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855\",\n        \"earliest_block_height\": \"1\",\n        \"earliest_block_time\": \"2023-01-09T17:08:58.4890503Z\",\n        \"catching_up\": false\n    },\n    \"ValidatorInfo\": {\n        \"Address\": \"18A7169C1B427D994133F7B3D4504E92789DB37C\",\n        \"PubKey\": {\n            \"type\": \"tendermint/PubKeyEd25519\",\n            \"value\": \"69gothWTE9FJBZ5gBjjSNhg8y/5SsI1hBaD81Dum7lo=\"\n        },\n        \"VotingPower\": \"500000\"\n    }\n}\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-version_1","title":"-<code>version</code>","text":"<p>Print the application binary version information</p> <pre><code>Usage:\n  stchaind version [flags]\n\nFlags:\n  -h, --help            help for version\n      --long            Print long version information\n  -o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind version \n  v0.9.0\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-account","title":"-<code>account</code>","text":"<p>Query for account by address.</p> <pre><code>Usage:\n  stchaind query account [address] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for account\n  -o, --output string   Output format (text|json) (default \"text\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query account st16uzr20lx072gexwjuvg94hz3t8y73u4085s9sw\n</code></pre> <p>Result:</p> <pre><code>'@type': /stratos.types.v1.EthAccount\nbase_account:\n  account_number: \"0\"\n  address: st16uzr20lx072gexwjuvg94hz3t8y73u4085s9sw\n  pub_key:\n    '@type': /stratos.crypto.v1.ethsecp256k1.PubKey\n    key: A/wF15Wd3ogCXstE7S4Zf3DA4KXb0W7exQhP004PLTi3\n  sequence: \"4\"\ncode_hash: 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-tendermint-validator-set","title":"-<code>tendermint-validator-set</code>","text":"<p>Get the full tendermint validator set at given height</p> <pre><code>Usage:\n  stchaind query tendermint-validator-set [height] [flags]\n\nFlags:\n  -h, --help        help for tendermint-validator-set\n      --limit int   Query number of results returned per page (default 100)\n      --page int    Query a specific page of paginated results (default 1)\n</code></pre> <p>Example:</p> <pre><code>stchaind query tendermint-validator-set 1\n</code></pre> <p>Result:</p> <pre><code>block_height: \"1\"\ntotal: \"1\"\nvalidators:\n- address: stvalcons1rzn3d8qmgf7ejsfn77eag5zwjfufmvmu7sn802\n  proposer_priority: \"0\"\n  pub_key:\n    type: tendermint/PubKeyEd25519\n    value: 69gothWTE9FJBZ5gBjjSNhg8y/5SsI1hBaD81Dum7lo=\n  voting_power: \"500000\"\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-block","title":"-<code>block</code>","text":"<p>Get verified data for a block at given height.</p> <pre><code>Usage:\n  stchaind query block [height] [flags]\n\nFlags:\n  -h, --help   help for block\n</code></pre> <p>Example:</p> <pre><code>stchaind query block 630001 | jq\n</code></pre> <p>Result:</p> <pre><code>{\n    \"block_id\": {\n        \"hash\": \"74E410DF477CB2B54265160FE75B48E096BCF60A29F47B825EB017FAE1BB0263\",\n        \"parts\": {\n            \"total\": 1,\n            \"hash\": \"9870B5AAC0D6207850D7AC4D3072D5AC17C6AF120D50EB667E054D5613B12C6D\"\n        }\n    },\n    \"block\": {\n        \"header\": {\n            \"version\": {\n                \"block\": \"11\"\n            },\n            \"chain_id\": \"test-chain\",\n            \"height\": \"150\",\n            \"time\": \"2023-01-10T22:19:55.918496162Z\",\n            \"last_block_id\": {\n                \"hash\": \"56676AC4975414BD2BF86C29CBCC9124A97AF84E1654AC41862B520595E0E6A7\",\n                \"parts\": {\n                    \"total\": 1,\n                    \"hash\": \"B919897435939A560885651505D570FE93A77EA695F0E6A24F294E507F9F1BC9\"\n                }\n            },\n            \"last_commit_hash\": \"3435730FE67F2F8D2092DC384C42FBD4026DF749EE49DEEBBD4042F67B96911B\",\n            \"data_hash\": \"E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855\",\n            \"validators_hash\": \"5234BD91A3A751E055C35876578DE4A466311A80D540B59885AF68EF6D4D56DE\",\n            \"next_validators_hash\": \"5234BD91A3A751E055C35876578DE4A466311A80D540B59885AF68EF6D4D56DE\",\n            \"consensus_hash\": \"048091BC7DDC283F77BFBF91D73C44DA58C3DF8A9CBC867405D8B7F3DAADA22F\",\n            \"app_hash\": \"724DAFFA7A2B129A8E956D531DF4F24616E76D03976ED899F4DFBBE1FBF53B39\",\n            \"last_results_hash\": \"E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855\",\n            \"evidence_hash\": \"E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855\",\n            \"proposer_address\": \"18A7169C1B427D994133F7B3D4504E92789DB37C\"\n        },\n        \"data\": {\n            \"txs\": null\n        },\n        \"evidence\": {\n            \"evidence\": null\n        },\n        \"last_commit\": {\n            \"height\": \"149\",\n            \"round\": 0,\n            \"block_id\": {\n                \"hash\": \"56676AC4975414BD2BF86C29CBCC9124A97AF84E1654AC41862B520595E0E6A7\",\n                \"parts\": {\n                    \"total\": 1,\n                    \"hash\": \"B919897435939A560885651505D570FE93A77EA695F0E6A24F294E507F9F1BC9\"\n                }\n            },\n            \"signatures\": [\n                {\n                    \"block_id_flag\": 2,\n                    \"validator_address\": \"18A7169C1B427D994133F7B3D4504E92789DB37C\",\n                    \"timestamp\": \"2023-01-10T22:19:55.918496162Z\",\n                    \"signature\": \"otYHnEyBJBM09TrcpX9CqwYGmgiJMErteqA5jUPFeplqGmIvZY7gHIzFfZh8RQKkN1umR1C0IyQypRvDQ2zJAw==\"\n                }\n            ]\n        }\n    }\n}\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-txs","title":"-<code>txs</code>","text":"<p>Search for transactions that match the exact given events where results are paginated. Each event takes the form of '{eventType}.{eventAttribute}={value}'. Please refer to each module's documentation for the full set of events to query for. Each module documents its respective events under 'xx_events.md'.</p> <pre><code>Usage:\n  stchaind query txs [flags]\n\nFlags:\n      --events string   list of transaction events in the form of {eventType}.{eventAttribute}={value}\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for txs\n      --limit int       Query number of transactions results per page returned (default 30)\n  -o, --output string   Output format (text|json) (default \"text\")\n      --page int        Query a specific page of paginated results (default 1)\n\nExample:\nstchaind query txs --events 'message.sender=cosmos1...&amp;message.action=withdraw_delegator_reward' --page 1 --limit 30\n</code></pre> <p>Example:</p> <pre><code>stchaind query txs \\\n--events 'message.sender=st1gtw399h9vfnekqsz3dg4n6mj0qgdpnh3c2n66k' \\\n--chain-id=stratos-1 \\\n--limit=20\n</code></pre> <p>Result:</p> <pre><code>  {\n    \"total_count\": \"2\",\n    \"count\": \"2\",\n    \"page_number\": \"1\",\n    \"page_total\": \"1\",\n    \"limit\": \"20\",\n    \"txs\": [\n        {\n            \"height\": \"3681\",\n            \"txhash\": \"EA0AB730219917533E73B1509EC38AE26614B2A8C4C4EA4E90026262127E8672\",\n            \"raw_log\": \"[{\\\"msg_index\\\":0,\\\"log\\\":\\\"\\\",\\\"events\\\":[{\\\"type\\\":\\\"message\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"action\\\",\\\"value\\\":\\\"vote\\\"},{\\\"key\\\":\\\"module\\\",\\\"value\\\":\\\"governance\\\"},{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"st1gtw399h9vfnekqsz3dg4n6mj0qgdpnh3c2n66k\\\"}]},{\\\"type\\\":\\\"proposal_vote\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"option\\\",\\\"value\\\":\\\"Yes\\\"},{\\\"key\\\":\\\"proposal_id\\\",\\\"value\\\":\\\"7\\\"}]}]}]\",\n            \"logs\": [\n                {\n                    \"msg_index\": 0,\n                    \"log\": \"\",\n                    \"events\": [\n                        {\n                            \"type\": \"message\",\n                            \"attributes\": [\n                                {\n                                    \"key\": \"action\",\n                                    \"value\": \"vote\"\n                                },\n                                {\n                                    \"key\": \"module\",\n                                    \"value\": \"governance\"\n                                },\n                                {\n                                    \"key\": \"sender\",\n                                    \"value\": \"st1gtw399h9vfnekqsz3dg4n6mj0qgdpnh3c2n66k\"\n                                }\n                            ]\n                        },\n                        {\n                            \"type\": \"proposal_vote\",\n                            \"attributes\": [\n                                {\n                                    \"key\": \"option\",\n                                    \"value\": \"Yes\"\n                                },\n                                {\n                                    \"key\": \"proposal_id\",\n                                    \"value\": \"7\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ],\n            \"gas_wanted\": \"200000\",\n            \"gas_used\": \"38472\",\n            \"tx\": {\n                \"type\": \"cosmos-sdk/StdTx\",\n                \"value\": {\n                    \"msg\": [\n                        {\n                            \"type\": \"cosmos-sdk/MsgVote\",\n                            \"value\": {\n                                \"proposal_id\": \"7\",\n                                \"voter\": \"st1gtw399h9vfnekqsz3dg4n6mj0qgdpnh3c2n66k\",\n                                \"option\": \"Yes\"\n                            }\n                        }\n                    ],\n                    \"fee\": {\n                        \"amount\": [],\n                        \"gas\": \"200000\"\n                    },\n                    \"signatures\": [\n                        {\n                            \"pub_key\": {\n                                \"type\": \"tendermint/PubKeySecp256k1\",\n                                \"value\": \"A8h5ZfH926q3EMdHeOdT2Z5W1KDjOc3LT33quKK8uCdZ\"\n                            },\n                            \"signature\": \"yE56xpZ4OI3+HxQr5bklYHuAOspKlwVC7hiSKnja63khIlU+TTnEhgoRvNgYub58HVbOBtslHU7QncNKSWEEbg==\"\n                        }\n                    ],\n                    \"memo\": \"\"\n                }\n            },\n            \"timestamp\": \"2021-07-23T14:41:18Z\"\n        },\n        {\n            \"height\": \"4400\",\n            \"txhash\": \"D21722FE6C3DE53268EEAF1A9C433DACF635B2715F6B5DCFBD5EED7B28705BE8\",\n            \"raw_log\": \"[{\\\"msg_index\\\":0,\\\"log\\\":\\\"\\\",\\\"events\\\":[{\\\"type\\\":\\\"message\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"action\\\",\\\"value\\\":\\\"vote\\\"},{\\\"key\\\":\\\"module\\\",\\\"value\\\":\\\"governance\\\"},{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"st1gtw399h9vfnekqsz3dg4n6mj0qgdpnh3c2n66k\\\"}]},{\\\"type\\\":\\\"proposal_vote\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"option\\\",\\\"value\\\":\\\"Yes\\\"},{\\\"key\\\":\\\"proposal_id\\\",\\\"value\\\":\\\"9\\\"}]}]}]\",\n            \"logs\": [\n                {\n                    \"msg_index\": 0,\n                    \"log\": \"\",\n                    \"events\": [\n                        {\n                            \"type\": \"message\",\n                            \"attributes\": [\n                                {\n                                    \"key\": \"action\",\n                                    \"value\": \"vote\"\n                                },\n                                {\n                                    \"key\": \"module\",\n                                    \"value\": \"governance\"\n                                },\n                                {\n                                    \"key\": \"sender\",\n                                    \"value\": \"st1gtw399h9vfnekqsz3dg4n6mj0qgdpnh3c2n66k\"\n                                }\n                            ]\n                        },\n                        {\n                            \"type\": \"proposal_vote\",\n                            \"attributes\": [\n                                {\n                                    \"key\": \"option\",\n                                    \"value\": \"Yes\"\n                                },\n                                {\n                                    \"key\": \"proposal_id\",\n                                    \"value\": \"9\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ],\n            \"gas_wanted\": \"200000\",\n            \"gas_used\": \"38508\",\n            \"tx\": {\n                \"type\": \"cosmos-sdk/StdTx\",\n                \"value\": {\n                    \"msg\": [\n                        {\n                            \"type\": \"cosmos-sdk/MsgVote\",\n                            \"value\": {\n                                \"proposal_id\": \"9\",\n                                \"voter\": \"st1gtw399h9vfnekqsz3dg4n6mj0qgdpnh3c2n66k\",\n                                \"option\": \"Yes\"\n                            }\n                        }\n                    ],\n                    \"fee\": {\n                        \"amount\": [],\n                        \"gas\": \"200000\"\n                    },\n                    \"signatures\": [\n                        {\n                            \"pub_key\": {\n                                \"type\": \"tendermint/PubKeySecp256k1\",\n                                \"value\": \"A8h5ZfH926q3EMdHeOdT2Z5W1KDjOc3LT33quKK8uCdZ\"\n                            },\n                            \"signature\": \"+w/Qhm6JdyQLXsquiKe0WCqCNjqois2Zhc76h0AphDhQZTKlpD9qlVuA/BX7gmVrmiUdqG/G4YExu8XkQSvnSg==\"\n                        }\n                    ],\n                    \"memo\": \"\"\n                }\n            },\n            \"timestamp\": \"2021-07-25T00:36:47Z\"\n        }\n    ]\n}\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-tx","title":"-<code>tx</code>","text":"<p>Query for a transaction by hash in a committed block.</p> <pre><code>Example:\nstchaind query tx &lt;hash&gt;\nstchaind query tx --type=acc_seq &lt;addr&gt;/&lt;sequence&gt;\nstchaind query tx --type=signature &lt;sig1_base64&gt;,&lt;sig2_base64...&gt;\n\nUsage:\n  stchaind query tx --type=[hash|acc_seq|signature] [hash|acc_seq|signature] [flags]\n\nFlags:\n      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for tx\n  -o, --output string   Output format (text|json) (default \"text\")\n      --type string     The type to be used when querying tx, can be one of \"hash\", \"acc_seq\", \"signature\" (default \"hash\")\n</code></pre> <p>Example:</p> <pre><code>stchaind query tx AB0EF3761603145EDC1B4121C91B51001249186E1362E7148C82E7DB12F7BDF0\n</code></pre> <p>Result:</p> <pre><code>code: 0\ncodespace: \"\"\ndata: 0A1E0A1C2F636F736D6F732E62616E6B2E763162657461312E4D736753656E64\nevents:\n- attributes:\n  - index: true\n    key: c3BlbmRlcg==\n    value: c3QxcHZ5anpsaHdycGdrbHUwMDQ0YXQ0dDZxaDdtMjNrM2tyMmdzamg=\n  - index: true\n    key: YW1vdW50\n    value: MjAwMDAwMDAwMDAwMDAwd2Vp\n  type: coin_spent\n- attributes:\n  - index: true\n    key: cmVjZWl2ZXI=\n    value: c3QxN3hwZnZha20yYW1nOTYyeWxzNmY4NHoza2VsbDhjNWx2NWhqMnE=\n  - index: true\n    key: YW1vdW50\n    value: MjAwMDAwMDAwMDAwMDAwd2Vp\n  type: coin_received\n- attributes:\n  - index: true\n    key: cmVjaXBpZW50\n    value: c3QxN3hwZnZha20yYW1nOTYyeWxzNmY4NHoza2VsbDhjNWx2NWhqMnE=\n  - index: true\n    key: c2VuZGVy\n    value: c3QxcHZ5anpsaHdycGdrbHUwMDQ0YXQ0dDZxaDdtMjNrM2tyMmdzamg=\n  - index: true\n    key: YW1vdW50\n    value: MjAwMDAwMDAwMDAwMDAwd2Vp\n  type: transfer\n- attributes:\n  - index: true\n    key: c2VuZGVy\n    value: c3QxcHZ5anpsaHdycGdrbHUwMDQ0YXQ0dDZxaDdtMjNrM2tyMmdzamg=\n  type: message\n- attributes:\n  - index: true\n    key: ZmVl\n    value: MjAwMDAwMDAwMDAwMDAwd2Vp\n  - index: true\n    key: ZmVlX3BheWVy\n    value: c3QxcHZ5anpsaHdycGdrbHUwMDQ0YXQ0dDZxaDdtMjNrM2tyMmdzamg=\n  type: tx\n- attributes:\n  - index: true\n    key: YWNjX3NlcQ==\n    value: c3QxcHZ5anpsaHdycGdrbHUwMDQ0YXQ0dDZxaDdtMjNrM2tyMmdzamgvMw==\n  type: tx\n- attributes:\n  - index: true\n    key: c2lnbmF0dXJl\n    value: N0ZtZ0Irc1RuUDVLazRxMTIxWXlWZEpKa2RFcTNHaW95ZHU4ZlRQK3B4b01DL1RsNzd1SmxDUkJhblNQN2p4MXhFandUeHQzem5HTDlLTlFMUkFBMlFBPQ==\n  type: tx\n- attributes:\n  - index: true\n    key: YWN0aW9u\n    value: L2Nvc21vcy5iYW5rLnYxYmV0YTEuTXNnU2VuZA==\n  type: message\n- attributes:\n  - index: true\n    key: c3BlbmRlcg==\n    value: c3QxcHZ5anpsaHdycGdrbHUwMDQ0YXQ0dDZxaDdtMjNrM2tyMmdzamg=\n  - index: true\n    key: YW1vdW50\n    value: MTAwMDAwMDAwMHdlaQ==\n  type: coin_spent\n- attributes:\n  - index: true\n    key: cmVjZWl2ZXI=\n    value: c3Qxc3F6c2s4bXBsdjUyNDhneDZkZGR6enh3ZXF2ZXc4cnRzdDk2Zng=\n  - index: true\n    key: YW1vdW50\n    value: MTAwMDAwMDAwMHdlaQ==\n  type: coin_received\n- attributes:\n  - index: true\n    key: cmVjaXBpZW50\n    value: c3Qxc3F6c2s4bXBsdjUyNDhneDZkZGR6enh3ZXF2ZXc4cnRzdDk2Zng=\n  - index: true\n    key: c2VuZGVy\n    value: c3QxcHZ5anpsaHdycGdrbHUwMDQ0YXQ0dDZxaDdtMjNrM2tyMmdzamg=\n  - index: true\n    key: YW1vdW50\n    value: MTAwMDAwMDAwMHdlaQ==\n  type: transfer\n- attributes:\n  - index: true\n    key: c2VuZGVy\n    value: c3QxcHZ5anpsaHdycGdrbHUwMDQ0YXQ0dDZxaDdtMjNrM2tyMmdzamg=\n  type: message\n- attributes:\n  - index: true\n    key: bW9kdWxl\n    value: YmFuaw==\n  type: message\ngas_used: \"88709\"\ngas_wanted: \"200000\"\nheight: \"611\"\ninfo: \"\"\nlogs:\n- events:\n  - attributes:\n    - key: receiver\n      value: st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx\n    - key: amount\n      value: 1000000000wei\n    type: coin_received\n  - attributes:\n    - key: spender\n      value: st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\n    - key: amount\n      value: 1000000000wei\n    type: coin_spent\n  - attributes:\n    - key: action\n      value: /cosmos.bank.v1beta1.MsgSend\n    - key: sender\n      value: st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\n    - key: module\n      value: bank\n    type: message\n  - attributes:\n    - key: recipient\n      value: st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx\n    - key: sender\n      value: st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\n    - key: amount\n      value: 1000000000wei\n    type: transfer\n  log: \"\"\n  msg_index: 0\nraw_log: '[{\"events\":[{\"type\":\"coin_received\",\"attributes\":[{\"key\":\"receiver\",\"value\":\"st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx\"},{\"key\":\"amount\",\"value\":\"1000000000wei\"}]},{\"type\":\"coin_spent\",\"attributes\":[{\"key\":\"spender\",\"value\":\"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\"},{\"key\":\"amount\",\"value\":\"1000000000wei\"}]},{\"type\":\"message\",\"attributes\":[{\"key\":\"action\",\"value\":\"/cosmos.bank.v1beta1.MsgSend\"},{\"key\":\"sender\",\"value\":\"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\"},{\"key\":\"module\",\"value\":\"bank\"}]},{\"type\":\"transfer\",\"attributes\":[{\"key\":\"recipient\",\"value\":\"st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx\"},{\"key\":\"sender\",\"value\":\"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\"},{\"key\":\"amount\",\"value\":\"1000000000wei\"}]}]}]'\ntimestamp: \"2023-01-11T01:20:11Z\"\ntx:\n  '@type': /cosmos.tx.v1beta1.Tx\n  auth_info:\n    fee:\n      amount:\n      - amount: \"200000000000000\"\n        denom: wei\n      gas_limit: \"200000\"\n      granter: \"\"\n      payer: \"\"\n    signer_infos:\n    - mode_info:\n        single:\n          mode: SIGN_MODE_DIRECT\n      public_key:\n        '@type': /stratos.crypto.v1.ethsecp256k1.PubKey\n        key: Agkwb1xacHBqeqGBIqRacXgf0qKTnEBPCEtH2vTE01Ke\n      sequence: \"3\"\n  body:\n    extension_options: []\n    memo: \"\"\n    messages:\n    - '@type': /cosmos.bank.v1beta1.MsgSend\n      amount:\n      - amount: \"1000000000\"\n        denom: wei\n      from_address: st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\n      to_address: st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx\n    non_critical_extension_options: []\n    timeout_height: \"0\"\n  signatures:\n  - 7FmgB+sTnP5Kk4q121YyVdJJkdEq3Gioydu8fTP+pxoMC/Tl77uJlCRBanSP7jx1xEjwTxt3znGL9KNQLRAA2QA=\ntxhash: AB0EF3761603145EDC1B4121C91B51001249186E1362E7148C82E7DB12F7BDF0\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stchaind-commands-part-2/#-export","title":"-<code>export</code>","text":"<p>Export state to JSON.</p> <pre><code>Usage:\n  stchaind export [flags]\n\nFlags:\n      --for-zero-height              Export state to start at height zero (perform preproccessing)\n      --height int                   Export state from a particular height (-1 means latest height) (default -1)\n  -h, --help                         help for export\n      --jail-allowed-addrs strings   Comma-separated list of operator addresses of jailed validators to unjail\n</code></pre> <p>Example:</p> <pre><code>stchaind export &gt; dump.json\n</code></pre> <p></p> <p></p>"},{"location":"docs-stratos-chain/stratos-chain-grpc-queries/","title":"Stratos Chain stchaind gRPC queries","text":"<p>Cosmos SDK gRPC definitions have been documented here</p>"},{"location":"docs-stratos-chain/stratos-chain-grpc-queries/#register-module","title":"Register Module","text":""},{"location":"docs-stratos-chain/stratos-chain-grpc-queries/#grpc-gateway","title":"gRPC Gateway","text":"Method Name Request Type Response Type Description ResourceNode QueryResourceNodeRequest fields:{\"network_addr\":string} QueryResourceNodeResponse fields:{\"node\":ResourceNode} Get info of a registered resource node MetaNode QueryMetaNodeRequest fields:{\"network_addr\":string} QueryMetaNodeResponse fields:{\"node\":MetaNode} Get info of a registered meta node Params QueryParamsRequest fields:{} QueryParamsResponse fields:{\"params\":Params} Get params of Register Module DepositByNode QueryDepositByNodeRequest fields:{\"network_addr\":string, query_type:uint32} QueryDepositByNodeResponse fields:{\"deposit_info\":DepositInfo } Get deposit info of a specific node DepositByOwner QueryDepositByOwnerRequest fields:{\"owner_addr\":string} QueryDepositByOwnerResponse fields:{\"deposit_infos\":[]DepositInfo, \"pagination\": cosmos.base.query.v1beta1.PageResponse } Get all deposit info of a specific owner DepositTotal QueryDepositTotalRequest fields:{} QueryDepositTotalResponse fields:{\"resource_nodes_total_deposit\":cosmos.base.v1beta1.Coin, \"meta_nodes_total_deposit\":cosmos.base.v1beta1.Coin, \"total_bonded_deposit\":cosmos.base.v1beta1.Coin, \"total_unbonded_deposit\":cosmos.base.v1beta1.Coin, \"total_unbonding_deposit\":cosmos.base.v1beta1.Coin} Query total deposit state of all registered resource nodes and meta nodes BondedResourceNodeCount QueryBondedResourceNodeCountRequest fields:{} QueryBondedResourceNodeCountResponse fields:{\"number\": uint64} Get params of Register Module BondedMetaNodeCount QueryBondedMetaNodeCountRequest fields:{} QueryBondedMetaNodeCountResponse fields:{\"number\": uint64} Get params of Register Module RemainingOzoneLimit QueryRemainingOzoneLimitRequest fields:{} QueryRemainingOzoneLimitResponse fields:{\"ozone_limit\": string} <p>ResourceNode:</p> Field Type Label network_address string pubkey google.protobuf.Any suspend bool status cosmos.staking.v1beta1.BondStatus tokens string owner_address string description Description creation_time google.protobuf.Timestamp node_type uint32 effective_tokens string beneficiary_address string <p></p> <p>MetaNode:</p> Field Type Label network_address string pubkey google.protobuf.Any suspend bool status cosmos.staking.v1beta1.BondStatus tokens string owner_address string description Description creation_time google.protobuf.Timestamp beneficiary_address string <p></p> <p>Description:</p> Field Type Label moniker string identity string website string security_contact string details string <p></p> <p>Params:</p> Field Type Label bond_denom string unbonding_threashold_time google.protobuf.Duration unbonding_completion_time google.protobuf.Duration max_entries uint32 resource_node_reg_enabled bool resource_node_min_deposit cosmos.base.v1beta1.Coin voting_period google.protobuf.Duration <p></p> <p>DepositInfo:</p> Field Type Label network_address string pubkey google.protobuf.Any suspend bool status cosmos.staking.v1beta1.BondStatus tokens string owner_address string description Description creation_time google.protobuf.Timestamp node_type uint32 bonded_deposit cosmos.base.v1beta1.Coin un_bonding_deposit cosmos.base.v1beta1.Coin un_bonded_deposit cosmos.base.v1beta1.Coin <p></p>"},{"location":"docs-stratos-chain/stratos-chain-grpc-queries/#-list","title":"- List","text":"<p>List all available grpc queries in Register Module</p> <p>Request:</p> <p><pre><code>grpcurl -plaintext 127.0.0.1:9090 list stratos.register.v1.Query\n</code></pre> Response:</p> <pre><code>stratos.register.v1.Query.ResourceNode\nstratos.register.v1.Query.MetaNode\nstratos.register.v1.Query.Params\nstratos.register.v1.Query.DepositByNode\nstratos.register.v1.Query.DepositByOwner\nstratos.register.v1.Query.DepositTotal\nstratos.register.v1.Query.BondedResourceNodeCount\nstratos.register.v1.Query.BondedMetaNodeCount\nstratos.register.v1.Query.RemainingOzoneLimit\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stratos-chain-grpc-queries/#-resourcenode","title":"- ResourceNode","text":"<p>Get info of a registered resource node</p> <p>Request:</p> <pre><code>grpcurl -plaintext -d '{\"network_addr\":\"stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\"}' 127.0.0.1:9090 stratos.register.v1.Query.ResourceNode\n</code></pre> <p>Response:</p> <pre><code>{\n  \"node\": {\n    \"network_address\": \"stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\",\n    \"pubkey\": {\n      \"@type\": \"/cosmos.crypto.ed25519.PubKey\",\n      \"key\": \"2OAeLO0+KrBkSxuFKU1ofJqGb4RtA8GpD8XCZlMYw2A=\"\n    },\n    \"suspend\": true,\n    \"status\": \"BOND_STATUS_BONDED\",\n    \"tokens\": \"1000000000000000000\",\n    \"owner_address\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n    \"description\": {\n      \"moniker\": \"resource-node0\",\n      \"identity\": \"\",\n      \"website\": \"\",\n      \"security_contact\": \"\",\n      \"details\": \"\"\n    },\n    \"creation_time\": \"2024-03-08T19:18:51.591341919Z\",\n    \"node_type\": 4,\n    \"effective_tokens\": \"0\",\n    \"beneficiary_address\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\"\n  }\n}\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stratos-chain-grpc-queries/#-metanode","title":"- MetaNode","text":"<p>Get info of a registered meta node</p> <p>Request:</p> <pre><code>grpcurl -plaintext -d '{\"network_addr\":\"stsds1cw8qhgsxddak8hh8gs7veqmy5ku8f8za6qlq64\"}' 127.0.0.1:9090 stratos.register.v1.Query.MetaNode\n</code></pre> <p>Response:</p> <pre><code>{\n  \"node\": {\n    \"network_address\": \"stsds1cw8qhgsxddak8hh8gs7veqmy5ku8f8za6qlq64\",\n    \"pubkey\": {\n      \"@type\": \"/cosmos.crypto.ed25519.PubKey\",\n      \"key\": \"ltODy8zL5IjJwCutlIexqlBb3GH0+aHZOrpT7f/aKnQ=\"\n    },\n    \"suspend\": false,\n    \"status\": \"BOND_STATUS_BONDED\",\n    \"tokens\": \"100000000000000000000\",\n    \"owner_address\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n    \"description\": {\n      \"moniker\": \"snode://stsds1cw8qhgsxddak8hh8gs7veqmy5ku8f8za6qlq64@127.0.0.1:8888\",\n      \"identity\": \"\",\n      \"website\": \"\",\n      \"security_contact\": \"\",\n      \"details\": \"\"\n    },\n    \"creation_time\": \"0001-01-01T00:00:00Z\",\n    \"beneficiary_address\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\"\n  }\n}\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stratos-chain-grpc-queries/#-params","title":"- Params","text":"<p>Get params of Register Module</p> <p>Request:</p> <pre><code>grpcurl -plaintext 127.0.0.1:9090 stratos.register.v1.Query.Params\n</code></pre> <p>Response:</p> <pre><code>{\n  \"params\": {\n    \"bond_denom\": \"wei\",\n    \"unbonding_threashold_time\": \"15552000s\",\n    \"unbonding_completion_time\": \"1209600s\",\n    \"max_entries\": 16,\n    \"resource_node_reg_enabled\": true,\n    \"resource_node_min_deposit\": {\n      \"denom\": \"wei\",\n      \"amount\": \"1000000000000000000\"\n    },\n    \"voting_period\": \"604800s\"\n  }\n}\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stratos-chain-grpc-queries/#-depositbynode","title":"- DepositByNode","text":"<p>Get deposit info of a specific node</p> <p>Request:</p> <pre><code>grpcurl -plaintext -d '{\"network_addr\":\"stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\",\"query_type\": 0 }' 127.0.0.1:9090 stratos.register.v1.Query.DepositByNode\n</code></pre> <p>Response:</p> <pre><code>{\n  \"deposit_info\": {\n    \"network_address\": \"stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\",\n    \"pubkey\": {\n      \"@type\": \"/cosmos.crypto.ed25519.PubKey\",\n      \"key\": \"2OAeLO0+KrBkSxuFKU1ofJqGb4RtA8GpD8XCZlMYw2A=\"\n    },\n    \"suspend\": true,\n    \"status\": \"BOND_STATUS_BONDED\",\n    \"tokens\": \"1000000000000000000\",\n    \"owner_address\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n    \"description\": {\n      \"moniker\": \"resource-node0\",\n      \"identity\": \"\",\n      \"website\": \"\",\n      \"security_contact\": \"\",\n      \"details\": \"\"\n    },\n    \"creation_time\": \"2024-03-08T19:18:51.591341919Z\",\n    \"node_type\": 4,\n    \"bonded_deposit\": {\n      \"denom\": \"wei\",\n      \"amount\": \"1000000000000000000\"\n    },\n    \"un_bonding_deposit\": {\n      \"denom\": \"wei\",\n      \"amount\": \"0\"\n    },\n    \"un_bonded_deposit\": {\n      \"denom\": \"wei\",\n      \"amount\": \"0\"\n    }\n  }\n}\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stratos-chain-grpc-queries/#-depositbyowner","title":"- DepositByOwner","text":"<p>Get all deposit info of a specific owner</p> <p>Request:</p> <pre><code>grpcurl -plaintext -d '{\"owner_addr\":\"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\", \"pagination\": {\"limit\":20}}' 127.0.0.1:9090 stratos.register.v1.Query.DepositByOwner\n</code></pre> <p>Response:</p> <pre><code>{\n  \"deposit_infos\": [\n    {\n      \"network_address\": \"stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\",\n      \"pubkey\": {\n        \"@type\": \"/cosmos.crypto.ed25519.PubKey\",\n        \"key\": \"2OAeLO0+KrBkSxuFKU1ofJqGb4RtA8GpD8XCZlMYw2A=\"\n      },\n      \"suspend\": true,\n      \"status\": \"BOND_STATUS_BONDED\",\n      \"tokens\": \"1000000000000000000\",\n      \"owner_address\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n      \"description\": {\n        \"moniker\": \"resource-node0\",\n        \"identity\": \"\",\n        \"website\": \"\",\n        \"security_contact\": \"\",\n        \"details\": \"\"\n      },\n      \"creation_time\": \"2024-03-08T19:18:51.591341919Z\",\n      \"node_type\": 4,\n      \"bonded_deposit\": {\n        \"denom\": \"wei\",\n        \"amount\": \"1000000000000000000\"\n      },\n      \"un_bonding_deposit\": {\n        \"denom\": \"wei\",\n        \"amount\": \"0\"\n      },\n      \"un_bonded_deposit\": {\n        \"denom\": \"wei\",\n        \"amount\": \"0\"\n      }\n    },\n    {\n      \"network_address\": \"stsds1cw8qhgsxddak8hh8gs7veqmy5ku8f8za6qlq64\",\n      \"pubkey\": {\n        \"@type\": \"/cosmos.crypto.ed25519.PubKey\",\n        \"key\": \"ltODy8zL5IjJwCutlIexqlBb3GH0+aHZOrpT7f/aKnQ=\"\n      },\n      \"suspend\": false,\n      \"status\": \"BOND_STATUS_BONDED\",\n      \"tokens\": \"100000000000000000000\",\n      \"owner_address\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n      \"description\": {\n        \"moniker\": \"snode://stsds1cw8qhgsxddak8hh8gs7veqmy5ku8f8za6qlq64@127.0.0.1:8888\",\n        \"identity\": \"\",\n        \"website\": \"\",\n        \"security_contact\": \"\",\n        \"details\": \"\"\n      },\n      \"creation_time\": \"0001-01-01T00:00:00Z\",\n      \"node_type\": 0,\n      \"bonded_deposit\": {\n        \"denom\": \"wei\",\n        \"amount\": \"100000000000000000000\"\n      },\n      \"un_bonding_deposit\": {\n        \"denom\": \"wei\",\n        \"amount\": \"0\"\n      },\n      \"un_bonded_deposit\": {\n        \"denom\": \"wei\",\n        \"amount\": \"0\"\n      }\n    }\n  ],\n  \"pagination\": {\n    \"next_key\": null,\n    \"total\": \"2\"\n  }\n}\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stratos-chain-grpc-queries/#-deposittotal","title":"- DepositTotal","text":"<p>Query total deposit state of all registered resource nodes and meta nodes</p> <p>Request:</p> <pre><code> grpcurl -plaintext 127.0.0.1:9090 stratos.register.v1.Query.DepositTotal\n</code></pre> <p>Response:</p> <pre><code>{\n  \"resource_nodes_total_deposit\": {\n    \"denom\": \"wei\",\n    \"amount\": \"1000000000000000000\"\n  },\n  \"meta_nodes_total_deposit\": {\n    \"denom\": \"wei\",\n    \"amount\": \"400000000000000000000\"\n  },\n  \"total_bonded_deposit\": {\n    \"denom\": \"wei\",\n    \"amount\": \"401000000000000000000\"\n  },\n  \"total_unbonded_deposit\": {\n    \"denom\": \"wei\",\n    \"amount\": \"0\"\n  },\n  \"total_unbonding_deposit\": {\n    \"denom\": \"wei\",\n    \"amount\": \"0\"\n  }\n}\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stratos-chain-grpc-queries/#-bondedresourcenodecount","title":"- BondedResourceNodeCount","text":"<p>Queries total number of Bonded ResourceNodes</p> <p>Request:</p> <pre><code>grpcurl -plaintext 127.0.0.1:9090 stratos.register.v1.Query.BondedResourceNodeCount\n</code></pre> <p>Response:</p> <pre><code>{\n  \"number\": \"2\"\n}\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stratos-chain-grpc-queries/#-bondedmetanodecount","title":"- BondedMetaNodeCount","text":"<p>Queries total number of Bonded MetaNodes</p> <p>Request:</p> <pre><code>grpcurl -plaintext 127.0.0.1:9090 stratos.register.v1.Query.BondedMetaNodeCount\n</code></pre> <p>Response:</p> <pre><code>{\n  \"number\": \"4\"\n}\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stratos-chain-grpc-queries/#-remainingozonelimit","title":"- RemainingOzoneLimit","text":"<p>Queries the current remaining ozone limit</p> <p>Request:</p> <pre><code>grpcurl -plaintext 127.0.0.1:9090 stratos.register.v1.Query.RemainingOzoneLimit\n</code></pre> <p>Response:</p> <pre><code>{\n  \"ozone_limit\": \"400000000000000\"\n}\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stratos-chain-grpc-queries/#sds-module","title":"SDS Module","text":""},{"location":"docs-stratos-chain/stratos-chain-grpc-queries/#grpc-gateway_1","title":"gRPC Gateway","text":"Method Name Request Type Response Type Description Fileupload QueryFileUploadRequest fields:{\"file_hash\":string} QueryFileUploadResponse fields:{\"file_info\":FileInfo} Query uploaded file info by hash SimPrepay QuerySimPrepayRequest fields:{\"amount\":string} QuerySimPrepayResponse fields:{\"noz\":string} Simulate prepay to query the noz that can be purchased at the current price NozPrice QueryNozPriceRequest fields:{} QueryNozPriceResponse fields:{\"price\":string} Query the current price of noz NozSupply QueryNozSupplyRequest fields:{} QueryNozSupplyResponse fields:{\"remaining\":string,\"total\":string} Query noz supply Params QueryParamsRequest fields:{} QueryParamsResponse fields:{\"params\":Params} Get params of SDS Module <p>FileInfo:</p> Field Type Label height string reporters bytes uploader string <p>Params:</p> Field Type Label bond_denom string"},{"location":"docs-stratos-chain/stratos-chain-grpc-queries/#-list_1","title":"- List","text":"<p>List all available grpc queries in SDS Module</p> <p>Request:</p> <pre><code> grpcurl -plaintext 127.0.0.1:9090 list stratos.sds.v1.Query\n</code></pre> <p>Response:</p> <pre><code>stratos.sds.v1.Query.Fileupload\nstratos.sds.v1.Query.SimPrepay\nstratos.sds.v1.Query.NozPrice\nstratos.sds.v1.Query.NozSupply\nstratos.sds.v1.Query.Params\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stratos-chain-grpc-queries/#-fileupload","title":"- Fileupload","text":"<p>Query uploaded file info by hash</p> <p>Request:</p> <pre><code> grpcurl -plaintext -d '{\"file_hash\":\"v05ahm51dd62ise3fo7ojqub90p0ql2c3jg37hk8\"}' 127.0.0.1:9090 stratos.sds.v1.Query.Fileupload\n</code></pre> <p>Response:</p> <pre><code>{\n    \"file_info\": {\n        \"height\": \"4109\",\n        \"reporters\": \"DwAAAAAAAAA=\",\n        \"uploader\": \"st18986jyng5vsprmtzkdxla80jrw7qyc6wl73h0u\"\n    }\n}\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stratos-chain-grpc-queries/#-simprepay","title":"- SimPrepay","text":"<p>Simulate prepay to query the noz that can be purchased at the current price</p> <p>Request:</p> <pre><code> grpcurl -plaintext -d '{\"amount\":\"1stos\"}' 127.0.0.1:9090 stratos.sds.v1.Query.SimPrepay\n</code></pre> <p>Response:</p> <pre><code>{\n  \"noz\": \"949522847536\"\n}\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stratos-chain-grpc-queries/#-nozprice","title":"- NozPrice","text":"<p>Query the current price of noz</p> <p>Request:</p> <pre><code> grpcurl -plaintext 127.0.0.1:9090 stratos.sds.v1.Query.NozPrice\n</code></pre> <p>Response:</p> <pre><code>{\n    \"price\": \"1012791644248016784459322\"\n}\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stratos-chain-grpc-queries/#-nozsupply","title":"- NozSupply","text":"<p>Query noz supply</p> <p>Request:</p> <pre><code> grpcurl -plaintext 127.0.0.1:9090 stratos.sds.v1.Query.NozSupply\n</code></pre> <p>Response:</p> <pre><code>{\n    \"remaining\": \"7949398620856330560\",\n    \"total\": \"8000080000000000000\"\n}\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stratos-chain-grpc-queries/#-params_1","title":"- Params","text":"<p>Get params of SDS Module</p> <p>Request:</p> <pre><code> grpcurl -plaintext 127.0.0.1:9090 stratos.sds.v1.Query.Params\n</code></pre> <p>Response:</p> <pre><code>{\n    \"params\": {\n        \"bond_denom\": \"wei\"\n    }\n}\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stratos-chain-grpc-queries/#pot-module","title":"POT Module","text":""},{"location":"docs-stratos-chain/stratos-chain-grpc-queries/#grpc-gateway_2","title":"gRPC Gateway","text":"Method Name Request Type Response Type Description VolumeReport QueryVolumeReportRequest fields:{\"epoch\":int64} QueryVolumeReportResponse fields:{\"report_info\":ReportInfo } Get pot volume report by epoch RewardsByEpoch QueryRewardsByEpochRequest fields:{\"epoch\":int64,\"pagination\":cosmos.base.query.v1beta1.PageRequest} QueryRewardsByEpochResponse fields:{\"rewards\":[]Reward,\"pagination\":cosmos.base.query.v1beta1.PageResponse} Query pot reward by epoch RewardsByWallet QueryRewardsByWalletRequest fields:{\"wallet_address\":string} QueryRewardsByWalletResponse fields:{\"rewards\":RewardByWallet} Get pot reward by beneficiary address RewardsByWalletAndEpoch QueryRewardsByWalletAndEpochRequest fields:{\"wallet_address\":string,\"epoch\":int64,\"pagination\":cosmos.base.query.v1beta1.PageRequest} QueryRewardsByWalletAndEpochResponse fields:{\"rewards\":[]Reward,\"pagination\":cosmos.base.query.v1beta1.PageResponse} Get pot reward by beneficiary address and epoch SlashingByOwner QuerySlashingByOwnerRequest fields:{\"wallet_address\":string} QuerySlashingByOwnerResponse fields:{\"slashing\":string} Get pot slashing by owner Params QueryParamsRequest fields:{} QueryParamsResponse fields:{\"params\":Params} Get params of POT Module TotalMinedToken QueryTotalMinedTokenRequest fields:{} QueryTotalMinedTokenResponse fields:{\"total_mined_token\": cosmos.base.v1beta1.Coin} Get total mined token CirculationSupply QueryCirculationSupplyRequest fields:{} QueryCirculationSupplyResponse fields:{\"circulation_supply\":[]cosmos.base.v1beta1.Coin} Get circulation supply <p>ReportInfo:</p> Field Type Label epoch int64 reference string tx_hash string reporter string <p>Reward:</p> Field Type Label wallet_address string reward_from_mining_pool cosmos.base.v1beta1.Coin repeated reward_from_traffic_pool cosmos.base.v1beta1.Coin repeated <p>RewardByWallet:</p> Field Type Label wallet_address string mature_total_reward cosmos.base.v1beta1.Coin repeated immature_total_reward cosmos.base.v1beta1.Coin repeated <p>Params:</p> Field Type Label bond_denom string reward_denom string mature_epoch int64 mining_reward_params MiningRewardParam repeated community_tax string initial_total_supply cosmos.base.v1beta1.Coin <p>MiningRewardParam:</p> Field Type Label total_mined_valve_start cosmos.base.v1beta1.Coin total_mined_valve_end cosmos.base.v1beta1.Coin mining_reward cosmos.base.v1beta1.Coin block_chain_percentage_in_bp string resource_node_percentage_in_bp string meta_node_percentage_in_bp string"},{"location":"docs-stratos-chain/stratos-chain-grpc-queries/#-list_2","title":"- List","text":"<p>List all available grpc queries in POT Module</p> <p>Request:</p> <pre><code> grpcurl -plaintext 127.0.0.1:9090 list stratos.pot.v1.Query\n</code></pre> <p>Response:</p> <pre><code>stratos.pot.v1.Query.VolumeReport\nstratos.pot.v1.Query.RewardsByEpoch\nstratos.pot.v1.Query.RewardsByWallet\nstratos.pot.v1.Query.RewardsByWalletAndEpoch\nstratos.pot.v1.Query.SlashingByOwner\nstratos.pot.v1.Query.Params\nstratos.pot.v1.Query.TotalMinedToken\nstratos.pot.v1.Query.CirculationSupply\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stratos-chain-grpc-queries/#-volumereport","title":"- VolumeReport","text":"<p>Get pot volume report by epoch</p> <p>Request:</p> <pre><code>grpcurl -plaintext -d '{\"epoch\": 1 }' 127.0.0.1:9090 stratos.pot.v1.Query.VolumeReport\n</code></pre> <p>Response:</p> <pre><code>{\n  \"report_info\": {\n    \"epoch\": \"1\",\n    \"reference\": \"100A1FC0B82DD3B0353B59E90388EEA2B73DEECA872955B414EBC99ECD3E3C1F\",\n    \"tx_hash\": \"7F51147DB44185A1A4DC572EC0C69DEA6E9495DDCDF27CD46CA27935D4B93943\",\n    \"reporter\": \"stsds1cw8qhgsxddak8hh8gs7veqmy5ku8f8za6qlq64\"\n  }\n}\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stratos-chain-grpc-queries/#-rewardsbyepoch","title":"- RewardsByEpoch","text":"<p>Query pot reward by epoch</p> <p>Request:</p> <pre><code>grpcurl -plaintext -d '{\"epoch\": 1}' 127.0.0.1:9090 stratos.pot.v1.Query.RewardsByEpoch\n</code></pre> <p>Response:</p> <pre><code>{\n  \"rewards\": [\n    {\n      \"wallet_address\": \"st1rwnmgk0x2n2wry876dkxq2hhcce8k7kzspppax\",\n      \"reward_from_mining_pool\": [\n        {\n          \"denom\": \"wei\",\n          \"amount\": \"4000000000000000000\"\n        }\n      ],\n      \"reward_from_traffic_pool\": [\n        {\n          \"denom\": \"wei\",\n          \"amount\": \"25740279520266\"\n        }\n      ]\n    },\n    {\n      \"wallet_address\": \"st1k9hfqps9s2tpnfxch2avvevyvtry0zth39gdzc\",\n      \"reward_from_mining_pool\": [\n        {\n          \"denom\": \"wei\",\n          \"amount\": \"4000000000000000000\"\n        }\n      ],\n      \"reward_from_traffic_pool\": [\n        {\n          \"denom\": \"wei\",\n          \"amount\": \"25740279520266\"\n        }\n      ]\n    }\n  ],\n  \"pagination\": {\n    \"next_key\": \"y0JUWCEwpMwgs3XzfSwlHBHU9Xg=\",\n    \"total\": \"0\"\n  }\n}\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stratos-chain-grpc-queries/#-rewardsbywallet","title":"- RewardsByWallet","text":"<p>Get pot reward by beneficiary address</p> <p>Request:</p> <pre><code>grpcurl -plaintext -d '{\"wallet_address\": \"st1rwnmgk0x2n2wry876dkxq2hhcce8k7kzspppax\"} ' 127.0.0.1:9090 stratos.pot.v1.Query.RewardsByWallet\n</code></pre> <p>Response:</p> <pre><code>{\n  \"rewards\": {\n    \"wallet_address\": \"st1rwnmgk0x2n2wry876dkxq2hhcce8k7kzspppax\",\n    \"mature_total_reward\": [],\n    \"immature_total_reward\": [\n      {\n        \"denom\": \"wei\",\n        \"amount\": \"16000257399827064713\"\n      }\n    ]\n  }\n}\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stratos-chain-grpc-queries/#-rewardsbywalletandepoch","title":"- RewardsByWalletAndEpoch","text":"<p>Get pot reward by beneficiary address and epoch</p> <p>Request:</p> <pre><code>grpcurl -plaintext -d '{\"wallet_address\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\", \"epoch\": 2} ' 127.0.0.1:9090 stratos.pot.v1.Query.RewardsByWalletAndEpoch\n</code></pre> <p>Response:</p> <pre><code>{\n  \"rewards\": [\n    {\n      \"wallet_address\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n      \"reward_from_mining_pool\": [\n        {\n          \"denom\": \"wei\",\n          \"amount\": \"52000000000000000000\"\n        }\n      ],\n      \"reward_from_traffic_pool\": [\n        {\n          \"denom\": \"wei\",\n          \"amount\": \"669244695117639\"\n        }\n      ]\n    }\n  ],\n  \"pagination\": {\n    \"next_key\": null,\n    \"total\": \"0\"\n  }\n}\n</code></pre>"},{"location":"docs-stratos-chain/stratos-chain-grpc-queries/#-slashingbyowner","title":"- SlashingByOwner","text":"<p>Get pot slashing by owner</p> <p>Request:</p> <pre><code>grpcurl -plaintext -d '{\"wallet_address\": \"st16uzr20lx072gexwjuvg94hz3t8y73u4085s9sw\"} ' 127.0.0.1:9090 stratos.pot.v1.Query.SlashingByOwner\n</code></pre> <p>Response:</p> <pre><code>{\n \"slashing\": \"0\"\n}\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stratos-chain-grpc-queries/#-params_2","title":"- Params","text":"<p>Get params of POT Module</p> <p>Request:</p> <pre><code> grpcurl -plaintext 127.0.0.1:9090 stratos.pot.v1.Query.Params\n</code></pre> <p>Response:</p> <pre><code>{\n  \"params\": {\n    \"bond_denom\": \"wei\",\n    \"reward_denom\": \"wei\",\n    \"mature_epoch\": \"2016\",\n    \"mining_reward_params\": [\n      {\n        \"total_mined_valve_start\": {\n          \"denom\": \"wei\",\n          \"amount\": \"0\"\n        },\n        \"total_mined_valve_end\": {\n          \"denom\": \"wei\",\n          \"amount\": \"16819200000000000000000000\"\n        },\n        \"mining_reward\": {\n          \"denom\": \"wei\",\n          \"amount\": \"80000000000000000000\"\n        },\n        \"block_chain_percentage_in_bp\": \"2000\",\n        \"resource_node_percentage_in_bp\": \"6000\",\n        \"meta_node_percentage_in_bp\": \"2000\"\n      },\n      {\n        \"total_mined_valve_start\": {\n          \"denom\": \"wei\",\n          \"amount\": \"16819200000000000000000000\"\n        },\n        \"total_mined_valve_end\": {\n          \"denom\": \"wei\",\n          \"amount\": \"25228800000000000000000000\"\n        },\n        \"mining_reward\": {\n          \"denom\": \"wei\",\n          \"amount\": \"40000000000000000000\"\n        },\n        \"block_chain_percentage_in_bp\": \"2000\",\n        \"resource_node_percentage_in_bp\": \"6200\",\n        \"meta_node_percentage_in_bp\": \"1800\"\n      },\n      {\n        \"total_mined_valve_start\": {\n          \"denom\": \"wei\",\n          \"amount\": \"25228800000000000000000000\"\n        },\n        \"total_mined_valve_end\": {\n          \"denom\": \"wei\",\n          \"amount\": \"29433600000000000000000000\"\n        },\n        \"mining_reward\": {\n          \"denom\": \"wei\",\n          \"amount\": \"20000000000000000000\"\n        },\n        \"block_chain_percentage_in_bp\": \"2000\",\n        \"resource_node_percentage_in_bp\": \"6400\",\n        \"meta_node_percentage_in_bp\": \"1600\"\n      },\n      {\n        \"total_mined_valve_start\": {\n          \"denom\": \"wei\",\n          \"amount\": \"29433600000000000000000000\"\n        },\n        \"total_mined_valve_end\": {\n          \"denom\": \"wei\",\n          \"amount\": \"31536000000000000000000000\"\n        },\n        \"mining_reward\": {\n          \"denom\": \"wei\",\n          \"amount\": \"10000000000000000000\"\n        },\n        \"block_chain_percentage_in_bp\": \"2000\",\n        \"resource_node_percentage_in_bp\": \"6600\",\n        \"meta_node_percentage_in_bp\": \"1400\"\n      },\n      {\n        \"total_mined_valve_start\": {\n          \"denom\": \"wei\",\n          \"amount\": \"31536000000000000000000000\"\n        },\n        \"total_mined_valve_end\": {\n          \"denom\": \"wei\",\n          \"amount\": \"32587200000000000000000000\"\n        },\n        \"mining_reward\": {\n          \"denom\": \"wei\",\n          \"amount\": \"5000000000000000000\"\n        },\n        \"block_chain_percentage_in_bp\": \"2000\",\n        \"resource_node_percentage_in_bp\": \"6800\",\n        \"meta_node_percentage_in_bp\": \"1200\"\n      },\n      {\n        \"total_mined_valve_start\": {\n          \"denom\": \"wei\",\n          \"amount\": \"32587200000000000000000000\"\n        },\n        \"total_mined_valve_end\": {\n          \"denom\": \"wei\",\n          \"amount\": \"40000000000000000000000000\"\n        },\n        \"mining_reward\": {\n          \"denom\": \"wei\",\n          \"amount\": \"2500000000000000000\"\n        },\n        \"block_chain_percentage_in_bp\": \"2000\",\n        \"resource_node_percentage_in_bp\": \"7000\",\n        \"meta_node_percentage_in_bp\": \"1000\"\n      }\n    ],\n    \"community_tax\": \"0.020000000000000000\",\n    \"initial_total_supply\": {\n      \"denom\": \"wei\",\n      \"amount\": \"100000000000000000000000000\"\n    }\n  }\n}\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stratos-chain-grpc-queries/#-totalminedtoken","title":"- TotalMinedToken","text":"<p>Get total mined token</p> <p>Request:</p> <pre><code>grpcurl -plaintext 127.0.0.1:9090 stratos.pot.v1.Query.TotalMinedToken\n</code></pre> <p>Response:</p> <pre><code>{\n  \"total_mined_token\": {\n    \"denom\": \"wei\",\n    \"amount\": \"959999999923\"\n  }\n}\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stratos-chain-grpc-queries/#-circulationsupply","title":"- CirculationSupply","text":"<p>Get circulation supply</p> <p>Request:</p> <pre><code>grpcurl -plaintext 127.0.0.1:9090 stratos.pot.v1.Query.CirculationSupply\n</code></pre> <p>Response: <pre><code>{\n  \"circulation_supply\": [\n    {\n      \"denom\": \"wei\",\n      \"amount\": \"441331088285529367702468752\"\n    }\n  ]\n}\n</code></pre></p> <p></p> <p></p>"},{"location":"docs-stratos-chain/stratos-chain-rest-apis/","title":"Stratos Chain stchaind REST APIs","text":""},{"location":"docs-stratos-chain/stratos-chain-rest-apis/#overview","title":"Overview","text":"<p>Generally, all the APIs provided here could be grouped into HTTP GET and POST requests. We classified these APIs into sections based on their modules or their operations for an in-depth analysis.</p> <ul> <li><code>GET</code> Request</li> </ul> <p>The response content type is <code>application/json</code></p> <ul> <li><code>POST</code> Request</li> </ul> <p>The response content type is <code>application/json</code>. If it has a request body, the request content is also in <code>application/json</code> format.</p> <p>A <code>POST</code> request  will return an unsigned transaction, which equals to its equivalent <code>stchaind</code> command with a <code>--generate-only</code> flag.</p>"},{"location":"docs-stratos-chain/stratos-chain-rest-apis/#stratos-chain-rest-apis","title":"Stratos-chain REST APIs","text":"<p>Tip</p> <p>Replace <code>rest.thestratos.org</code> with <code>rest.thestratos.org</code> for Testnet queries.</p>"},{"location":"docs-stratos-chain/stratos-chain-rest-apis/#node-status","title":"Node Status","text":"<code>GET /status</code> \u00a0\u00a0\u00a0\u00a0\u00a0queries information about the connected node  Request Example: <pre><code>https://rpc.thestratos.org/status\n</code></pre> Response Example: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"id\": -1,\n  \"result\": {\n    \"node_info\": {\n      \"protocol_version\": {\n        \"p2p\": \"8\",\n        \"block\": \"11\",\n        \"app\": \"0\"\n      },\n      \"id\": \"173ebeb219ae7e8d53e7882063429213b9176b6f\",\n      \"listen_addr\": \"tcp://0.0.0.0:26656\",\n      \"network\": \"testchain\",\n      \"version\": \"0.37.2\",\n      \"channels\": \"40202122233038606100\",\n      \"moniker\": \"node\",\n      \"other\": {\n        \"tx_index\": \"on\",\n        \"rpc_address\": \"tcp://127.0.0.1:26657\"\n      }\n    },\n    \"sync_info\": {\n      \"latest_block_hash\": \"0F9E487D5536E51A394674DA4238D7A9A6FC5B6914337C85B2246736DCA920C6\",\n      \"latest_app_hash\": \"2163AE296ACA24085E56D9DC422EC530A3DA99925E621DCA9DDDC51FBF70B50F\",\n      \"latest_block_height\": \"1155\",\n      \"latest_block_time\": \"2024-03-07T22:52:06.74704475Z\",\n      \"earliest_block_hash\": \"351DCDB243332806931B7FCD220C442E03A69AD97004CB2078F70ADEA38DB52A\",\n      \"earliest_app_hash\": \"E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855\",\n      \"earliest_block_height\": \"1\",\n      \"earliest_block_time\": \"2024-03-07T14:14:09.179630523Z\",\n      \"catching_up\": false\n    },\n    \"validator_info\": {\n      \"address\": \"05949FEF030908686B36079C8BE958EE412D8744\",\n      \"pub_key\": {\n        \"type\": \"tendermint/PubKeyEd25519\",\n        \"value\": \"yaG6YrluzJfxOgwFuRhlgpOvQAmzBS7kqMVvISN8XWs=\"\n      },\n      \"voting_power\": \"504000000000000\"\n    }\n  }\n}\n</code></pre>"},{"location":"docs-stratos-chain/stratos-chain-rest-apis/#tendermint-rpc","title":"Tendermint RPC","text":"<p>Tendermint APIs, such as query blocks, transactions and validator set</p> <code>GET /block?height={height}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries a block at a specific {height}  Request Example: <pre><code>https://rpc.thestratos.org/block?height=3\n</code></pre> Response Example: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"id\": -1,\n  \"result\": {\n    \"block_id\": {\n      \"hash\": \"0D743AAB873C590EAEE65A82036B0E2719A8C5FB6BCC6AD4BFE5E16A6D2384D9\",\n      \"parts\": {\n        \"total\": 1,\n        \"hash\": \"9AEE29A0BCF4478CB648760024DC1BC62A0CF1E7CD8F518F5A952C6A51A4C519\"\n      }\n    },\n    \"block\": {\n      \"header\": {\n        \"version\": {\n          \"block\": \"11\"\n        },\n        \"chain_id\": \"testchain\",\n        \"height\": \"3\",\n        \"time\": \"2024-03-07T21:15:18.727039882Z\",\n        \"last_block_id\": {\n          \"hash\": \"47380D904092AD1CAB0D6EE05529108E1C16DDA57DA548F92B808826B57BFC2F\",\n          \"parts\": {\n            \"total\": 1,\n            \"hash\": \"5636DB87347A6B6688311A8337BC072B42F6A711A79B03E059669AC18BA369F8\"\n          }\n        },\n        \"last_commit_hash\": \"EE243348801D7A14265326D57A87F5411514DF4488E0F9A0D1CB5EFA4C59302E\",\n        \"data_hash\": \"880D0616234E0498E005E4BE6D14CD2B4B973808CBC5123F6CB94B55F412CE1E\",\n        \"validators_hash\": \"FC72D5166A86C81AFD8405DD7788E9C56531E8AA69A1ADDD1C1F3132D2A665CD\",\n        \"next_validators_hash\": \"FC72D5166A86C81AFD8405DD7788E9C56531E8AA69A1ADDD1C1F3132D2A665CD\",\n        \"consensus_hash\": \"048091BC7DDC283F77BFBF91D73C44DA58C3DF8A9CBC867405D8B7F3DAADA22F\",\n        \"app_hash\": \"2879EC791843B2FA808D7914D8554252F9724A8ADD953806AC5CE48405233B1C\",\n        \"last_results_hash\": \"E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855\",\n        \"evidence_hash\": \"E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855\",\n        \"proposer_address\": \"05949FEF030908686B36079C8BE958EE412D8744\"\n      },\n      \"data\": {\n        \"txs\": [\n          \"CtgCCtUCCiUvY29zbW9zLmdvdi52MWJldGExLk1zZ1N1Ym1pdFByb3Bvc2FsEqsCCv0BCi4vY29zbW9zLnBhcmFtcy52MWJldGExLlBhcmFtZXRlckNoYW5nZVByb3Bvc2FsEsoBChR1cGRhdGUgdm90aW5nIHBhcmFtcxIUdXBkYXRlIHZvdGluZyBwZXJpb2QaLwoDZ292Egx2b3RpbmdwYXJhbXMaGnsidm90aW5nX3BlcmlvZCI6ICI4NjQwMCJ9GmsKA2dvdhINZGVwb3NpdHBhcmFtcxpVeyJtaW5fZGVwb3NpdCI6IFt7ImRlbm9tIjogIndlaSIsImFtb3VudCI6ICIxMDAwMDAwIn1dLCJtYXhfZGVwb3NpdF9wZXJpb2QiOiAiODY0MDAifRopc3QxZWRwOWdrcHB4emp2Y2c5bndoZWg2dHA5cnNnYWZhdGNrZmRsNm0SdwpXCk0KJi9zdHJhdG9zLmNyeXB0by52MS5ldGhzZWNwMjU2azEuUHViS2V5EiMKIQNBlPndlLdbenThBfi5/mQPaDXY4fL0x4Vm+/PEzgiFKxIECgIIARgBEhwKFgoDd2VpEg83MTk0ODYwMDAwMDAwMDAQ/vQrGkFPkIR+nuWxlSCMABNwvragzNLy0REfuAJibSYiA05YfiDwdIYtUhgvZXvD02Kh4YbVSmVIY0IyiesiHP3884EYAA==\"\n        ]\n      },\n      \"evidence\": {\n        \"evidence\": []\n      },\n      \"last_commit\": {\n        \"height\": \"2\",\n        \"round\": 0,\n        \"block_id\": {\n          \"hash\": \"47380D904092AD1CAB0D6EE05529108E1C16DDA57DA548F92B808826B57BFC2F\",\n          \"parts\": {\n            \"total\": 1,\n            \"hash\": \"5636DB87347A6B6688311A8337BC072B42F6A711A79B03E059669AC18BA369F8\"\n          }\n        },\n        \"signatures\": [\n          {\n            \"block_id_flag\": 2,\n            \"validator_address\": \"05949FEF030908686B36079C8BE958EE412D8744\",\n            \"timestamp\": \"2024-03-07T21:15:18.727039882Z\",\n            \"signature\": \"QwMSz37OTLM0nBLnfg2ct7FdjZRyA8nYhi+vFRUK3Wb2boX/OiKN6r/LUxo/JxwCkhsXJWJI/HOnHV+SE6qYDA==\"\n          }\n        ]\n      }\n    }\n  }\n}\n</code></pre> <p></p> <code>GET /validators?height={height}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries validator set at certain {height}  Request Example: <pre><code>https://rpc.thestratos.org/validators?height=800\n</code></pre> Response Example: <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"id\": -1,\n  \"result\": {\n    \"block_height\": \"800\",\n    \"validators\": [\n      {\n        \"address\": \"05949FEF030908686B36079C8BE958EE412D8744\",\n        \"pub_key\": {\n          \"type\": \"tendermint/PubKeyEd25519\",\n          \"value\": \"yaG6YrluzJfxOgwFuRhlgpOvQAmzBS7kqMVvISN8XWs=\"\n        },\n        \"voting_power\": \"504000000000000\",\n        \"proposer_priority\": \"0\"\n      }\n    ],\n    \"count\": \"1\",\n    \"total\": \"1\"\n  }\n}\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stratos-chain-rest-apis/#auth","title":"Auth","text":"<code>GET /cosmos/auth/v1beta1/accounts</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries the account information on blockchain  Request Example: <pre><code>https://rest.thestratos.org/cosmos/auth/v1beta1/accounts\n</code></pre> Response Example: <pre><code>{\n  \"accounts\": [\n    {\n      \"@type\": \"/cosmos.auth.v1beta1.BaseAccount\",\n      \"address\": \"st1rwnmgk0x2n2wry876dkxq2hhcce8k7kzspppax\",\n      \"pub_key\": null,\n      \"account_number\": \"7\",\n      \"sequence\": \"0\"\n    },\n    {\n      \"@type\": \"/cosmos.auth.v1beta1.ModuleAccount\",\n      \"base_account\": {\n        \"address\": \"st1fz67scxv3hjy0nxafuf0c4made74gfcf7myjqg\",\n        \"pub_key\": null,\n        \"account_number\": \"15\",\n        \"sequence\": \"0\"\n      },\n      \"name\": \"meta_node_bonded_pool\",\n      \"permissions\": [\n        \"minter\"\n      ]\n    },\n    {\n      \"@type\": \"/cosmos.auth.v1beta1.ModuleAccount\",\n      \"base_account\": {\n        \"address\": \"st1fl48vsnmsdzcv85q5d2q4z5ajdha8yu3fkaac2\",\n        \"pub_key\": null,\n        \"account_number\": \"11\",\n        \"sequence\": \"0\"\n      },\n      \"name\": \"bonded_tokens_pool\",\n      \"permissions\": [\n        \"burner\",\n        \"staking\"\n      ]\n    },\n    {\n      \"@type\": \"/cosmos.auth.v1beta1.ModuleAccount\",\n      \"base_account\": {\n        \"address\": \"st1tygms3xhhs3yv487phx3dw4a95jn7t7lakpvw7\",\n        \"pub_key\": null,\n        \"account_number\": \"12\",\n        \"sequence\": \"0\"\n      },\n      \"name\": \"not_bonded_tokens_pool\",\n      \"permissions\": [\n        \"burner\",\n        \"staking\"\n      ]\n    },\n    {\n      \"@type\": \"/cosmos.auth.v1beta1.BaseAccount\",\n      \"address\": \"st1vvysda6ylqz2adauqg4djsz4rx6hv6mqv9fepp\",\n      \"pub_key\": null,\n      \"account_number\": \"3\",\n      \"sequence\": \"0\"\n    },\n    {\n      \"@type\": \"/cosmos.auth.v1beta1.ModuleAccount\",\n      \"base_account\": {\n        \"address\": \"st10d07y265gmmuvt4z0w9aw880jnsr700jx08hhw\",\n        \"pub_key\": null,\n        \"account_number\": \"13\",\n        \"sequence\": \"0\"\n      },\n      \"name\": \"gov\",\n      \"permissions\": [\n        \"burner\"\n      ]\n    },\n    {\n      \"@type\": \"/cosmos.auth.v1beta1.BaseAccount\",\n      \"address\": \"st1sqzsk8mplv5248gx6dddzzxweqvew8rtst96fx\",\n      \"pub_key\": null,\n      \"account_number\": \"1\",\n      \"sequence\": \"0\"\n    },\n    {\n      \"@type\": \"/cosmos.auth.v1beta1.ModuleAccount\",\n      \"base_account\": {\n        \"address\": \"st1jv65s3grqf6v6jl3dp4t6c9t9rk99cd8mjswgz\",\n        \"pub_key\": null,\n        \"account_number\": \"10\",\n        \"sequence\": \"0\"\n      },\n      \"name\": \"distribution\",\n      \"permissions\": [\n        \"burner\"\n      ]\n    },\n    {\n      \"@type\": \"/cosmos.auth.v1beta1.BaseAccount\",\n      \"address\": \"st144ykkar9fhl8khs7lwz0s7py9vj4w9adp37kt9\",\n      \"pub_key\": null,\n      \"account_number\": \"2\",\n      \"sequence\": \"0\"\n    },\n    {\n      \"@type\": \"/cosmos.auth.v1beta1.BaseAccount\",\n      \"address\": \"st1k9hfqps9s2tpnfxch2avvevyvtry0zth39gdzc\",\n      \"pub_key\": null,\n      \"account_number\": \"8\",\n      \"sequence\": \"0\"\n    },\n    {\n      \"@type\": \"/cosmos.auth.v1beta1.BaseAccount\",\n      \"address\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n      \"pub_key\": {\n        \"@type\": \"/stratos.crypto.v1.ethsecp256k1.PubKey\",\n        \"key\": \"A0GU+d2Ut1t6dOEF+Ln+ZA9oNdjh8vTHhWb788TOCIUr\"\n      },\n      \"account_number\": \"0\",\n      \"sequence\": \"2\"\n    },\n    {\n      \"@type\": \"/cosmos.auth.v1beta1.BaseAccount\",\n      \"address\": \"st1ewlfmhl8j0p2jesfd2xrqp0qjeh2222gs9uefh\",\n      \"pub_key\": null,\n      \"account_number\": \"6\",\n      \"sequence\": \"0\"\n    },\n    {\n      \"@type\": \"/cosmos.auth.v1beta1.ModuleAccount\",\n      \"base_account\": {\n        \"address\": \"st1m3h30wlvsf8llruxtpukdvsy0km2kum85un2xa\",\n        \"pub_key\": null,\n        \"account_number\": \"14\",\n        \"sequence\": \"0\"\n      },\n      \"name\": \"mint\",\n      \"permissions\": [\n        \"minter\"\n      ]\n    },\n    {\n      \"@type\": \"/cosmos.auth.v1beta1.BaseAccount\",\n      \"address\": \"st1a8ngk4tjvuxneyuvyuy9nvgehkpfa38hm8mp3x\",\n      \"pub_key\": null,\n      \"account_number\": \"5\",\n      \"sequence\": \"0\"\n    },\n    {\n      \"@type\": \"/cosmos.auth.v1beta1.ModuleAccount\",\n      \"base_account\": {\n        \"address\": \"st17xpfvakm2amg962yls6f84z3kell8c5lv5hj2q\",\n        \"pub_key\": null,\n        \"account_number\": \"9\",\n        \"sequence\": \"0\"\n      },\n      \"name\": \"fee_collector\",\n      \"permissions\": []\n    },\n    {\n      \"@type\": \"/cosmos.auth.v1beta1.BaseAccount\",\n      \"address\": \"st172v4u8ysfgaphjs8uyy0svvc6d6tzl6gp07kn4\",\n      \"pub_key\": null,\n      \"account_number\": \"4\",\n      \"sequence\": \"0\"\n    }\n  ],\n  \"pagination\": {\n    \"next_key\": null,\n    \"total\": \"16\"\n  }\n}\n</code></pre> <code>GET /cosmos/auth/v1beta1/accounts/{address}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries the account information on blockchain  Request Example: <pre><code>https://rest.thestratos.org/cosmos/auth/v1beta1/accounts/st1v33vxhmu9kp9yrncfldvt0zg9qlcepc75lyggk\n</code></pre> Response Example: <pre><code>{\n    \"account\": {\n        \"@type\": \"/cosmos.auth.v1beta1.BaseAccount\",\n        \"address\": \"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\",\n        \"pub_key\": {\n            \"@type\": \"/stratos.crypto.v1.ethsecp256k1.PubKey\",\n            \"key\": \"Agkwb1xacHBqeqGBIqRacXgf0qKTnEBPCEtH2vTE01Ke\"\n        },\n        \"account_number\": \"0\",\n        \"sequence\": \"4\"\n    }\n}\n</code></pre> <code>GET /cosmos/auth/v1beta1/params</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries all parameters of Auth module.  Request Example: <pre><code>https://rest.thestratos.org/cosmos/auth/v1beta1/params\n</code></pre> Response Example: <pre><code>{\n    \"params\": {\n        \"max_memo_characters\": \"256\",\n        \"tx_sig_limit\": \"7\",\n        \"tx_size_cost_per_byte\": \"1000\",\n        \"sig_verify_cost_ed25519\": \"59000\",\n        \"sig_verify_cost_secp256k1\": \"100000\"\n    }\n}\n</code></pre>"},{"location":"docs-stratos-chain/stratos-chain-rest-apis/#bank","title":"Bank","text":"<code>GET /cosmos/bank/v1beta1/balances/{address}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries the balance of all coins for a single account  Request Example: <pre><code>https://rest.thestratos.org/cosmos/bank/v1beta1/balances/st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\n</code></pre> Response Example: <pre><code>{\n  \"balances\": [\n    {\n      \"denom\": \"wei\",\n      \"amount\": \"99991399999400000000000000\"\n    }\n  ],\n  \"pagination\": {\n    \"next_key\": null,\n    \"total\": \"1\"\n  }\n}\n</code></pre> <code>GET /cosmos/bank/v1beta1/params</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries the parameters of Bank module.  Request Example: <pre><code>https://rest.thestratos.org/cosmos/bank/v1beta1/params\n</code></pre> Response Example: <pre><code>{\n    \"params\": {\n        \"send_enabled\": [],\n        \"default_send_enabled\": true\n    }\n}\n</code></pre> <code>GET /cosmos/bank/v1beta1/supply</code> \u00a0\u00a0\u00a0\u00a0\u00a0 returns total supply of coins in the chain  Request Example: <pre><code>https://rest.thestratos.org/cosmos/bank/v1beta1/supply\n</code></pre> Response Example: <pre><code>{\n  \"supply\": [\n    {\n      \"denom\": \"wei\",\n      \"amount\": \"100000000000000000000000000\"\n    }\n  ],\n  \"pagination\": {\n    \"next_key\": null,\n    \"total\": \"1\"\n  }\n}\n</code></pre> <code>GET /cosmos/bank/v1beta1/supply/by_denom?denom={denom}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries the supply of a single coin  Request Example: <pre><code>https://rest.thestratos.org/cosmos/bank/v1beta1/supply/by_denom?denom=wei\n</code></pre> Response Example: <pre><code>{\n    \"amount\": {\n        \"denom\": \"wei\",\n        \"amount\": \"21000519539308644119443444\"\n    }\n}\n</code></pre>"},{"location":"docs-stratos-chain/stratos-chain-rest-apis/#distribution","title":"Distribution","text":"<code>GET /cosmos/distribution/v1beta1/community_pool</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries the community pool coins  Request Example: <pre><code>https://rest.thestratos.org/cosmos/distribution/v1beta1/community_pool\n</code></pre> Response Example: <pre><code>{\n    \"pool\": [\n        {\n            \"denom\": \"wei\",\n            \"amount\": \"10529239257213782433.160000000000000000\"\n        }\n    ]\n}\n</code></pre> <code>GET /cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries the total rewards accrued by each validator.  Request Example: <pre><code>https://rest.thestratos.org/cosmos/distribution/v1beta1/delegators/st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh/rewards\n</code></pre> Response Example: <pre><code>{\n    \"rewards\": [\n        {\n            \"validator_address\": \"stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\",\n            \"reward\": [\n                {\n                    \"denom\": \"wei\",\n                    \"amount\": \"470444828785397799437.412000000000000000\"\n                }\n            ]\n        }\n    ],\n    \"total\": [\n        {\n            \"denom\": \"wei\",\n            \"amount\": \"470444828785397799437.412000000000000000\"\n        }\n    ]\n}\n</code></pre> <code>GET /cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards/{validator_address}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries the total rewards accrued by a delegation  Request Example: <pre><code>https://rest.thestratos.org/cosmos/distribution/v1beta1/delegators/st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh/rewards/stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\n</code></pre>  Response Example: <pre><code>{\n    \"rewards\": [\n        {\n            \"denom\": \"wei\",\n            \"amount\": \"513182961214751918939.940000000000000000\"\n        }\n    ]\n}\n</code></pre> <code>GET /cosmos/distribution/v1beta1/delegators/{delegator_address}/validators</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries the validators of a delegator  Request Example: <pre><code>https://rest.thestratos.org/cosmos/distribution/v1beta1/delegators/st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh/validators\n</code></pre>  Response Example: <pre><code>{\n    \"validators\": [\n        \"stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\"\n    ]\n}\n</code></pre> <code>GET /cosmos/distribution/v1beta1/delegators/{delegator_address}/withdraw_address</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries withdraw address of a delegator  Request Example: <pre><code>https://rest.thestratos.org/cosmos/distribution/delegators/st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh/withdraw_address\n</code></pre>  Response Example: <pre><code>{\n  \"withdraw_address\": \"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\"\n}\n</code></pre> <code>GET /cosmos/distribution/v1beta1/validators/{validator_address}/commission</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries accumulated commission for a validator.  Request Example: <pre><code>https://rest.thestratos.org/cosmos/distribution/v1beta1/validators/stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu/commission\n</code></pre> Response Example: <pre><code>{\n    \"commission\": {\n        \"commission\": [\n            {\n                \"denom\": \"wei\",\n                \"amount\": \"61811505831634070383.438000000000000000\"\n            }\n        ]\n    }\n}\n</code></pre> <code>GET /cosmos/distribution/v1beta1/validators/{validatorAddr}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries validator distribution information  Request Example: <pre><code>https://rest.thestratos.org//cosmos/distribution/v1beta1/validators/stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu\n</code></pre> Response Example: <pre><code>{\n  \"operator_address\": \"st1pvyjzlhwrpgklu0044at4t6qh7m23k3kr2gsjh\",\n  \"self_bond_rewards\": [\n    {\n      \"denom\": \"wei\",\n      \"amount\": \"589121578147958674973.028000000000000000\"\n    }\n  ],\n  \"commission\": [\n    {\n      \"denom\": \"wei\",\n      \"amount\": \"65457953127550963885.892000000000000000\"\n    }\n  ]\n}\n</code></pre> <code>GET /cosmos/distribution/v1beta1/validators/{validator_address}/outstanding_rewards</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries outstanding rewards of a validator address  Request Example: <pre><code>https://rest.thestratos.org/cosmos/distribution/v1beta1/validators/stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu/outstanding_rewards\n</code></pre> Response Example: <pre><code>{\n    \"rewards\": {\n        \"rewards\": [\n            {\n                \"denom\": \"wei\",\n                \"amount\": \"664331752904189049948.100000000000000000\"\n            }\n        ]\n    }\n}\n</code></pre> <code>GET /cosmos/distribution/v1beta1/validators/{validator_address}/slashes</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries slash events of a validator  Request Example: <pre><code>https://rest.thestratos.org/cosmos/distribution/v1beta1/validators/stvaloper1pvyjzlhwrpgklu0044at4t6qh7m23k3k5xpswu/slashes\n</code></pre> Response Example: <pre><code>{\n    \"slashes\": [\n    ],\n    \"pagination\": {\n        \"next_key\": null,\n        \"total\": \"0\"\n    }\n}\n</code></pre> <code>GET /cosmos/distribution/v1beta1/params</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries params of the distribution module  Request Example: <pre><code>https://rest.thestratos.org/cosmos/distribution/v1beta1/params\n</code></pre> Response Example: <pre><code>{\n    \"params\": {\n        \"community_tax\": \"0.020000000000000000\",\n        \"base_proposer_reward\": \"0.010000000000000000\",\n        \"bonus_proposer_reward\": \"0.040000000000000000\",\n        \"withdraw_addr_enabled\": true\n    }\n}\n</code></pre>"},{"location":"docs-stratos-chain/stratos-chain-rest-apis/#gov","title":"Gov","text":"<code>GET /cosmos/gov/v1/proposals</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries all proposals information   Request Example: <pre><code>https://rest.thestratos.org/cosmos/gov/v1/proposals\n</code></pre> Response Example: <pre><code>{\n  \"proposals\": [\n    {\n      \"id\": \"1\",\n      \"messages\": [\n        {\n          \"@type\": \"/cosmos.gov.v1.MsgExecLegacyContent\",\n          \"content\": {\n            \"@type\": \"/cosmos.params.v1beta1.ParameterChangeProposal\",\n            \"title\": \"update voting params\",\n            \"description\": \"update voting period\",\n            \"changes\": [\n              {\n                \"subspace\": \"gov\",\n                \"key\": \"votingparams\",\n                \"value\": \"{\\\"voting_period\\\": \\\"86400\\\"}\"\n              },\n              {\n                \"subspace\": \"gov\",\n                \"key\": \"depositparams\",\n                \"value\": \"{\\\"min_deposit\\\": [{\\\"denom\\\": \\\"wei\\\",\\\"amount\\\": \\\"1000000\\\"}],\\\"max_deposit_period\\\": \\\"86400\\\"}\"\n              }\n            ]\n          },\n          \"authority\": \"st10d07y265gmmuvt4z0w9aw880jnsr700jx08hhw\"\n        }\n      ],\n      \"status\": \"PROPOSAL_STATUS_DEPOSIT_PERIOD\",\n      \"final_tally_result\": {\n        \"yes_count\": \"0\",\n        \"abstain_count\": \"0\",\n        \"no_count\": \"0\",\n        \"no_with_veto_count\": \"0\"\n      },\n      \"submit_time\": \"2024-03-07T20:26:22.453900094Z\",\n      \"deposit_end_time\": \"2024-03-09T20:26:22.453900094Z\",\n      \"total_deposit\": [\n        {\n          \"denom\": \"wei\",\n          \"amount\": \"10000000000\"\n        }\n      ],\n      \"voting_start_time\": null,\n      \"voting_end_time\": null,\n      \"metadata\": \"\",\n      \"title\": \"update voting params\",\n      \"summary\": \"update voting period\",\n      \"proposer\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\"\n    }\n  ],\n  \"pagination\": {\n    \"next_key\": null,\n    \"total\": \"1\"\n  }\n}\n</code></pre> <code>GET /cosmos/gov/v1/proposals?{params}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries proposals information with parameters  Parameters: <pre><code>+ voter               voter address\n+ depositor           depositor addressvoter address\n+ proposal_status     status of the proposals\n</code></pre>  Request Example: <pre><code>https://rest.thestratos.org/cosmos/gov/v1/proposals?status=PROPOSAL_STATUS_DEPOSIT_PERIOD\n</code></pre> Response Example: <pre><code>{\n  \"proposals\": [\n    {\n      \"id\": \"1\",\n      \"messages\": [\n        {\n          \"@type\": \"/cosmos.gov.v1.MsgExecLegacyContent\",\n          \"content\": {\n            \"@type\": \"/cosmos.params.v1beta1.ParameterChangeProposal\",\n            \"title\": \"update voting params\",\n            \"description\": \"update voting period\",\n            \"changes\": [\n              {\n                \"subspace\": \"gov\",\n                \"key\": \"votingparams\",\n                \"value\": \"{\\\"voting_period\\\": \\\"86400\\\"}\"\n              },\n              {\n                \"subspace\": \"gov\",\n                \"key\": \"depositparams\",\n                \"value\": \"{\\\"min_deposit\\\": [{\\\"denom\\\": \\\"wei\\\",\\\"amount\\\": \\\"1000000\\\"}],\\\"max_deposit_period\\\": \\\"86400\\\"}\"\n              }\n            ]\n          },\n          \"authority\": \"st10d07y265gmmuvt4z0w9aw880jnsr700jx08hhw\"\n        }\n      ],\n      \"status\": \"PROPOSAL_STATUS_DEPOSIT_PERIOD\",\n      \"final_tally_result\": {\n        \"yes_count\": \"0\",\n        \"abstain_count\": \"0\",\n        \"no_count\": \"0\",\n        \"no_with_veto_count\": \"0\"\n      },\n      \"submit_time\": \"2024-03-07T20:26:22.453900094Z\",\n      \"deposit_end_time\": \"2024-03-09T20:26:22.453900094Z\",\n      \"total_deposit\": [\n        {\n          \"denom\": \"wei\",\n          \"amount\": \"10000000000\"\n        }\n      ],\n      \"voting_start_time\": null,\n      \"voting_end_time\": null,\n      \"metadata\": \"\",\n      \"title\": \"update voting params\",\n      \"summary\": \"update voting period\",\n      \"proposer\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\"\n    }\n  ],\n  \"pagination\": {\n    \"next_key\": null,\n    \"total\": \"1\"\n  }\n}\n</code></pre> <code>GET /cosmos/gov/v1/proposals/{proposal_id}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries proposal details based on ProposalID  Request Example: <pre><code>https://rest.thestratos.org/cosmos/gov/v1/proposals/1\n</code></pre> Response Example: <pre><code>{\n  \"proposal\": {\n    \"id\": \"1\",\n    \"messages\": [\n      {\n        \"@type\": \"/cosmos.gov.v1.MsgExecLegacyContent\",\n        \"content\": {\n          \"@type\": \"/cosmos.params.v1beta1.ParameterChangeProposal\",\n          \"title\": \"update voting params\",\n          \"description\": \"update voting period\",\n          \"changes\": [\n            {\n              \"subspace\": \"gov\",\n              \"key\": \"votingparams\",\n              \"value\": \"{\\\"voting_period\\\": \\\"86400\\\"}\"\n            },\n            {\n              \"subspace\": \"gov\",\n              \"key\": \"depositparams\",\n              \"value\": \"{\\\"min_deposit\\\": [{\\\"denom\\\": \\\"wei\\\",\\\"amount\\\": \\\"1000000\\\"}],\\\"max_deposit_period\\\": \\\"86400\\\"}\"\n            }\n          ]\n        },\n        \"authority\": \"st10d07y265gmmuvt4z0w9aw880jnsr700jx08hhw\"\n      }\n    ],\n    \"status\": \"PROPOSAL_STATUS_DEPOSIT_PERIOD\",\n    \"final_tally_result\": {\n      \"yes_count\": \"0\",\n      \"abstain_count\": \"0\",\n      \"no_count\": \"0\",\n      \"no_with_veto_count\": \"0\"\n    },\n    \"submit_time\": \"2024-03-07T20:26:22.453900094Z\",\n    \"deposit_end_time\": \"2024-03-09T20:26:22.453900094Z\",\n    \"total_deposit\": [\n      {\n        \"denom\": \"wei\",\n        \"amount\": \"10000000000\"\n      }\n    ],\n    \"voting_start_time\": null,\n    \"voting_end_time\": null,\n    \"metadata\": \"\",\n    \"title\": \"update voting params\",\n    \"summary\": \"update voting period\",\n    \"proposer\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\"\n  }\n}\n</code></pre> <code>GET /cosmos/gov/v1/proposals/{proposal_id}/deposits</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries all deposits of a single proposal  Request Example: <pre><code>https://rest.thestratos.org/cosmos/gov/v1/proposals/1/deposits\n</code></pre> Response Example: <pre><code>{\n  \"deposits\": [\n    {\n      \"proposal_id\": \"1\",\n      \"depositor\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n      \"amount\": [\n        {\n          \"denom\": \"wei\",\n          \"amount\": \"10000000000\"\n        }\n      ]\n    }\n  ],\n  \"pagination\": {\n    \"next_key\": null,\n    \"total\": \"1\"\n  }\n}\n</code></pre> <code>GET /cosmos/gov/v1/proposals/{proposal_id}/deposits/{depositor}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries single deposit information based proposalID, depositAddr  Request Example: <pre><code>https://rest.thestratos.org/cosmos/gov/v1/proposals/1/deposits/st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\n</code></pre> Response Example: <pre><code>{\n  \"deposit\": {\n    \"proposal_id\": \"1\",\n    \"depositor\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n    \"amount\": [\n      {\n        \"denom\": \"wei\",\n        \"amount\": \"10000000000\"\n      }\n    ]\n  }\n}\n</code></pre> <code>GET /cosmos/gov/v1/proposals/{proposal_id}/votes</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries votes of a given proposal  Request Example: <pre><code>https://rest.thestratos.org/cosmos/gov/v1/proposals/1/votes\n</code></pre> Response Example: <pre><code>{\n  \"votes\": [\n    {\n      \"proposal_id\": \"1\",\n      \"voter\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n      \"options\": [\n        {\n          \"option\": \"VOTE_OPTION_YES\",\n          \"weight\": \"1.000000000000000000\"\n        }\n      ],\n      \"metadata\": \"\"\n    }\n  ],\n  \"pagination\": {\n    \"next_key\": null,\n    \"total\": \"1\"\n  }\n}\n</code></pre> <code>GET /cosmos/gov/v1/proposals/{proposal_id}/votes/{voter}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries voted information based on proposalID, voterAddr  Request Example: <pre><code>https://rest.thestratos.org/cosmos/gov/v1/proposals/1/votes/st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\n</code></pre> Response Example: <pre><code>{\n  \"vote\": {\n    \"proposal_id\": \"1\",\n    \"voter\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n    \"options\": [\n      {\n        \"option\": \"VOTE_OPTION_YES\",\n        \"weight\": \"1.000000000000000000\"\n      }\n    ],\n    \"metadata\": \"\"\n  }\n}\n</code></pre> <code>GET /cosmos/gov/v1/proposals/{proposal_id}/tally</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries the tally of a proposal vote  Request Example: <pre><code>https://rest.thestratos.org/cosmos/gov/v1/proposals/1/tally\n</code></pre> Response Example: <pre><code>{\n  \"tally\": {\n    \"yes_count\": \"500000000000000000000\",\n    \"abstain_count\": \"0\",\n    \"no_count\": \"0\",\n    \"no_with_veto_count\": \"0\"\n  }\n}\n</code></pre> <code>GET /cosmos/gov/v1/params/{params_type}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries all parameters of the gov module  Request Example:  <pre><code>+ params_type      params_type defines which parameters to query for, can be one of \"voting\", \"tallying\" or \"deposit\".\n</code></pre> <pre><code>https://rest.thestratos.org/cosmos/gov/v1/params/deposit\n</code></pre> Response Example: <pre><code>{\n  \"voting_params\": null,\n  \"deposit_params\": {\n    \"min_deposit\": [\n      {\n        \"denom\": \"wei\",\n        \"amount\": \"10000000\"\n      }\n    ],\n    \"max_deposit_period\": \"172800s\"\n  },\n  \"tally_params\": null,\n  \"params\": {\n    \"min_deposit\": [\n      {\n        \"denom\": \"wei\",\n        \"amount\": \"10000000\"\n      }\n    ],\n    \"max_deposit_period\": \"172800s\",\n    \"voting_period\": \"172800s\",\n    \"quorum\": \"0.334000000000000000\",\n    \"threshold\": \"0.500000000000000000\",\n    \"veto_threshold\": \"0.334000000000000000\",\n    \"min_initial_deposit_ratio\": \"0.000000000000000000\",\n    \"burn_vote_quorum\": false,\n    \"burn_proposal_deposit_prevote\": false,\n    \"burn_vote_veto\": true\n  }\n}\n</code></pre>"},{"location":"docs-stratos-chain/stratos-chain-rest-apis/#mint","title":"Mint","text":"<code>GET /cosmos/mint/v1beta1/params</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries mint module parameters  Request Example: <pre><code>https://rest.thestratos.org/cosmos/mint/v1beta1/params\n</code></pre> Response Example: <pre><code>{\n  \"params\": {\n    \"mint_denom\": \"wei\",\n    \"inflation_rate_change\": \"0.130000000000000000\",\n    \"inflation_max\": \"0.200000000000000000\",\n    \"inflation_min\": \"0.070000000000000000\",\n    \"goal_bonded\": \"0.670000000000000000\",\n    \"blocks_per_year\": \"6311520\"\n  }\n}\n</code></pre> <code>GET /cosmos/mint/v1beta1/inflation</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries current minting inflation value  Request Example: <pre><code>https://rest.thestratos.org/cosmos/mint/v1beta1/inflation\n</code></pre> Response Example: <pre><code>{\n  \"inflation\": \"0.130016465508894587\"\n}\n</code></pre> <code>GET /cosmos/mint/v1beta1/annual_provisions</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries current minting annual provisions value  Request Example: <pre><code>https://rest.thestratos.org/cosmos/mint/v1beta1/annual_provisions\n</code></pre> Response Example: <pre><code>{\n  \"annual_provisions\": \"130019024060848.545708142618272810\"\n}\n</code></pre>"},{"location":"docs-stratos-chain/stratos-chain-rest-apis/#slashing","title":"Slashing","text":"<code>GET /cosmos/slashing/v1beta1/signing_infos</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries signing info of all validators  Request Example: <pre><code>https://rest.thestratos.org/cosmos/slashing/v1beta1/signing_infos\n</code></pre> Response Example: <pre><code>{\n  \"info\": [\n    {\n      \"address\": \"stvalcons1qk2flmcrpyyxs6ekq7wgh62caeqjmp6ymddlvp\",\n      \"start_height\": \"0\",\n      \"index_offset\": \"195\",\n      \"jailed_until\": \"1970-01-01T00:00:00Z\",\n      \"tombstoned\": false,\n      \"missed_blocks_counter\": \"0\"\n    }\n  ],\n  \"pagination\": {\n    \"next_key\": null,\n    \"total\": \"1\"\n  }\n}\n</code></pre> <code>GET /cosmos/slashing/v1beta1/params</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries the current slashing parameters  Request Example: <pre><code>https://rest.thestratos.org/cosmos/slashing/v1beta1/params\n</code></pre> Response Example: <pre><code>{\n  \"params\": {\n    \"signed_blocks_window\": \"100\",\n    \"min_signed_per_window\": \"0.500000000000000000\",\n    \"downtime_jail_duration\": \"600s\",\n    \"slash_fraction_double_sign\": \"0.050000000000000000\",\n    \"slash_fraction_downtime\": \"0.010000000000000000\"\n  }\n}\n</code></pre> <code>GET /cosmos/slashing/v1beta1/signing_infos/{cons_address}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries the signing info of given cons address  Request Example: <pre><code>https://rest.thestratos.org/cosmos/slashing/v1beta1/signing_infos/stvalcons1qk2flmcrpyyxs6ekq7wgh62caeqjmp6ymddlvp\n</code></pre> Response Example: <pre><code>{\n  \"val_signing_info\": {\n    \"address\": \"stvalcons1qk2flmcrpyyxs6ekq7wgh62caeqjmp6ymddlvp\",\n    \"start_height\": \"0\",\n    \"index_offset\": \"198\",\n    \"jailed_until\": \"1970-01-01T00:00:00Z\",\n    \"tombstoned\": false,\n    \"missed_blocks_counter\": \"0\"\n  }\n}\n</code></pre>"},{"location":"docs-stratos-chain/stratos-chain-rest-apis/#staking","title":"Staking","text":"<code>GET /cosmos/staking/v1beta1/validators</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries all validator candidates  Request Example: <pre><code>https://rest.thestratos.org/cosmos/staking/v1beta1/validators\n</code></pre>   |:warning: By default it returns only the bonded validators| |:------------------------------------|  Response Example: <pre><code>{\n  \"validators\": [\n    {\n      \"operator_address\": \"stvaloper1edp9gkppxzjvcg9nwheh6tp9rsgafatcp9ylxs\",\n      \"consensus_pubkey\": {\n        \"@type\": \"/cosmos.crypto.ed25519.PubKey\",\n        \"key\": \"yaG6YrluzJfxOgwFuRhlgpOvQAmzBS7kqMVvISN8XWs=\"\n      },\n      \"jailed\": false,\n      \"status\": \"BOND_STATUS_BONDED\",\n      \"tokens\": \"504000000000000000000\",\n      \"delegator_shares\": \"504000000000000000000.000000000000000000\",\n      \"description\": {\n        \"moniker\": \"node\",\n        \"identity\": \"\",\n        \"website\": \"\",\n        \"security_contact\": \"\",\n        \"details\": \"\"\n      },\n      \"unbonding_height\": \"0\",\n      \"unbonding_time\": \"1970-01-01T00:00:00Z\",\n      \"commission\": {\n        \"commission_rates\": {\n          \"rate\": \"0.100000000000000000\",\n          \"max_rate\": \"0.200000000000000000\",\n          \"max_change_rate\": \"0.010000000000000000\"\n        },\n        \"update_time\": \"2024-03-07T14:14:09.179630523Z\"\n      },\n      \"min_self_delegation\": \"1\",\n      \"unbonding_on_hold_ref_count\": \"0\",\n      \"unbonding_ids\": []\n    }\n  ],\n  \"pagination\": {\n    \"next_key\": null,\n    \"total\": \"1\"\n  }\n}\n</code></pre> <code>GET /cosmos/staking/v1beta1/validators/{validator_addr}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries validator info for given validator address  Request Example: <pre><code>https://rest.thestratos.org/cosmos/staking/v1beta1/validators/stvaloper1edp9gkppxzjvcg9nwheh6tp9rsgafatcp9ylxs\n</code></pre> Response Example: <pre><code>{\n  \"validator\": {\n    \"operator_address\": \"stvaloper1edp9gkppxzjvcg9nwheh6tp9rsgafatcp9ylxs\",\n    \"consensus_pubkey\": {\n      \"@type\": \"/cosmos.crypto.ed25519.PubKey\",\n      \"key\": \"yaG6YrluzJfxOgwFuRhlgpOvQAmzBS7kqMVvISN8XWs=\"\n    },\n    \"jailed\": false,\n    \"status\": \"BOND_STATUS_BONDED\",\n    \"tokens\": \"504000000000000000000\",\n    \"delegator_shares\": \"504000000000000000000.000000000000000000\",\n    \"description\": {\n      \"moniker\": \"node\",\n      \"identity\": \"\",\n      \"website\": \"\",\n      \"security_contact\": \"\",\n      \"details\": \"\"\n    },\n    \"unbonding_height\": \"0\",\n    \"unbonding_time\": \"1970-01-01T00:00:00Z\",\n    \"commission\": {\n      \"commission_rates\": {\n        \"rate\": \"0.100000000000000000\",\n        \"max_rate\": \"0.200000000000000000\",\n        \"max_change_rate\": \"0.010000000000000000\"\n      },\n      \"update_time\": \"2024-03-07T14:14:09.179630523Z\"\n    },\n    \"min_self_delegation\": \"1\",\n    \"unbonding_on_hold_ref_count\": \"0\",\n    \"unbonding_ids\": []\n  }\n}\n</code></pre> <code>GET /cosmos/staking/v1beta1/validators/{validator_addr}/delegations</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries delegate info for given validator  Request Example: <pre><code>https://rest.thestratos.org/cosmos/staking/v1beta1/validators/stvaloper1edp9gkppxzjvcg9nwheh6tp9rsgafatcp9ylxs/delegations\n</code></pre> Response Example: <pre><code>{\n  \"delegation_responses\": [\n    {\n      \"delegation\": {\n        \"delegator_address\": \"st19tgvkz4d4uqv68ahn90vc4mhuh63g2l7u4ad6l\",\n        \"validator_address\": \"stvaloper1edp9gkppxzjvcg9nwheh6tp9rsgafatcp9ylxs\",\n        \"shares\": \"4000000000000000000.000000000000000000\"\n      },\n      \"balance\": {\n        \"denom\": \"wei\",\n        \"amount\": \"4000000000000000000\"\n      }\n    },\n    {\n      \"delegation\": {\n        \"delegator_address\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n        \"validator_address\": \"stvaloper1edp9gkppxzjvcg9nwheh6tp9rsgafatcp9ylxs\",\n        \"shares\": \"500000000000000000000.000000000000000000\"\n      },\n      \"balance\": {\n        \"denom\": \"wei\",\n        \"amount\": \"500000000000000000000\"\n      }\n    }\n  ],\n  \"pagination\": {\n    \"next_key\": null,\n    \"total\": \"2\"\n  }\n}\n</code></pre> <code>GET /cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries delegate info for given validator delegator pair  Request Example: <pre><code>https://rest.thestratos.org/cosmos/staking/v1beta1/validators/stvaloper1edp9gkppxzjvcg9nwheh6tp9rsgafatcp9ylxs/delegations/st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\n</code></pre> Response Example: <pre><code>{\n  \"delegation_response\": {\n    \"delegation\": {\n      \"delegator_address\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n      \"validator_address\": \"stvaloper1edp9gkppxzjvcg9nwheh6tp9rsgafatcp9ylxs\",\n      \"shares\": \"500000000000000000000.000000000000000000\"\n    },\n    \"balance\": {\n      \"denom\": \"wei\",\n      \"amount\": \"500000000000000000000\"\n    }\n  }\n}\n</code></pre> <code>GET /cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}/unbonding_delegation</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries unbonding info for given validator delegator pair  Request Example: <pre><code>https://rest.thestratos.org/cosmos/staking/v1beta1/validators/stvaloper1edp9gkppxzjvcg9nwheh6tp9rsgafatcp9ylxs/delegations/st19tgvkz4d4uqv68ahn90vc4mhuh63g2l7u4ad6l/unbonding_delegation\n</code></pre> Response Example: <pre><code>{\n  \"unbond\": {\n    \"delegator_address\": \"st19tgvkz4d4uqv68ahn90vc4mhuh63g2l7u4ad6l\",\n    \"validator_address\": \"stvaloper1edp9gkppxzjvcg9nwheh6tp9rsgafatcp9ylxs\",\n    \"entries\": [\n      {\n        \"creation_height\": \"595\",\n        \"completion_time\": \"2024-03-28T22:05:03.666256743Z\",\n        \"initial_balance\": \"1000000000000000000\",\n        \"balance\": \"1000000000000000000\",\n        \"unbonding_id\": \"1\",\n        \"unbonding_on_hold_ref_count\": \"0\"\n      }\n    ]\n  }\n}\n</code></pre> <code>GET /cosmos/staking/v1beta1/validators/{validator_addr}/unbonding_delegations</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries unbonding delegations of a validator.  Request Example: <pre><code>https://rest.thestratos.org/cosmos/staking/v1beta1/validators/stvaloper1edp9gkppxzjvcg9nwheh6tp9rsgafatcp9ylxs/unbonding_delegations\n</code></pre> Response Example: <pre><code>{\n  \"unbonding_responses\": [\n    {\n      \"delegator_address\": \"st19tgvkz4d4uqv68ahn90vc4mhuh63g2l7u4ad6l\",\n      \"validator_address\": \"stvaloper1edp9gkppxzjvcg9nwheh6tp9rsgafatcp9ylxs\",\n      \"entries\": [\n        {\n          \"creation_height\": \"595\",\n          \"completion_time\": \"2024-03-28T22:05:03.666256743Z\",\n          \"initial_balance\": \"1000000000000000000\",\n          \"balance\": \"1000000000000000000\",\n          \"unbonding_id\": \"1\",\n          \"unbonding_on_hold_ref_count\": \"0\"\n        }\n      ]\n    }\n  ],\n  \"pagination\": {\n    \"next_key\": null,\n    \"total\": \"1\"\n  }\n}\n</code></pre> <code>GET /cosmos/staking/v1beta1/delegations/{delegator_addr}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries all delegations of a given delegator address  Request Example: <pre><code>https://rest.thestratos.org/cosmos/staking/v1beta1/delegations/st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\n</code></pre> Response Example: <pre><code>{\n  \"delegation_responses\": [\n    {\n      \"delegation\": {\n        \"delegator_address\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n        \"validator_address\": \"stvaloper1edp9gkppxzjvcg9nwheh6tp9rsgafatcp9ylxs\",\n        \"shares\": \"500000000000000000000.000000000000000000\"\n      },\n      \"balance\": {\n        \"denom\": \"wei\",\n        \"amount\": \"500000000000000000000\"\n      }\n    }\n  ],\n  \"pagination\": {\n    \"next_key\": null,\n    \"total\": \"1\"\n  }\n}\n</code></pre> <code>GET /cosmos/staking/v1beta1/delegators/{delegator_addr}/redelegations</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries redelegations of given address.  Request Example: <pre><code>https://rest.thestratos.org/cosmos/staking/v1beta1/delegators/st1fw6tcpku363yz6le7569wzzg84val68e9eayq7/redelegations\n</code></pre> Response Example: <pre><code>{\n    \"redelegation_responses\": [\n        {\n            \"redelegation\": {\n                \"delegator_address\": \"string\",\n                \"validator_src_address\": \"string\",\n                \"validator_dst_address\": \"string\",\n                \"entries\": [\n                    {\n                        \"creation_height\": \"string\",\n                        \"completion_time\": \"2022-07-19T19:56:04.456Z\",\n                        \"initial_balance\": \"string\",\n                        \"shares_dst\": \"string\"\n                    }\n                ]\n            },\n            \"entries\": [\n                {\n                    \"redelegation_entry\": {\n                        \"creation_height\": \"string\",\n                        \"completion_time\": \"2022-07-19T19:56:04.456Z\",\n                        \"initial_balance\": \"string\",\n                        \"shares_dst\": \"string\"\n                    },\n                    \"balance\": \"string\"\n                }\n            ]\n        }\n    ],\n    \"pagination\": {\n        \"next_key\": \"string\",\n        \"total\": \"string\"\n    }\n}\n</code></pre> <code>GET /cosmos/staking/v1beta1/delegators/{delegator_addr}/unbonding_delegations</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries all unbonding delegations of a given delegator address  Request Example: <pre><code>https://rest.thestratos.org/cosmos/staking/v1beta1/delegators/st19tgvkz4d4uqv68ahn90vc4mhuh63g2l7u4ad6l/unbonding_delegations\n</code></pre> Response Example: <pre><code>{\n  \"unbonding_responses\": [\n    {\n      \"delegator_address\": \"st19tgvkz4d4uqv68ahn90vc4mhuh63g2l7u4ad6l\",\n      \"validator_address\": \"stvaloper1edp9gkppxzjvcg9nwheh6tp9rsgafatcp9ylxs\",\n      \"entries\": [\n        {\n          \"creation_height\": \"595\",\n          \"completion_time\": \"2024-03-28T22:05:03.666256743Z\",\n          \"initial_balance\": \"1000000000000000000\",\n          \"balance\": \"1000000000000000000\",\n          \"unbonding_id\": \"1\",\n          \"unbonding_on_hold_ref_count\": \"0\"\n        }\n      ]\n    }\n  ],\n  \"pagination\": {\n    \"next_key\": null,\n    \"total\": \"1\"\n  }\n}\n</code></pre> <code>GET /cosmos/staking/v1beta1/delegators/{delegator_addr}/validators</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries all validators info for given delegator address.  Request Example: <pre><code>https://rest.thestratos.org/cosmos/staking/v1beta1/delegators/st19tgvkz4d4uqv68ahn90vc4mhuh63g2l7u4ad6l/validators\n</code></pre> Response Example: <pre><code>{\n  \"validators\": [\n    {\n      \"operator_address\": \"stvaloper1edp9gkppxzjvcg9nwheh6tp9rsgafatcp9ylxs\",\n      \"consensus_pubkey\": {\n        \"@type\": \"/cosmos.crypto.ed25519.PubKey\",\n        \"key\": \"yaG6YrluzJfxOgwFuRhlgpOvQAmzBS7kqMVvISN8XWs=\"\n      },\n      \"jailed\": false,\n      \"status\": \"BOND_STATUS_BONDED\",\n      \"tokens\": \"504000000000000000000\",\n      \"delegator_shares\": \"504000000000000000000.000000000000000000\",\n      \"description\": {\n        \"moniker\": \"node\",\n        \"identity\": \"\",\n        \"website\": \"\",\n        \"security_contact\": \"\",\n        \"details\": \"\"\n      },\n      \"unbonding_height\": \"0\",\n      \"unbonding_time\": \"1970-01-01T00:00:00Z\",\n      \"commission\": {\n        \"commission_rates\": {\n          \"rate\": \"0.100000000000000000\",\n          \"max_rate\": \"0.200000000000000000\",\n          \"max_change_rate\": \"0.010000000000000000\"\n        },\n        \"update_time\": \"2024-03-07T14:14:09.179630523Z\"\n      },\n      \"min_self_delegation\": \"1\",\n      \"unbonding_on_hold_ref_count\": \"0\",\n      \"unbonding_ids\": []\n    }\n  ],\n  \"pagination\": {\n    \"next_key\": null,\n    \"total\": \"1\"\n  }\n}\n</code></pre> <code>GET /cosmos/staking/v1beta1/delegators/{delegator_addr}/validators/{validator_addr}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries validator info for given delegator validator pair.  Request Example: <pre><code>https://rest.thestratos.org/cosmos/staking/v1beta1/delegators/st19tgvkz4d4uqv68ahn90vc4mhuh63g2l7u4ad6l/validators/stvaloper1edp9gkppxzjvcg9nwheh6tp9rsgafatcp9ylxs\n</code></pre>  Response Example: <pre><code>{\n  \"validator\": {\n    \"operator_address\": \"stvaloper1edp9gkppxzjvcg9nwheh6tp9rsgafatcp9ylxs\",\n    \"consensus_pubkey\": {\n      \"@type\": \"/cosmos.crypto.ed25519.PubKey\",\n      \"key\": \"yaG6YrluzJfxOgwFuRhlgpOvQAmzBS7kqMVvISN8XWs=\"\n    },\n    \"jailed\": false,\n    \"status\": \"BOND_STATUS_BONDED\",\n    \"tokens\": \"504000000000000000000\",\n    \"delegator_shares\": \"504000000000000000000.000000000000000000\",\n    \"description\": {\n      \"moniker\": \"node\",\n      \"identity\": \"\",\n      \"website\": \"\",\n      \"security_contact\": \"\",\n      \"details\": \"\"\n    },\n    \"unbonding_height\": \"0\",\n    \"unbonding_time\": \"1970-01-01T00:00:00Z\",\n    \"commission\": {\n      \"commission_rates\": {\n        \"rate\": \"0.100000000000000000\",\n        \"max_rate\": \"0.200000000000000000\",\n        \"max_change_rate\": \"0.010000000000000000\"\n      },\n      \"update_time\": \"2024-03-07T14:14:09.179630523Z\"\n    },\n    \"min_self_delegation\": \"1\",\n    \"unbonding_on_hold_ref_count\": \"0\",\n    \"unbonding_ids\": []\n  }\n}\n</code></pre> <code>GET /cosmos/staking/v1beta1/pool</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries the current state of the staking pool  Request Example: <pre><code>https://rest.thestratos.org/cosmos/staking/v1beta1/pool\n</code></pre> Response Example: <pre><code>{\n  \"pool\": {\n    \"not_bonded_tokens\": \"1000000000000000000\",\n    \"bonded_tokens\": \"504000000000000000000\"\n  }\n}\n</code></pre> <code>GET /cosmos/staking/v1beta1/params</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries the current staking parameter values  Request Example: <pre><code>https://rest.thestratos.org/cosmos/staking/v1beta1/params\n</code></pre> Response Example: <pre><code>{\n  \"params\": {\n    \"unbonding_time\": \"1814400s\",\n    \"max_validators\": 100,\n    \"max_entries\": 7,\n    \"historical_entries\": 10000,\n    \"bond_denom\": \"wei\",\n    \"min_commission_rate\": \"0.000000000000000000\"\n  }\n}\n</code></pre> <code>GET /cosmos/staking/v1beta1/historical_info/{height}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries the historical info for given height  Request Example: <pre><code>https://rest.thestratos.org/cosmos/staking/v1beta1/historical_info/700\n</code></pre> Response Example: <pre><code>{\n  \"hist\": {\n    \"header\": {\n      \"version\": {\n        \"block\": \"11\",\n        \"app\": \"0\"\n      },\n      \"chain_id\": \"testchain\",\n      \"height\": \"700\",\n      \"time\": \"2024-03-07T22:13:53.403600862Z\",\n      \"last_block_id\": {\n        \"hash\": \"ciQRFn0JV6YMcF5SH505JExie/8o0HHftFNGw06nbvU=\",\n        \"part_set_header\": {\n          \"total\": 1,\n          \"hash\": \"KIlY8gHbKLbl0Yf2bPct/VURG1Fd40Cn4KK28fzzkbU=\"\n        }\n      },\n      \"last_commit_hash\": \"CmoVerksnE+b6CIfEzrPjUdNa0HDkFgZPJ8b2N+ptEI=\",\n      \"data_hash\": \"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\",\n      \"validators_hash\": \"JoO6Nk+7nESoqIzxXZ0RKF+BhgYedjPL5HD5LFKHwaA=\",\n      \"next_validators_hash\": \"JoO6Nk+7nESoqIzxXZ0RKF+BhgYedjPL5HD5LFKHwaA=\",\n      \"consensus_hash\": \"BICRvH3cKD93v7+R1zxE2ljD34qcvIZ0Bdi389qtoi8=\",\n      \"app_hash\": \"Ccf/psHVEHdBnxVSErJ9QF0YAxpZMefD/BeHsJnJzVE=\",\n      \"last_results_hash\": \"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\",\n      \"evidence_hash\": \"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\",\n      \"proposer_address\": \"BZSf7wMJCGhrNgeci+lY7kEth0Q=\"\n    },\n    \"valset\": [\n      {\n        \"operator_address\": \"stvaloper1edp9gkppxzjvcg9nwheh6tp9rsgafatcp9ylxs\",\n        \"consensus_pubkey\": {\n          \"@type\": \"/cosmos.crypto.ed25519.PubKey\",\n          \"key\": \"yaG6YrluzJfxOgwFuRhlgpOvQAmzBS7kqMVvISN8XWs=\"\n        },\n        \"jailed\": false,\n        \"status\": \"BOND_STATUS_BONDED\",\n        \"tokens\": \"504000000000000000000\",\n        \"delegator_shares\": \"504000000000000000000.000000000000000000\",\n        \"description\": {\n          \"moniker\": \"node\",\n          \"identity\": \"\",\n          \"website\": \"\",\n          \"security_contact\": \"\",\n          \"details\": \"\"\n        },\n        \"unbonding_height\": \"0\",\n        \"unbonding_time\": \"1970-01-01T00:00:00Z\",\n        \"commission\": {\n          \"commission_rates\": {\n            \"rate\": \"0.100000000000000000\",\n            \"max_rate\": \"0.200000000000000000\",\n            \"max_change_rate\": \"0.010000000000000000\"\n          },\n          \"update_time\": \"2024-03-07T14:14:09.179630523Z\"\n        },\n        \"min_self_delegation\": \"1\",\n        \"unbonding_on_hold_ref_count\": \"0\",\n        \"unbonding_ids\": []\n      }\n    ]\n  }\n}\n</code></pre>"},{"location":"docs-stratos-chain/stratos-chain-rest-apis/#service","title":"Service","text":"<code>GET /cosmos/base/tendermint/v1beta1/blocks/latest</code> \u00a0\u00a0\u00a0\u00a0\u00a0 returns the latest block  Request Example: <pre><code>https://rest.thestratos.org/cosmos/base/tendermint/v1beta1/blocks/latest\n</code></pre> Response Example: <pre><code>{\n  \"block_id\": {\n    \"hash\": \"lBHIQTVmY69uPYLO2U+6Hc+WnTyxJCOg4KHEdE61cLg=\",\n    \"part_set_header\": {\n      \"total\": 1,\n      \"hash\": \"BI05Rm+Cu9tcyaD6MtcZT/TELH3usNEb06Ow6hAePGg=\"\n    }\n  },\n  \"block\": {\n    \"header\": {\n      \"version\": {\n        \"block\": \"11\",\n        \"app\": \"0\"\n      },\n      \"chain_id\": \"testchain\",\n      \"height\": \"838\",\n      \"time\": \"2024-03-07T22:25:29.761240552Z\",\n      \"last_block_id\": {\n        \"hash\": \"SdSpYG72uqNEMMV1o8ziDFPKt/PM7M00k0bwA3hUmKw=\",\n        \"part_set_header\": {\n          \"total\": 1,\n          \"hash\": \"rAs9rndCQE5yGY5PEDlP9kz6i4HlJ/dcQbRr7BogF6E=\"\n        }\n      },\n      \"last_commit_hash\": \"I11Q6Pn8ElFS6jxf2mbTg4rRUWMU0ref9ZVTodTpUPc=\",\n      \"data_hash\": \"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\",\n      \"validators_hash\": \"JoO6Nk+7nESoqIzxXZ0RKF+BhgYedjPL5HD5LFKHwaA=\",\n      \"next_validators_hash\": \"JoO6Nk+7nESoqIzxXZ0RKF+BhgYedjPL5HD5LFKHwaA=\",\n      \"consensus_hash\": \"BICRvH3cKD93v7+R1zxE2ljD34qcvIZ0Bdi389qtoi8=\",\n      \"app_hash\": \"IGWGjx9a8FbYmkpNQ5z6H/r28ZIIjWx8oTaYS1Myb7s=\",\n      \"last_results_hash\": \"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\",\n      \"evidence_hash\": \"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\",\n      \"proposer_address\": \"BZSf7wMJCGhrNgeci+lY7kEth0Q=\"\n    },\n    \"data\": {\n      \"txs\": []\n    },\n    \"evidence\": {\n      \"evidence\": []\n    },\n    \"last_commit\": {\n      \"height\": \"837\",\n      \"round\": 0,\n      \"block_id\": {\n        \"hash\": \"SdSpYG72uqNEMMV1o8ziDFPKt/PM7M00k0bwA3hUmKw=\",\n        \"part_set_header\": {\n          \"total\": 1,\n          \"hash\": \"rAs9rndCQE5yGY5PEDlP9kz6i4HlJ/dcQbRr7BogF6E=\"\n        }\n      },\n      \"signatures\": [\n        {\n          \"block_id_flag\": \"BLOCK_ID_FLAG_COMMIT\",\n          \"validator_address\": \"BZSf7wMJCGhrNgeci+lY7kEth0Q=\",\n          \"timestamp\": \"2024-03-07T22:25:29.761240552Z\",\n          \"signature\": \"ocwelTOQbyvbAuWUl8D3A3lezTsAKq+Ia/VCUVhHCGa2rE9knzmUV/zXrXtyej5eCGLaHpHRWAdu9pfcPhEUCA==\"\n        }\n      ]\n    }\n  },\n  \"sdk_block\": {\n    \"header\": {\n      \"version\": {\n        \"block\": \"11\",\n        \"app\": \"0\"\n      },\n      \"chain_id\": \"testchain\",\n      \"height\": \"838\",\n      \"time\": \"2024-03-07T22:25:29.761240552Z\",\n      \"last_block_id\": {\n        \"hash\": \"SdSpYG72uqNEMMV1o8ziDFPKt/PM7M00k0bwA3hUmKw=\",\n        \"part_set_header\": {\n          \"total\": 1,\n          \"hash\": \"rAs9rndCQE5yGY5PEDlP9kz6i4HlJ/dcQbRr7BogF6E=\"\n        }\n      },\n      \"last_commit_hash\": \"I11Q6Pn8ElFS6jxf2mbTg4rRUWMU0ref9ZVTodTpUPc=\",\n      \"data_hash\": \"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\",\n      \"validators_hash\": \"JoO6Nk+7nESoqIzxXZ0RKF+BhgYedjPL5HD5LFKHwaA=\",\n      \"next_validators_hash\": \"JoO6Nk+7nESoqIzxXZ0RKF+BhgYedjPL5HD5LFKHwaA=\",\n      \"consensus_hash\": \"BICRvH3cKD93v7+R1zxE2ljD34qcvIZ0Bdi389qtoi8=\",\n      \"app_hash\": \"IGWGjx9a8FbYmkpNQ5z6H/r28ZIIjWx8oTaYS1Myb7s=\",\n      \"last_results_hash\": \"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\",\n      \"evidence_hash\": \"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\",\n      \"proposer_address\": \"stvalcons1qk2flmcrpyyxs6ekq7wgh62caeqjmp6ymddlvp\"\n    },\n    \"data\": {\n      \"txs\": []\n    },\n    \"evidence\": {\n      \"evidence\": []\n    },\n    \"last_commit\": {\n      \"height\": \"837\",\n      \"round\": 0,\n      \"block_id\": {\n        \"hash\": \"SdSpYG72uqNEMMV1o8ziDFPKt/PM7M00k0bwA3hUmKw=\",\n        \"part_set_header\": {\n          \"total\": 1,\n          \"hash\": \"rAs9rndCQE5yGY5PEDlP9kz6i4HlJ/dcQbRr7BogF6E=\"\n        }\n      },\n      \"signatures\": [\n        {\n          \"block_id_flag\": \"BLOCK_ID_FLAG_COMMIT\",\n          \"validator_address\": \"BZSf7wMJCGhrNgeci+lY7kEth0Q=\",\n          \"timestamp\": \"2024-03-07T22:25:29.761240552Z\",\n          \"signature\": \"ocwelTOQbyvbAuWUl8D3A3lezTsAKq+Ia/VCUVhHCGa2rE9knzmUV/zXrXtyej5eCGLaHpHRWAdu9pfcPhEUCA==\"\n        }\n      ]\n    }\n  }\n}\n</code></pre> <code>GET /cosmos/base/tendermint/v1beta1/blocks/{height}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries block for given height  Request Example: <pre><code>https://rest.thestratos.org/cosmos/base/tendermint/v1beta1/blocks/3\n</code></pre>  Response Example: <pre><code>{\n  \"block_id\": {\n    \"hash\": \"DXQ6q4c8WQ6u5lqCA2sOJxmoxftrzGrUv+Xham0jhNk=\",\n    \"part_set_header\": {\n      \"total\": 1,\n      \"hash\": \"mu4poLz0R4y2SHYAJNwbxioM8efNj1GPWpUsalGkxRk=\"\n    }\n  },\n  \"block\": {\n    \"header\": {\n      \"version\": {\n        \"block\": \"11\",\n        \"app\": \"0\"\n      },\n      \"chain_id\": \"testchain\",\n      \"height\": \"3\",\n      \"time\": \"2024-03-07T21:15:18.727039882Z\",\n      \"last_block_id\": {\n        \"hash\": \"RzgNkECSrRyrDW7gVSkQjhwW3aV9pUj5K4CIJrV7/C8=\",\n        \"part_set_header\": {\n          \"total\": 1,\n          \"hash\": \"VjbbhzR6a2aIMRqDN7wHK0L2pxGnmwPgWWaawYujafg=\"\n        }\n      },\n      \"last_commit_hash\": \"7iQzSIAdehQmUybVeof1QRUU30SI4Pmg0cte+kxZMC4=\",\n      \"data_hash\": \"iA0GFiNOBJjgBeS+bRTNK0uXOAjLxRI/bLlLVfQSzh4=\",\n      \"validators_hash\": \"/HLVFmqGyBr9hAXdd4jpxWUx6Kppoa3dHB8xMtKmZc0=\",\n      \"next_validators_hash\": \"/HLVFmqGyBr9hAXdd4jpxWUx6Kppoa3dHB8xMtKmZc0=\",\n      \"consensus_hash\": \"BICRvH3cKD93v7+R1zxE2ljD34qcvIZ0Bdi389qtoi8=\",\n      \"app_hash\": \"KHnseRhDsvqAjXkU2FVCUvlySordlTgGrFzkhAUjOxw=\",\n      \"last_results_hash\": \"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\",\n      \"evidence_hash\": \"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\",\n      \"proposer_address\": \"BZSf7wMJCGhrNgeci+lY7kEth0Q=\"\n    },\n    \"data\": {\n      \"txs\": [\n        \"CtgCCtUCCiUvY29zbW9zLmdvdi52MWJldGExLk1zZ1N1Ym1pdFByb3Bvc2FsEqsCCv0BCi4vY29zbW9zLnBhcmFtcy52MWJldGExLlBhcmFtZXRlckNoYW5nZVByb3Bvc2FsEsoBChR1cGRhdGUgdm90aW5nIHBhcmFtcxIUdXBkYXRlIHZvdGluZyBwZXJpb2QaLwoDZ292Egx2b3RpbmdwYXJhbXMaGnsidm90aW5nX3BlcmlvZCI6ICI4NjQwMCJ9GmsKA2dvdhINZGVwb3NpdHBhcmFtcxpVeyJtaW5fZGVwb3NpdCI6IFt7ImRlbm9tIjogIndlaSIsImFtb3VudCI6ICIxMDAwMDAwIn1dLCJtYXhfZGVwb3NpdF9wZXJpb2QiOiAiODY0MDAifRopc3QxZWRwOWdrcHB4emp2Y2c5bndoZWg2dHA5cnNnYWZhdGNrZmRsNm0SdwpXCk0KJi9zdHJhdG9zLmNyeXB0by52MS5ldGhzZWNwMjU2azEuUHViS2V5EiMKIQNBlPndlLdbenThBfi5/mQPaDXY4fL0x4Vm+/PEzgiFKxIECgIIARgBEhwKFgoDd2VpEg83MTk0ODYwMDAwMDAwMDAQ/vQrGkFPkIR+nuWxlSCMABNwvragzNLy0REfuAJibSYiA05YfiDwdIYtUhgvZXvD02Kh4YbVSmVIY0IyiesiHP3884EYAA==\"\n      ]\n    },\n    \"evidence\": {\n      \"evidence\": []\n    },\n    \"last_commit\": {\n      \"height\": \"2\",\n      \"round\": 0,\n      \"block_id\": {\n        \"hash\": \"RzgNkECSrRyrDW7gVSkQjhwW3aV9pUj5K4CIJrV7/C8=\",\n        \"part_set_header\": {\n          \"total\": 1,\n          \"hash\": \"VjbbhzR6a2aIMRqDN7wHK0L2pxGnmwPgWWaawYujafg=\"\n        }\n      },\n      \"signatures\": [\n        {\n          \"block_id_flag\": \"BLOCK_ID_FLAG_COMMIT\",\n          \"validator_address\": \"BZSf7wMJCGhrNgeci+lY7kEth0Q=\",\n          \"timestamp\": \"2024-03-07T21:15:18.727039882Z\",\n          \"signature\": \"QwMSz37OTLM0nBLnfg2ct7FdjZRyA8nYhi+vFRUK3Wb2boX/OiKN6r/LUxo/JxwCkhsXJWJI/HOnHV+SE6qYDA==\"\n        }\n      ]\n    }\n  },\n  \"sdk_block\": {\n    \"header\": {\n      \"version\": {\n        \"block\": \"11\",\n        \"app\": \"0\"\n      },\n      \"chain_id\": \"testchain\",\n      \"height\": \"3\",\n      \"time\": \"2024-03-07T21:15:18.727039882Z\",\n      \"last_block_id\": {\n        \"hash\": \"RzgNkECSrRyrDW7gVSkQjhwW3aV9pUj5K4CIJrV7/C8=\",\n        \"part_set_header\": {\n          \"total\": 1,\n          \"hash\": \"VjbbhzR6a2aIMRqDN7wHK0L2pxGnmwPgWWaawYujafg=\"\n        }\n      },\n      \"last_commit_hash\": \"7iQzSIAdehQmUybVeof1QRUU30SI4Pmg0cte+kxZMC4=\",\n      \"data_hash\": \"iA0GFiNOBJjgBeS+bRTNK0uXOAjLxRI/bLlLVfQSzh4=\",\n      \"validators_hash\": \"/HLVFmqGyBr9hAXdd4jpxWUx6Kppoa3dHB8xMtKmZc0=\",\n      \"next_validators_hash\": \"/HLVFmqGyBr9hAXdd4jpxWUx6Kppoa3dHB8xMtKmZc0=\",\n      \"consensus_hash\": \"BICRvH3cKD93v7+R1zxE2ljD34qcvIZ0Bdi389qtoi8=\",\n      \"app_hash\": \"KHnseRhDsvqAjXkU2FVCUvlySordlTgGrFzkhAUjOxw=\",\n      \"last_results_hash\": \"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\",\n      \"evidence_hash\": \"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\",\n      \"proposer_address\": \"stvalcons1qk2flmcrpyyxs6ekq7wgh62caeqjmp6ymddlvp\"\n    },\n    \"data\": {\n      \"txs\": [\n        \"CtgCCtUCCiUvY29zbW9zLmdvdi52MWJldGExLk1zZ1N1Ym1pdFByb3Bvc2FsEqsCCv0BCi4vY29zbW9zLnBhcmFtcy52MWJldGExLlBhcmFtZXRlckNoYW5nZVByb3Bvc2FsEsoBChR1cGRhdGUgdm90aW5nIHBhcmFtcxIUdXBkYXRlIHZvdGluZyBwZXJpb2QaLwoDZ292Egx2b3RpbmdwYXJhbXMaGnsidm90aW5nX3BlcmlvZCI6ICI4NjQwMCJ9GmsKA2dvdhINZGVwb3NpdHBhcmFtcxpVeyJtaW5fZGVwb3NpdCI6IFt7ImRlbm9tIjogIndlaSIsImFtb3VudCI6ICIxMDAwMDAwIn1dLCJtYXhfZGVwb3NpdF9wZXJpb2QiOiAiODY0MDAifRopc3QxZWRwOWdrcHB4emp2Y2c5bndoZWg2dHA5cnNnYWZhdGNrZmRsNm0SdwpXCk0KJi9zdHJhdG9zLmNyeXB0by52MS5ldGhzZWNwMjU2azEuUHViS2V5EiMKIQNBlPndlLdbenThBfi5/mQPaDXY4fL0x4Vm+/PEzgiFKxIECgIIARgBEhwKFgoDd2VpEg83MTk0ODYwMDAwMDAwMDAQ/vQrGkFPkIR+nuWxlSCMABNwvragzNLy0REfuAJibSYiA05YfiDwdIYtUhgvZXvD02Kh4YbVSmVIY0IyiesiHP3884EYAA==\"\n      ]\n    },\n    \"evidence\": {\n      \"evidence\": []\n    },\n    \"last_commit\": {\n      \"height\": \"2\",\n      \"round\": 0,\n      \"block_id\": {\n        \"hash\": \"RzgNkECSrRyrDW7gVSkQjhwW3aV9pUj5K4CIJrV7/C8=\",\n        \"part_set_header\": {\n          \"total\": 1,\n          \"hash\": \"VjbbhzR6a2aIMRqDN7wHK0L2pxGnmwPgWWaawYujafg=\"\n        }\n      },\n      \"signatures\": [\n        {\n          \"block_id_flag\": \"BLOCK_ID_FLAG_COMMIT\",\n          \"validator_address\": \"BZSf7wMJCGhrNgeci+lY7kEth0Q=\",\n          \"timestamp\": \"2024-03-07T21:15:18.727039882Z\",\n          \"signature\": \"QwMSz37OTLM0nBLnfg2ct7FdjZRyA8nYhi+vFRUK3Wb2boX/OiKN6r/LUxo/JxwCkhsXJWJI/HOnHV+SE6qYDA==\"\n        }\n      ]\n    }\n  }\n}\n</code></pre> <code>GET /cosmos/base/tendermint/v1beta1/node_info</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries the current node info  Request Example: <pre><code>https://rest.thestratos.org/cosmos/base/tendermint/v1beta1/node_info\n</code></pre>  Response Example: <pre><code>{\n  \"default_node_info\": {\n    \"protocol_version\": {\n      \"p2p\": \"8\",\n      \"block\": \"11\",\n      \"app\": \"0\"\n    },\n    \"default_node_id\": \"173ebeb219ae7e8d53e7882063429213b9176b6f\",\n    \"listen_addr\": \"tcp://0.0.0.0:26656\",\n    \"network\": \"testchain\",\n    \"version\": \"0.37.2\",\n    \"channels\": \"QCAhIiMwOGBhAA==\",\n    \"moniker\": \"node\",\n    \"other\": {\n      \"tx_index\": \"on\",\n      \"rpc_address\": \"tcp://127.0.0.1:26657\"\n    }\n  },\n  \"application_version\": {\n    \"name\": \"stchain\",\n    \"app_name\": \"stchaind\",\n    \"version\": \"v0.12.0\",\n    \"git_commit\": \"\",\n    \"build_tags\": \"\",\n    \"go_version\": \"go version go1.21.7 linux/amd64\",\n    \"build_deps\": [\n      {\n        \"path\": \"cloud.google.com/go\",\n        \"version\": \"v0.110.8\",\n        \"sum\": \"h1:tyNdfIxjzaWctIiLYOTalaLKZ17SI44SKFW26QbOhME=\"\n      },\n      {\n        \"path\": \"cloud.google.com/go/compute/metadata\",\n        \"version\": \"v0.2.3\",\n        \"sum\": \"h1:mg4jlk7mCAj6xXp9UJ4fjI9VUI5rubuGBW5aJ7UnBMY=\"\n      },\n      {\n        \"path\": \"cloud.google.com/go/iam\",\n        \"version\": \"v1.1.2\",\n        \"sum\": \"h1:gacbrBdWcoVmGLozRuStX45YKvJtzIjJdAolzUs1sm4=\"\n      },\n      {\n        \"path\": \"cloud.google.com/go/storage\",\n        \"version\": \"v1.30.1\",\n        \"sum\": \"h1:uOdMxAs8HExqBlnLtnQyP0YkvbiDpdGShGKtx6U/oNM=\"\n      },\n      {\n        \"path\": \"cosmossdk.io/api\",\n        \"version\": \"v0.3.1\",\n        \"sum\": \"h1:NNiOclKRR0AOlO4KIqeaG6PS6kswOMhHD0ir0SscNXE=\"\n      },\n      {\n        \"path\": \"cosmossdk.io/core\",\n        \"version\": \"v0.5.1\",\n        \"sum\": \"h1:vQVtFrIYOQJDV3f7rw4pjjVqc1id4+mE0L9hHP66pyI=\"\n      },\n      {\n        \"path\": \"cosmossdk.io/depinject\",\n        \"version\": \"v1.0.0-alpha.4\",\n        \"sum\": \"h1:PLNp8ZYAMPTUKyG9IK2hsbciDWqna2z1Wsl98okJopc=\"\n      },\n      {\n        \"path\": \"cosmossdk.io/errors\",\n        \"version\": \"v1.0.0\",\n        \"sum\": \"h1:nxF07lmlBbB8NKQhtJ+sJm6ef5uV1XkvPXG2bUntb04=\"\n      },\n      {\n        \"path\": \"cosmossdk.io/log\",\n        \"version\": \"v1.2.1\",\n        \"sum\": \"h1:Xc1GgTCicniwmMiKwDxUjO4eLhPxoVdI9vtMW8Ti/uk=\"\n      },\n      {\n        \"path\": \"cosmossdk.io/math\",\n        \"version\": \"v1.2.0\",\n        \"sum\": \"h1:8gudhTkkD3NxOP2YyyJIYYmt6dQ55ZfJkDOaxXpy7Ig=\"\n      },\n      {\n        \"path\": \"cosmossdk.io/simapp\",\n        \"version\": \"v0.0.0-20230828070859-c9144f02dda8\",\n        \"sum\": \"h1:xQBu6b8LinrtmUkpYhCfnz9/aF1iW0BxHp7D71Z4CyI=\"\n      },\n      {\n        \"path\": \"cosmossdk.io/tools/rosetta\",\n        \"version\": \"v0.2.1\",\n        \"sum\": \"h1:ddOMatOH+pbxWbrGJKRAawdBkPYLfKXutK9IETnjYxw=\"\n      },\n      {\n        \"path\": \"filippo.io/edwards25519\",\n        \"version\": \"v1.0.0\",\n        \"sum\": \"h1:0wAIcmJUqRdI8IJ/3eGi5/HwXZWPujYXXlkrQogz0Ek=\"\n      },\n      {\n        \"path\": \"github.com/99designs/keyring\",\n        \"version\": \"v1.2.1\",\n        \"sum\": \"\"\n      },\n      {\n        \"path\": \"github.com/ChainSafe/go-schnorrkel\",\n        \"version\": \"v0.0.0-20200405005733-88cbf1b4c40d\",\n        \"sum\": \"h1:nalkkPQcITbvhmL4+C4cKA87NW0tfm3Kl9VXRoPywFg=\"\n      },\n      {\n        \"path\": \"github.com/Nik-U/pbc\",\n        \"version\": \"v0.0.0-20181205041846-3e516ca0c5d6\",\n        \"sum\": \"h1:GU/vL5sj0IgGYEOIIAJ1HDI9dgqT0gJXkhXINri7Otc=\"\n      },\n      {\n        \"path\": \"github.com/VictoriaMetrics/fastcache\",\n        \"version\": \"v1.6.0\",\n        \"sum\": \"h1:C/3Oi3EiBCqufydp1neRZkqcwmEiuRT9c3fqvvgKm5o=\"\n      },\n      {\n        \"path\": \"github.com/armon/go-metrics\",\n        \"version\": \"v0.4.1\",\n        \"sum\": \"h1:hR91U9KYmb6bLBYLQjyM+3j+rcd/UhE+G78SFnF8gJA=\"\n      },\n      {\n        \"path\": \"github.com/aws/aws-sdk-go\",\n        \"version\": \"v1.44.203\",\n        \"sum\": \"h1:pcsP805b9acL3wUqa4JR2vg1k2wnItkDYNvfmcy6F+U=\"\n      },\n      {\n        \"path\": \"github.com/beorn7/perks\",\n        \"version\": \"v1.0.1\",\n        \"sum\": \"h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=\"\n      },\n      {\n        \"path\": \"github.com/bgentry/go-netrc\",\n        \"version\": \"v0.0.0-20140422174119-9fd32a8b3d3d\",\n        \"sum\": \"h1:xDfNPAt8lFiC1UJrqV3uuy861HCTo708pDMbjHHdCas=\"\n      },\n      {\n        \"path\": \"github.com/bgentry/speakeasy\",\n        \"version\": \"v0.1.1-0.20220910012023-760eaf8b6816\",\n        \"sum\": \"h1:41iFGWnSlI2gVpmOtVTJZNodLdLQLn/KsJqFvXwnd/s=\"\n      },\n      {\n        \"path\": \"github.com/btcsuite/btcd\",\n        \"version\": \"v0.23.4\",\n        \"sum\": \"h1:IzV6qqkfwbItOS/sg/aDfPDsjPP8twrCOE2R93hxMlQ=\"\n      },\n      {\n        \"path\": \"github.com/btcsuite/btcd/btcec/v2\",\n        \"version\": \"v2.3.2\",\n        \"sum\": \"h1:5n0X6hX0Zk+6omWcihdYvdAlGf2DfasC0GMf7DClJ3U=\"\n      },\n      {\n        \"path\": \"github.com/btcsuite/btcd/btcutil\",\n        \"version\": \"v1.1.2\",\n        \"sum\": \"h1:XLMbX8JQEiwMcYft2EGi8zPUkoa0abKIU6/BJSRsjzQ=\"\n      },\n      {\n        \"path\": \"github.com/btcsuite/btcd/chaincfg/chainhash\",\n        \"version\": \"v1.0.1\",\n        \"sum\": \"h1:q0rUy8C/TYNBQS1+CGKw68tLOFYSNEs0TFnxxnS9+4U=\"\n      },\n      {\n        \"path\": \"github.com/cenkalti/backoff/v4\",\n        \"version\": \"v4.1.3\",\n        \"sum\": \"h1:cFAlzYUlVYDysBEH2T5hyJZMh3+5+WCBvSnK6Q8UtC4=\"\n      },\n      {\n        \"path\": \"github.com/cespare/xxhash/v2\",\n        \"version\": \"v2.2.0\",\n        \"sum\": \"h1:DC2CZ1Ep5Y4k3ZQ899DldepgrayRUGE6BBZ/cd9Cj44=\"\n      },\n      {\n        \"path\": \"github.com/chzyer/readline\",\n        \"version\": \"v1.5.1\",\n        \"sum\": \"h1:upd/6fQk4src78LMRzh5vItIt361/o4uq553V8B5sGI=\"\n      },\n      {\n        \"path\": \"github.com/cockroachdb/apd/v2\",\n        \"version\": \"v2.0.2\",\n        \"sum\": \"h1:weh8u7Cneje73dDh+2tEVLUvyBc89iwepWCD8b8034E=\"\n      },\n      {\n        \"path\": \"github.com/cockroachdb/errors\",\n        \"version\": \"v1.10.0\",\n        \"sum\": \"h1:lfxS8zZz1+OjtV4MtNWgboi/W5tyLEB6VQZBXN+0VUU=\"\n      },\n      {\n        \"path\": \"github.com/cockroachdb/logtags\",\n        \"version\": \"v0.0.0-20230118201751-21c54148d20b\",\n        \"sum\": \"h1:r6VH0faHjZeQy818SGhaone5OnYfxFR/+AzdY3sf5aE=\"\n      },\n      {\n        \"path\": \"github.com/cockroachdb/redact\",\n        \"version\": \"v1.1.5\",\n        \"sum\": \"h1:u1PMllDkdFfPWaNGMyLD1+so+aq3uUItthCFqzwPJ30=\"\n      },\n      {\n        \"path\": \"github.com/coinbase/rosetta-sdk-go/types\",\n        \"version\": \"v1.0.0\",\n        \"sum\": \"h1:jpVIwLcPoOeCR6o1tU+Xv7r5bMONNbHU7MuEHboiFuA=\"\n      },\n      {\n        \"path\": \"github.com/cometbft/cometbft\",\n        \"version\": \"v0.37.2\",\n        \"sum\": \"\"\n      },\n      {\n        \"path\": \"github.com/cometbft/cometbft-db\",\n        \"version\": \"v0.8.0\",\n        \"sum\": \"h1:vUMDaH3ApkX8m0KZvOFFy9b5DZHBAjsnEuo9AKVZpjo=\"\n      },\n      {\n        \"path\": \"github.com/confio/ics23/go\",\n        \"version\": \"v0.9.0\",\n        \"sum\": \"h1:cWs+wdbS2KRPZezoaaj+qBleXgUk5WOQFMP3CQFGTr4=\"\n      },\n      {\n        \"path\": \"github.com/cosmos/btcutil\",\n        \"version\": \"v1.0.5\",\n        \"sum\": \"h1:t+ZFcX77LpKtDBhjucvnOH8C2l2ioGsBNEQ3jef8xFk=\"\n      },\n      {\n        \"path\": \"github.com/cosmos/cosmos-proto\",\n        \"version\": \"v1.0.0-beta.2\",\n        \"sum\": \"h1:X3OKvWgK9Gsejo0F1qs5l8Qn6xJV/AzgIWR2wZ8Nua8=\"\n      },\n      {\n        \"path\": \"github.com/cosmos/cosmos-sdk\",\n        \"version\": \"v0.47.5\",\n        \"sum\": \"\"\n      },\n      {\n        \"path\": \"github.com/cosmos/go-bip39\",\n        \"version\": \"v1.0.0\",\n        \"sum\": \"h1:pcomnQdrdH22njcAatO0yWojsUnCO3y2tNoV1cb6hHY=\"\n      },\n      {\n        \"path\": \"github.com/cosmos/gogogateway\",\n        \"version\": \"v1.2.0\",\n        \"sum\": \"h1:Ae/OivNhp8DqBi/sh2A8a1D0y638GpL3tkmLQAiKxTE=\"\n      },\n      {\n        \"path\": \"github.com/cosmos/gogoproto\",\n        \"version\": \"v1.4.10\",\n        \"sum\": \"h1:QH/yT8X+c0F4ZDacDv3z+xE3WU1P1Z3wQoLMBRJoKuI=\"\n      },\n      {\n        \"path\": \"github.com/cosmos/iavl\",\n        \"version\": \"v0.20.0\",\n        \"sum\": \"h1:fTVznVlepH0KK8NyKq8w+U7c2L6jofa27aFX6YGlm38=\"\n      },\n      {\n        \"path\": \"github.com/cosmos/ibc-go/v7\",\n        \"version\": \"v7.3.1\",\n        \"sum\": \"h1:bil1IjnHdyWDASFYKfwdRiNtFP6WK3osW7QFEAgU4I8=\"\n      },\n      {\n        \"path\": \"github.com/cosmos/ics23/go\",\n        \"version\": \"v0.10.0\",\n        \"sum\": \"h1:iXqLLgp2Lp+EdpIuwXTYIQU+AiHj9mOC2X9ab++bZDM=\"\n      },\n      {\n        \"path\": \"github.com/cosmos/rosetta-sdk-go\",\n        \"version\": \"v0.10.0\",\n        \"sum\": \"h1:E5RhTruuoA7KTIXUcMicL76cffyeoyvNybzUGSKFTcM=\"\n      },\n      {\n        \"path\": \"github.com/cpuguy83/go-md2man/v2\",\n        \"version\": \"v2.0.2\",\n        \"sum\": \"h1:p1EgwI/C7NhT0JmVkwCD2ZBK8j4aeHQX2pMHHBfMQ6w=\"\n      },\n      {\n        \"path\": \"github.com/creachadair/taskgroup\",\n        \"version\": \"v0.4.2\",\n        \"sum\": \"h1:jsBLdAJE42asreGss2xZGZ8fJra7WtwnHWeJFxv2Li8=\"\n      },\n      {\n        \"path\": \"github.com/davecgh/go-spew\",\n        \"version\": \"v1.1.1\",\n        \"sum\": \"h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\"\n      },\n      {\n        \"path\": \"github.com/deckarep/golang-set\",\n        \"version\": \"v1.8.0\",\n        \"sum\": \"h1:sk9/l/KqpunDwP7pSjUg0keiOOLEnOBHzykLrsPppp4=\"\n      },\n      {\n        \"path\": \"github.com/decred/dcrd/dcrec/secp256k1/v4\",\n        \"version\": \"v4.1.0\",\n        \"sum\": \"h1:HbphB4TFFXpv7MNrT52FGrrgVXF1owhMVTHFZIlnvd4=\"\n      },\n      {\n        \"path\": \"github.com/desertbit/timer\",\n        \"version\": \"v0.0.0-20180107155436-c41aec40b27f\",\n        \"sum\": \"h1:U5y3Y5UE0w7amNe7Z5G/twsBW0KEalRQXZzf8ufSh9I=\"\n      },\n      {\n        \"path\": \"github.com/dlclark/regexp2\",\n        \"version\": \"v1.4.1-0.20201116162257-a2a8dda75c91\",\n        \"sum\": \"h1:Izz0+t1Z5nI16/II7vuEo/nHjodOg0p7+OiDpjX5t1E=\"\n      },\n      {\n        \"path\": \"github.com/dop251/goja\",\n        \"version\": \"v0.0.0-20220405120441-9037c2b61cbf\",\n        \"sum\": \"h1:Yt+4K30SdjOkRoRRm3vYNQgR+/ZIy0RmeUDZo7Y8zeQ=\"\n      },\n      {\n        \"path\": \"github.com/dvsekhvalnov/jose2go\",\n        \"version\": \"v1.5.0\",\n        \"sum\": \"h1:3j8ya4Z4kMCwT5nXIKFSV84YS+HdqSSO0VsTQxaLAeM=\"\n      },\n      {\n        \"path\": \"github.com/edsrzf/mmap-go\",\n        \"version\": \"v1.0.0\",\n        \"sum\": \"h1:CEBF7HpRnUCSJgGUb5h1Gm7e3VkmVDrR8lvWVLtrOFw=\"\n      },\n      {\n        \"path\": \"github.com/ethereum/go-ethereum\",\n        \"version\": \"v1.10.26\",\n        \"sum\": \"h1:i/7d9RBBwiXCEuyduBQzJw/mKmnvzsN14jqBmytw72s=\"\n      },\n      {\n        \"path\": \"github.com/felixge/httpsnoop\",\n        \"version\": \"v1.0.2\",\n        \"sum\": \"h1:+nS9g82KMXccJ/wp0zyRW9ZBHFETmMGtkk+2CTTrW4o=\"\n      },\n      {\n        \"path\": \"github.com/fjl/memsize\",\n        \"version\": \"v0.0.0-20190710130421-bcb5799ab5e5\",\n        \"sum\": \"h1:FtmdgXiUlNeRsoNMFlKLDt+S+6hbjVMEW6RGQ7aUf7c=\"\n      },\n      {\n        \"path\": \"github.com/fsnotify/fsnotify\",\n        \"version\": \"v1.6.0\",\n        \"sum\": \"h1:n+5WquG0fcWoWp6xPWfHdbskMCQaFnG6PfBrh1Ky4HY=\"\n      },\n      {\n        \"path\": \"github.com/getsentry/sentry-go\",\n        \"version\": \"v0.23.0\",\n        \"sum\": \"h1:dn+QRCeJv4pPt9OjVXiMcGIBIefaTJPw/h0bZWO05nE=\"\n      },\n      {\n        \"path\": \"github.com/go-kit/kit\",\n        \"version\": \"v0.12.0\",\n        \"sum\": \"h1:e4o3o3IsBfAKQh5Qbbiqyfu97Ku7jrO/JbohvztANh4=\"\n      },\n      {\n        \"path\": \"github.com/go-kit/log\",\n        \"version\": \"v0.2.1\",\n        \"sum\": \"h1:MRVx0/zhvdseW+Gza6N9rVzU/IVzaeE1SFI4raAhmBU=\"\n      },\n      {\n        \"path\": \"github.com/go-logfmt/logfmt\",\n        \"version\": \"v0.6.0\",\n        \"sum\": \"h1:wGYYu3uicYdqXVgoYbvnkrPVXkuLM1p1ifugDMEdRi4=\"\n      },\n      {\n        \"path\": \"github.com/go-sourcemap/sourcemap\",\n        \"version\": \"v2.1.3+incompatible\",\n        \"sum\": \"h1:W1iEw64niKVGogNgBN3ePyLFfuisuzeidWPMPWmECqU=\"\n      },\n      {\n        \"path\": \"github.com/go-stack/stack\",\n        \"version\": \"v1.8.0\",\n        \"sum\": \"h1:5SgMzNM5HxrEjV0ww2lTmX6E2Izsfxas4+YHWRs3Lsk=\"\n      },\n      {\n        \"path\": \"github.com/godbus/dbus\",\n        \"version\": \"v0.0.0-20190726142602-4481cbc300e2\",\n        \"sum\": \"h1:ZpnhV/YsD2/4cESfV5+Hoeu/iUR3ruzNvZ+yQfO03a0=\"\n      },\n      {\n        \"path\": \"github.com/gogo/googleapis\",\n        \"version\": \"v1.4.1\",\n        \"sum\": \"h1:1Yx4Myt7BxzvUr5ldGSbwYiZG6t9wGBZ+8/fX3Wvtq0=\"\n      },\n      {\n        \"path\": \"github.com/gogo/protobuf\",\n        \"version\": \"v1.3.2\",\n        \"sum\": \"h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\"\n      },\n      {\n        \"path\": \"github.com/golang-jwt/jwt/v4\",\n        \"version\": \"v4.3.0\",\n        \"sum\": \"h1:kHL1vqdqWNfATmA0FNMdmZNMyZI1U6O31X4rlIPoBog=\"\n      },\n      {\n        \"path\": \"github.com/golang/groupcache\",\n        \"version\": \"v0.0.0-20210331224755-41bb18bfe9da\",\n        \"sum\": \"h1:oI5xCqsCo564l8iNU+DwB5epxmsaqB+rhGL0m5jtYqE=\"\n      },\n      {\n        \"path\": \"github.com/golang/mock\",\n        \"version\": \"v1.6.0\",\n        \"sum\": \"h1:ErTB+efbowRARo13NNdxyJji2egdxLGQhRaY+DUumQc=\"\n      },\n      {\n        \"path\": \"github.com/golang/protobuf\",\n        \"version\": \"v1.5.3\",\n        \"sum\": \"h1:KhyjKVUg7Usr/dYsdSqoFveMYd5ko72D+zANwlG1mmg=\"\n      },\n      {\n        \"path\": \"github.com/golang/snappy\",\n        \"version\": \"v0.0.4\",\n        \"sum\": \"h1:yAGX7huGHXlcLOEtBnF4w7FQwA26wojNCwOYAEhLjQM=\"\n      },\n      {\n        \"path\": \"github.com/google/btree\",\n        \"version\": \"v1.1.2\",\n        \"sum\": \"h1:xf4v41cLI2Z6FxbKm+8Bu+m8ifhj15JuZ9sa0jZCMUU=\"\n      },\n      {\n        \"path\": \"github.com/google/go-cmp\",\n        \"version\": \"v0.5.9\",\n        \"sum\": \"h1:O2Tfq5qg4qc4AmwVlvv0oLiVAGB7enBSJ2x2DqQFi38=\"\n      },\n      {\n        \"path\": \"github.com/google/orderedcode\",\n        \"version\": \"v0.0.1\",\n        \"sum\": \"h1:UzfcAexk9Vhv8+9pNOgRu41f16lHq725vPwnSeiG/Us=\"\n      },\n      {\n        \"path\": \"github.com/google/s2a-go\",\n        \"version\": \"v0.1.4\",\n        \"sum\": \"h1:1kZ/sQM3srePvKs3tXAvQzo66XfcReoqFpIpIccE7Oc=\"\n      },\n      {\n        \"path\": \"github.com/google/uuid\",\n        \"version\": \"v1.3.0\",\n        \"sum\": \"h1:t6JiXgmwXMjEs8VusXIJk2BXHsn+wx8BZdTaoZ5fu7I=\"\n      },\n      {\n        \"path\": \"github.com/googleapis/enterprise-certificate-proxy\",\n        \"version\": \"v0.2.4\",\n        \"sum\": \"h1:uGy6JWR/uMIILU8wbf+OkstIrNiMjGpEIyhx8f6W7s4=\"\n      },\n      {\n        \"path\": \"github.com/googleapis/gax-go/v2\",\n        \"version\": \"v2.12.0\",\n        \"sum\": \"h1:A+gCJKdRfqXkr+BIRGtZLibNXf0m1f9E4HG56etFpas=\"\n      },\n      {\n        \"path\": \"github.com/gorilla/handlers\",\n        \"version\": \"v1.5.1\",\n        \"sum\": \"h1:9lRY6j8DEeeBT10CvO9hGW0gmky0BprnvDI5vfhUHH4=\"\n      },\n      {\n        \"path\": \"github.com/gorilla/mux\",\n        \"version\": \"v1.8.0\",\n        \"sum\": \"h1:i40aqfkR1h2SlN9hojwV5ZA91wcXFOvkdNIeFDP5koI=\"\n      },\n      {\n        \"path\": \"github.com/gorilla/websocket\",\n        \"version\": \"v1.5.0\",\n        \"sum\": \"h1:PPwGk2jz7EePpoHN/+ClbZu8SPxiqlu12wZP/3sWmnc=\"\n      },\n      {\n        \"path\": \"github.com/grpc-ecosystem/go-grpc-middleware\",\n        \"version\": \"v1.3.0\",\n        \"sum\": \"h1:+9834+KizmvFV7pXQGSXQTsaWhq2GjuNUt0aUU0YBYw=\"\n      },\n      {\n        \"path\": \"github.com/grpc-ecosystem/grpc-gateway\",\n        \"version\": \"v1.16.0\",\n        \"sum\": \"h1:gmcG1KaJ57LophUzW0Hy8NmPhnMZb4M0+kPpLofRdBo=\"\n      },\n      {\n        \"path\": \"github.com/gsterjov/go-libsecret\",\n        \"version\": \"v0.0.0-20161001094733-a6f4afe4910c\",\n        \"sum\": \"h1:6rhixN/i8ZofjG1Y75iExal34USq5p+wiN1tpie8IrU=\"\n      },\n      {\n        \"path\": \"github.com/gtank/merlin\",\n        \"version\": \"v0.1.1\",\n        \"sum\": \"h1:eQ90iG7K9pOhtereWsmyRJ6RAwcP4tHTDBHXNg+u5is=\"\n      },\n      {\n        \"path\": \"github.com/gtank/ristretto255\",\n        \"version\": \"v0.1.2\",\n        \"sum\": \"h1:JEqUCPA1NvLq5DwYtuzigd7ss8fwbYay9fi4/5uMzcc=\"\n      },\n      {\n        \"path\": \"github.com/hashicorp/go-bexpr\",\n        \"version\": \"v0.1.10\",\n        \"sum\": \"h1:9kuI5PFotCboP3dkDYFr/wi0gg0QVbSNz5oFRpxn4uE=\"\n      },\n      {\n        \"path\": \"github.com/hashicorp/go-cleanhttp\",\n        \"version\": \"v0.5.2\",\n        \"sum\": \"h1:035FKYIWjmULyFRBKPs8TBQoi0x6d9G4xc9neXJWAZQ=\"\n      },\n      {\n        \"path\": \"github.com/hashicorp/go-getter\",\n        \"version\": \"v1.7.1\",\n        \"sum\": \"h1:SWiSWN/42qdpR0MdhaOc/bLR48PLuP1ZQtYLRlM69uY=\"\n      },\n      {\n        \"path\": \"github.com/hashicorp/go-immutable-radix\",\n        \"version\": \"v1.3.1\",\n        \"sum\": \"h1:DKHmCUm2hRBK510BaiZlwvpD40f8bJFeZnpfm2KLowc=\"\n      },\n      {\n        \"path\": \"github.com/hashicorp/go-safetemp\",\n        \"version\": \"v1.0.0\",\n        \"sum\": \"h1:2HR189eFNrjHQyENnQMMpCiBAsRxzbTMIgBhEyExpmo=\"\n      },\n      {\n        \"path\": \"github.com/hashicorp/go-version\",\n        \"version\": \"v1.6.0\",\n        \"sum\": \"h1:feTTfFNnjP967rlCxM/I9g701jU+RN74YKx2mOkIeek=\"\n      },\n      {\n        \"path\": \"github.com/hashicorp/golang-lru\",\n        \"version\": \"v0.5.5-0.20210104140557-80c98217689d\",\n        \"sum\": \"h1:dg1dEPuWpEqDnvIw251EVy4zlP8gWbsGj4BsUKCRpYs=\"\n      },\n      {\n        \"path\": \"github.com/hashicorp/hcl\",\n        \"version\": \"v1.0.0\",\n        \"sum\": \"h1:0Anlzjpi4vEasTeNFn2mLJgTSwt0+6sfsiTG8qcWGx4=\"\n      },\n      {\n        \"path\": \"github.com/hdevalence/ed25519consensus\",\n        \"version\": \"v0.1.0\",\n        \"sum\": \"h1:jtBwzzcHuTmFrQN6xQZn6CQEO/V9f7HsjsjeEZ6auqU=\"\n      },\n      {\n        \"path\": \"github.com/holiman/bloomfilter/v2\",\n        \"version\": \"v2.0.3\",\n        \"sum\": \"h1:73e0e/V0tCydx14a0SCYS/EWCxgwLZ18CZcZKVu0fao=\"\n      },\n      {\n        \"path\": \"github.com/holiman/uint256\",\n        \"version\": \"v1.2.0\",\n        \"sum\": \"h1:gpSYcPLWGv4sG43I2mVLiDZCNDh/EpGjSk8tmtxitHM=\"\n      },\n      {\n        \"path\": \"github.com/huandu/skiplist\",\n        \"version\": \"v1.2.0\",\n        \"sum\": \"h1:gox56QD77HzSC0w+Ws3MH3iie755GBJU1OER3h5VsYw=\"\n      },\n      {\n        \"path\": \"github.com/huin/goupnp\",\n        \"version\": \"v1.0.3\",\n        \"sum\": \"h1:N8No57ls+MnjlB+JPiCVSOyy/ot7MJTqlo7rn+NYSqQ=\"\n      },\n      {\n        \"path\": \"github.com/improbable-eng/grpc-web\",\n        \"version\": \"v0.15.0\",\n        \"sum\": \"h1:BN+7z6uNXZ1tQGcNAuaU1YjsLTApzkjt2tzCixLaUPQ=\"\n      },\n      {\n        \"path\": \"github.com/ipfs/go-cid\",\n        \"version\": \"v0.1.0\",\n        \"sum\": \"h1:YN33LQulcRHjfom/i25yoOZR4Telp1Hr/2RU3d0PnC0=\"\n      },\n      {\n        \"path\": \"github.com/jackpal/go-nat-pmp\",\n        \"version\": \"v1.0.2\",\n        \"sum\": \"h1:KzKSgb7qkJvOUTqYl9/Hg/me3pWgBmERKrTGD7BdWus=\"\n      },\n      {\n        \"path\": \"github.com/jmespath/go-jmespath\",\n        \"version\": \"v0.4.0\",\n        \"sum\": \"h1:BEgLn5cpjn8UN1mAw4NjwDrS35OdebyEtFe+9YPoQUg=\"\n      },\n      {\n        \"path\": \"github.com/kelindar/bitmap\",\n        \"version\": \"v1.4.1\",\n        \"sum\": \"h1:Ih0BWMYXkkZxPMU536DsQKRhdvqFl7tuNjImfLJWC6E=\"\n      },\n      {\n        \"path\": \"github.com/kelindar/simd\",\n        \"version\": \"v1.1.2\",\n        \"sum\": \"h1:KduKb+M9cMY2HIH8S/cdJyD+5n5EGgq+Aeeleos55To=\"\n      },\n      {\n        \"path\": \"github.com/klauspost/compress\",\n        \"version\": \"v1.16.3\",\n        \"sum\": \"h1:XuJt9zzcnaz6a16/OU53ZjWp/v7/42WcR5t2a0PcNQY=\"\n      },\n      {\n        \"path\": \"github.com/klauspost/cpuid/v2\",\n        \"version\": \"v2.2.4\",\n        \"sum\": \"h1:acbojRNwl3o09bUq+yDCtZFc1aiwaAAxtcn8YkZXnvk=\"\n      },\n      {\n        \"path\": \"github.com/kr/pretty\",\n        \"version\": \"v0.3.1\",\n        \"sum\": \"h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\"\n      },\n      {\n        \"path\": \"github.com/kr/text\",\n        \"version\": \"v0.2.0\",\n        \"sum\": \"h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\"\n      },\n      {\n        \"path\": \"github.com/lib/pq\",\n        \"version\": \"v1.10.7\",\n        \"sum\": \"h1:p7ZhMD+KsSRozJr34udlUrhboJwWAgCg34+/ZZNvZZw=\"\n      },\n      {\n        \"path\": \"github.com/libp2p/go-buffer-pool\",\n        \"version\": \"v0.1.0\",\n        \"sum\": \"h1:oK4mSFcQz7cTQIfqbe4MIj9gLW+mnanjyFtc6cdF0Y8=\"\n      },\n      {\n        \"path\": \"github.com/magiconair/properties\",\n        \"version\": \"v1.8.7\",\n        \"sum\": \"h1:IeQXZAiQcpL9mgcAe1Nu6cX9LLw6ExEHKjN0VQdvPDY=\"\n      },\n      {\n        \"path\": \"github.com/manifoldco/promptui\",\n        \"version\": \"v0.9.0\",\n        \"sum\": \"h1:3V4HzJk1TtXW1MTZMP7mdlwbBpIinw3HztaIlYthEiA=\"\n      },\n      {\n        \"path\": \"github.com/mattn/go-colorable\",\n        \"version\": \"v0.1.13\",\n        \"sum\": \"h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=\"\n      },\n      {\n        \"path\": \"github.com/mattn/go-isatty\",\n        \"version\": \"v0.0.19\",\n        \"sum\": \"h1:JITubQf0MOLdlGRuRq+jtsDlekdYPia9ZFsB8h/APPA=\"\n      },\n      {\n        \"path\": \"github.com/mattn/go-runewidth\",\n        \"version\": \"v0.0.9\",\n        \"sum\": \"h1:Lm995f3rfxdpd6TSmuVCHVb/QhupuXlYr8sCI/QdE+0=\"\n      },\n      {\n        \"path\": \"github.com/matttproud/golang_protobuf_extensions\",\n        \"version\": \"v1.0.4\",\n        \"sum\": \"h1:mmDVorXM7PCGKw94cs5zkfA9PSy5pEvNWRP0ET0TIVo=\"\n      },\n      {\n        \"path\": \"github.com/mimoo/StrobeGo\",\n        \"version\": \"v0.0.0-20210601165009-122bf33a46e0\",\n        \"sum\": \"h1:QRUSJEgZn2Snx0EmT/QLXibWjSUDjKWvXIT19NBVp94=\"\n      },\n      {\n        \"path\": \"github.com/minio/blake2b-simd\",\n        \"version\": \"v0.0.0-20160723061019-3f5f724cb5b1\",\n        \"sum\": \"h1:lYpkrQH5ajf0OXOcUbGjvZxxijuBwbbmlSxLiuofa+g=\"\n      },\n      {\n        \"path\": \"github.com/minio/highwayhash\",\n        \"version\": \"v1.0.2\",\n        \"sum\": \"h1:Aak5U0nElisjDCfPSG79Tgzkn2gl66NxOMspRrKnA/g=\"\n      },\n      {\n        \"path\": \"github.com/minio/sha256-simd\",\n        \"version\": \"v1.0.0\",\n        \"sum\": \"h1:v1ta+49hkWZyvaKwrQB8elexRqm6Y0aMLjCNsrYxo6g=\"\n      },\n      {\n        \"path\": \"github.com/mitchellh/go-homedir\",\n        \"version\": \"v1.1.0\",\n        \"sum\": \"h1:lukF9ziXFxDFPkA1vsr5zpc1XuPDn/wFntq5mG+4E0Y=\"\n      },\n      {\n        \"path\": \"github.com/mitchellh/go-testing-interface\",\n        \"version\": \"v1.14.1\",\n        \"sum\": \"h1:jrgshOhYAUVNMAJiKbEu7EqAwgJJ2JqpQmpLJOu07cU=\"\n      },\n      {\n        \"path\": \"github.com/mitchellh/mapstructure\",\n        \"version\": \"v1.5.0\",\n        \"sum\": \"h1:jeMsZIYE/09sWLaz43PL7Gy6RuMjD2eJVyuac5Z2hdY=\"\n      },\n      {\n        \"path\": \"github.com/mitchellh/pointerstructure\",\n        \"version\": \"v1.2.0\",\n        \"sum\": \"h1:O+i9nHnXS3l/9Wu7r4NrEdwA2VFTicjUEN1uBnDo34A=\"\n      },\n      {\n        \"path\": \"github.com/mr-tron/base58\",\n        \"version\": \"v1.2.0\",\n        \"sum\": \"h1:T/HDJBh4ZCPbU39/+c3rRvE0uKBQlU27+QI8LJ4t64o=\"\n      },\n      {\n        \"path\": \"github.com/mtibben/percent\",\n        \"version\": \"v0.2.1\",\n        \"sum\": \"h1:5gssi8Nqo8QU/r2pynCm+hBQHpkB/uNK7BJCFogWdzs=\"\n      },\n      {\n        \"path\": \"github.com/multiformats/go-base32\",\n        \"version\": \"v0.0.3\",\n        \"sum\": \"h1:tw5+NhuwaOjJCC5Pp82QuXbrmLzWg7uxlMFp8Nq/kkI=\"\n      },\n      {\n        \"path\": \"github.com/multiformats/go-base36\",\n        \"version\": \"v0.1.0\",\n        \"sum\": \"h1:JR6TyF7JjGd3m6FbLU2cOxhC0Li8z8dLNGQ89tUg4F4=\"\n      },\n      {\n        \"path\": \"github.com/multiformats/go-multibase\",\n        \"version\": \"v0.0.3\",\n        \"sum\": \"h1:l/B6bJDQjvQ5G52jw4QGSYeOTZoAwIO77RblWplfIqk=\"\n      },\n      {\n        \"path\": \"github.com/multiformats/go-multihash\",\n        \"version\": \"v0.0.15\",\n        \"sum\": \"h1:hWOPdrNqDjwHDx82vsYGSDZNyktOJJ2dzZJzFkOV1jM=\"\n      },\n      {\n        \"path\": \"github.com/multiformats/go-varint\",\n        \"version\": \"v0.0.6\",\n        \"sum\": \"h1:gk85QWKxh3TazbLxED/NlDVv8+q+ReFJk7Y2W/KhfNY=\"\n      },\n      {\n        \"path\": \"github.com/olekukonko/tablewriter\",\n        \"version\": \"v0.0.5\",\n        \"sum\": \"h1:P2Ga83D34wi1o9J6Wh1mRuqd4mF/x/lgBS7N7AbDhec=\"\n      },\n      {\n        \"path\": \"github.com/pelletier/go-toml/v2\",\n        \"version\": \"v2.0.8\",\n        \"sum\": \"h1:0ctb6s9mE31h0/lhu+J6OPmVeDxJn+kYnJc2jZR9tGQ=\"\n      },\n      {\n        \"path\": \"github.com/pkg/errors\",\n        \"version\": \"v0.9.1\",\n        \"sum\": \"h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\"\n      },\n      {\n        \"path\": \"github.com/pmezard/go-difflib\",\n        \"version\": \"v1.0.0\",\n        \"sum\": \"h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\"\n      },\n      {\n        \"path\": \"github.com/prometheus/client_golang\",\n        \"version\": \"v1.17.0\",\n        \"sum\": \"h1:rl2sfwZMtSthVU752MqfjQozy7blglC+1SOtjMAMh+Q=\"\n      },\n      {\n        \"path\": \"github.com/prometheus/client_model\",\n        \"version\": \"v0.4.1-0.20230718164431-9a2bf3000d16\",\n        \"sum\": \"h1:v7DLqVdK4VrYkVD5diGdl4sxJurKJEMnODWRJlxV9oM=\"\n      },\n      {\n        \"path\": \"github.com/prometheus/common\",\n        \"version\": \"v0.44.0\",\n        \"sum\": \"h1:+5BrQJwiBB9xsMygAB3TNvpQKOwlkc25LbISbrdOOfY=\"\n      },\n      {\n        \"path\": \"github.com/prometheus/procfs\",\n        \"version\": \"v0.11.1\",\n        \"sum\": \"h1:xRC8Iq1yyca5ypa9n1EZnWZkt7dwcoRPQwX/5gwaUuI=\"\n      },\n      {\n        \"path\": \"github.com/prometheus/tsdb\",\n        \"version\": \"v0.7.1\",\n        \"sum\": \"h1:YZcsG11NqnK4czYLrWd9mpEuAJIHVQLwdrleYfszMAA=\"\n      },\n      {\n        \"path\": \"github.com/rakyll/statik\",\n        \"version\": \"v0.1.7\",\n        \"sum\": \"h1:OF3QCZUuyPxuGEP7B4ypUa7sB/iHtqOTDYZXGM8KOdQ=\"\n      },\n      {\n        \"path\": \"github.com/rcrowley/go-metrics\",\n        \"version\": \"v0.0.0-20201227073835-cf1acfcdf475\",\n        \"sum\": \"h1:N/ElC8H3+5XpJzTSTfLsJV/mx9Q9g7kxmchpfZyxgzM=\"\n      },\n      {\n        \"path\": \"github.com/rjeczalik/notify\",\n        \"version\": \"v0.9.1\",\n        \"sum\": \"h1:CLCKso/QK1snAlnhNR/CNvNiFU2saUtjV0bx3EwNeCE=\"\n      },\n      {\n        \"path\": \"github.com/rogpeppe/go-internal\",\n        \"version\": \"v1.11.0\",\n        \"sum\": \"h1:cWPaGQEPrBb5/AsnsZesgZZ9yb1OQ+GOISoDNXVBh4M=\"\n      },\n      {\n        \"path\": \"github.com/rs/cors\",\n        \"version\": \"v1.8.3\",\n        \"sum\": \"h1:O+qNyWn7Z+F9M0ILBHgMVPuB1xTOucVd5gtaYyXBpRo=\"\n      },\n      {\n        \"path\": \"github.com/rs/zerolog\",\n        \"version\": \"v1.30.0\",\n        \"sum\": \"h1:SymVODrcRsaRaSInD9yQtKbtWqwsfoPcRff/oRXLj4c=\"\n      },\n      {\n        \"path\": \"github.com/russross/blackfriday/v2\",\n        \"version\": \"v2.1.0\",\n        \"sum\": \"h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=\"\n      },\n      {\n        \"path\": \"github.com/shirou/gopsutil\",\n        \"version\": \"v3.21.4-0.20210419000835-c7a38de76ee5+incompatible\",\n        \"sum\": \"h1:Bn1aCHHRnjv4Bl16T8rcaFjYSrGrIZvpiGO6P3Q4GpU=\"\n      },\n      {\n        \"path\": \"github.com/spf13/afero\",\n        \"version\": \"v1.9.5\",\n        \"sum\": \"h1:stMpOSZFs//0Lv29HduCmli3GUfpFoF3Y1Q/aXj/wVM=\"\n      },\n      {\n        \"path\": \"github.com/spf13/cast\",\n        \"version\": \"v1.5.1\",\n        \"sum\": \"h1:R+kOtfhWQE6TVQzY+4D7wJLBgkdVasCEFxSUBYBYIlA=\"\n      },\n      {\n        \"path\": \"github.com/spf13/cobra\",\n        \"version\": \"v1.7.0\",\n        \"sum\": \"h1:hyqWnYt1ZQShIddO5kBpj3vu05/++x6tJ6dg8EC572I=\"\n      },\n      {\n        \"path\": \"github.com/spf13/jwalterweatherman\",\n        \"version\": \"v1.1.0\",\n        \"sum\": \"h1:ue6voC5bR5F8YxI5S67j9i582FU4Qvo2bmqnqMYADFk=\"\n      },\n      {\n        \"path\": \"github.com/spf13/pflag\",\n        \"version\": \"v1.0.5\",\n        \"sum\": \"h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\"\n      },\n      {\n        \"path\": \"github.com/spf13/viper\",\n        \"version\": \"v1.16.0\",\n        \"sum\": \"h1:rGGH0XDZhdUOryiDWjmIvUSWpbNqisK8Wk0Vyefw8hc=\"\n      },\n      {\n        \"path\": \"github.com/stratosnet/stratos-chain/api\",\n        \"version\": \"v0.0.0-20231220214043-682f174b1c21\",\n        \"sum\": \"h1:aVfwtoQ4dCAXbzfQ9k4rLKkT4UAeWudH8OxNb3WXQm8=\"\n      },\n      {\n        \"path\": \"github.com/stretchr/testify\",\n        \"version\": \"v1.8.4\",\n        \"sum\": \"h1:CcVxjf3Q8PM0mHUKJCdn+eZZtm5yQwehR5yeSVQQcUk=\"\n      },\n      {\n        \"path\": \"github.com/subosito/gotenv\",\n        \"version\": \"v1.4.2\",\n        \"sum\": \"h1:X1TuBLAMDFbaTAChgCBLu3DU3UPyELpnF2jjJ2cz/S8=\"\n      },\n      {\n        \"path\": \"github.com/syndtr/goleveldb\",\n        \"version\": \"v1.0.1-0.20220721030215-126854af5e6d\",\n        \"sum\": \"\"\n      },\n      {\n        \"path\": \"github.com/tendermint/go-amino\",\n        \"version\": \"v0.16.0\",\n        \"sum\": \"h1:GyhmgQKvqF82e2oZeuMSp9JTN0N09emoSZlb2lyGa2E=\"\n      },\n      {\n        \"path\": \"github.com/tidwall/btree\",\n        \"version\": \"v1.6.0\",\n        \"sum\": \"h1:LDZfKfQIBHGHWSwckhXI0RPSXzlo+KYdjK7FWSqOzzg=\"\n      },\n      {\n        \"path\": \"github.com/tklauser/go-sysconf\",\n        \"version\": \"v0.3.11\",\n        \"sum\": \"h1:89WgdJhk5SNwJfu+GKyYveZ4IaJ7xAkecBo+KdJV0CM=\"\n      },\n      {\n        \"path\": \"github.com/tklauser/numcpus\",\n        \"version\": \"v0.6.0\",\n        \"sum\": \"h1:kebhY2Qt+3U6RNK7UqpYNA+tJ23IBEGKkB7JQBfDYms=\"\n      },\n      {\n        \"path\": \"github.com/tyler-smith/go-bip39\",\n        \"version\": \"v1.1.0\",\n        \"sum\": \"h1:5eUemwrMargf3BSLRRCalXT93Ns6pQJIjYQN2nyfOP8=\"\n      },\n      {\n        \"path\": \"github.com/ulikunitz/xz\",\n        \"version\": \"v0.5.11\",\n        \"sum\": \"h1:kpFauv27b6ynzBNT/Xy+1k+fK4WswhN/6PN5WhFAGw8=\"\n      },\n      {\n        \"path\": \"github.com/urfave/cli/v2\",\n        \"version\": \"v2.10.2\",\n        \"sum\": \"h1:x3p8awjp/2arX+Nl/G2040AZpOCHS/eMJJ1/a+mye4Y=\"\n      },\n      {\n        \"path\": \"github.com/xrash/smetrics\",\n        \"version\": \"v0.0.0-20201216005158-039620a65673\",\n        \"sum\": \"h1:bAn7/zixMGCfxrRTfdpNzjtPYqr8smhKouy9mxVdGPU=\"\n      },\n      {\n        \"path\": \"go.opencensus.io\",\n        \"version\": \"v0.24.0\",\n        \"sum\": \"h1:y73uSU6J157QMP2kn2r30vwW1A2W2WFwSCGnAVxeaD0=\"\n      },\n      {\n        \"path\": \"golang.org/x/crypto\",\n        \"version\": \"v0.12.0\",\n        \"sum\": \"h1:tFM/ta59kqch6LlvYnPa0yx5a83cL2nHflFhYKvv9Yk=\"\n      },\n      {\n        \"path\": \"golang.org/x/exp\",\n        \"version\": \"v0.0.0-20230711153332-06a737ee72cb\",\n        \"sum\": \"h1:xIApU0ow1zwMa2uL1VDNeQlNVFTWMQxZUZCMDy0Q4Us=\"\n      },\n      {\n        \"path\": \"golang.org/x/net\",\n        \"version\": \"v0.14.0\",\n        \"sum\": \"h1:BONx9s002vGdD9umnlX1Po8vOZmrgH34qlHcD1MfK14=\"\n      },\n      {\n        \"path\": \"golang.org/x/oauth2\",\n        \"version\": \"v0.10.0\",\n        \"sum\": \"h1:zHCpF2Khkwy4mMB4bv0U37YtJdTGW8jI0glAApi0Kh8=\"\n      },\n      {\n        \"path\": \"golang.org/x/sync\",\n        \"version\": \"v0.3.0\",\n        \"sum\": \"h1:ftCYgMx6zT/asHUrPw8BLLscYtGznsLAnjq5RH9P66E=\"\n      },\n      {\n        \"path\": \"golang.org/x/sys\",\n        \"version\": \"v0.11.0\",\n        \"sum\": \"h1:eG7RXZHdqOJ1i+0lgLgCpSXAp6M3LYlAo6osgSi0xOM=\"\n      },\n      {\n        \"path\": \"golang.org/x/term\",\n        \"version\": \"v0.11.0\",\n        \"sum\": \"h1:F9tnn/DA/Im8nCwm+fX+1/eBwi4qFjRT++MhtVC4ZX0=\"\n      },\n      {\n        \"path\": \"golang.org/x/text\",\n        \"version\": \"v0.12.0\",\n        \"sum\": \"h1:k+n5B8goJNdU7hSvEtMUz3d1Q6D/XW4COJSJR6fN0mc=\"\n      },\n      {\n        \"path\": \"golang.org/x/xerrors\",\n        \"version\": \"v0.0.0-20220907171357-04be3eba64a2\",\n        \"sum\": \"h1:H2TDz8ibqkAF6YGhCdN3jS9O0/s90v0rJh3X/OLHEUk=\"\n      },\n      {\n        \"path\": \"google.golang.org/api\",\n        \"version\": \"v0.128.0\",\n        \"sum\": \"h1:RjPESny5CnQRn9V6siglged+DZCgfu9l6mO9dkX9VOg=\"\n      },\n      {\n        \"path\": \"google.golang.org/appengine\",\n        \"version\": \"v1.6.7\",\n        \"sum\": \"h1:FZR1q0exgwxzPzp/aF+VccGrSfxfPpkBqjIIEq3ru6c=\"\n      },\n      {\n        \"path\": \"google.golang.org/genproto\",\n        \"version\": \"v0.0.0-20230920204549-e6e6cdab5c13\",\n        \"sum\": \"h1:vlzZttNJGVqTsRFU9AmdnrcO1Znh8Ew9kCD//yjigk0=\"\n      },\n      {\n        \"path\": \"google.golang.org/genproto/googleapis/api\",\n        \"version\": \"v0.0.0-20231002182017-d307bd883b97\",\n        \"sum\": \"h1:W18sezcAYs+3tDZX4F80yctqa12jcP1PUS2gQu1zTPU=\"\n      },\n      {\n        \"path\": \"google.golang.org/genproto/googleapis/rpc\",\n        \"version\": \"v0.0.0-20230920204549-e6e6cdab5c13\",\n        \"sum\": \"h1:N3bU/SQDCDyD6R528GJ/PwW9KjYcJA3dgyH+MovAkIM=\"\n      },\n      {\n        \"path\": \"google.golang.org/grpc\",\n        \"version\": \"v1.58.3\",\n        \"sum\": \"h1:BjnpXut1btbtgN/6sp+brB2Kbm2LjNXnidYujAVbSoQ=\"\n      },\n      {\n        \"path\": \"google.golang.org/protobuf\",\n        \"version\": \"v1.31.0\",\n        \"sum\": \"h1:g0LDEJHgrBl9N9r17Ru3sqWhkIx2NB67okBHPwC7hs8=\"\n      },\n      {\n        \"path\": \"gopkg.in/ini.v1\",\n        \"version\": \"v1.67.0\",\n        \"sum\": \"h1:Dgnx+6+nfE+IfzjUEISNeydPJh9AXNNsWbGP9KzCsOA=\"\n      },\n      {\n        \"path\": \"gopkg.in/yaml.v2\",\n        \"version\": \"v2.4.0\",\n        \"sum\": \"h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\"\n      },\n      {\n        \"path\": \"gopkg.in/yaml.v3\",\n        \"version\": \"v3.0.1\",\n        \"sum\": \"h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\"\n      },\n      {\n        \"path\": \"nhooyr.io/websocket\",\n        \"version\": \"v1.8.6\",\n        \"sum\": \"h1:s+C3xAMLwGmlI31Nyn/eAehUlZPwfYZu2JXM621Q5/k=\"\n      },\n      {\n        \"path\": \"pgregory.net/rapid\",\n        \"version\": \"v0.5.5\",\n        \"sum\": \"h1:jkgx1TjbQPD/feRoK+S/mXw9e1uj6WilpHrXJowi6oA=\"\n      },\n      {\n        \"path\": \"sigs.k8s.io/yaml\",\n        \"version\": \"v1.3.0\",\n        \"sum\": \"h1:a2VclLzOGrwOHDiV8EfBGhvjHvP46CtW5j6POvhYGGo=\"\n      }\n    ],\n    \"cosmos_sdk_version\": \"v0.47.5\"\n  }\n}\n</code></pre> <code>GET /cosmos/base/tendermint/v1beta1/syncing</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries node syncing.  Request Example: <pre><code>https://rest.thestratos.org/cosmos/base/tendermint/v1beta1/syncing\n</code></pre> Response Example: <pre><code>{\n  \"syncing\": false\n}\n</code></pre> <code>GET /cosmos/base/tendermint/v1beta1/validatorsets/latest</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries latest validator-set.  Request Example: <pre><code>https://rest.thestratos.org/cosmos/base/tendermint/v1beta1/validatorsets/latest\n</code></pre> Response Example: <pre><code>{\n  \"block_height\": \"927\",\n  \"validators\": [\n    {\n      \"address\": \"stvalcons1qk2flmcrpyyxs6ekq7wgh62caeqjmp6ymddlvp\",\n      \"pub_key\": {\n        \"@type\": \"/cosmos.crypto.ed25519.PubKey\",\n        \"key\": \"yaG6YrluzJfxOgwFuRhlgpOvQAmzBS7kqMVvISN8XWs=\"\n      },\n      \"voting_power\": \"504000000000000\",\n      \"proposer_priority\": \"0\"\n    }\n  ],\n  \"pagination\": {\n    \"next_key\": null,\n    \"total\": \"1\"\n  }\n}\n</code></pre> <code>GET /cosmos/base/tendermint/v1beta1/validatorsets/{height}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries validator-set at a given height.  Request Example: <pre><code>https://rest.thestratos.org/cosmos/base/tendermint/v1beta1/validatorsets/800\n</code></pre> Response Example: <pre><code>{\n  \"block_height\": \"800\",\n  \"validators\": [\n    {\n      \"address\": \"stvalcons1qk2flmcrpyyxs6ekq7wgh62caeqjmp6ymddlvp\",\n      \"pub_key\": {\n        \"@type\": \"/cosmos.crypto.ed25519.PubKey\",\n        \"key\": \"yaG6YrluzJfxOgwFuRhlgpOvQAmzBS7kqMVvISN8XWs=\"\n      },\n      \"voting_power\": \"504000000000000\",\n      \"proposer_priority\": \"0\"\n    }\n  ],\n  \"pagination\": {\n    \"next_key\": null,\n    \"total\": \"1\"\n  }\n}\n</code></pre>"},{"location":"docs-stratos-chain/stratos-chain-rest-apis/#transactions","title":"Transactions","text":"<p>Search, encode, or broadcast transactions.</p> <code>GET /cosmos/tx/v1beta1/txs</code> \u00a0\u00a0\u00a0\u00a0\u00a0 fetches txs by event.  Request Example: <pre><code>https://rest.thestratos.org/cosmos/tx/v1beta1/txs?events=tx.height=557\n</code></pre> Response Example: <pre><code>{\n  \"txs\": [\n    {\n      \"body\": {\n        \"messages\": [\n          {\n            \"@type\": \"/cosmos.bank.v1beta1.MsgSend\",\n            \"from_address\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n            \"to_address\": \"st19tgvkz4d4uqv68ahn90vc4mhuh63g2l7u4ad6l\",\n            \"amount\": [\n              {\n                \"denom\": \"wei\",\n                \"amount\": \"10000000000000000000\"\n              }\n            ]\n          }\n        ],\n        \"memo\": \"\",\n        \"timeout_height\": \"0\",\n        \"extension_options\": [],\n        \"non_critical_extension_options\": []\n      },\n      \"auth_info\": {\n        \"signer_infos\": [\n          {\n            \"public_key\": {\n              \"@type\": \"/stratos.crypto.v1.ethsecp256k1.PubKey\",\n              \"key\": \"A0GU+d2Ut1t6dOEF+Ln+ZA9oNdjh8vTHhWb788TOCIUr\"\n            },\n            \"mode_info\": {\n              \"single\": {\n                \"mode\": \"SIGN_MODE_DIRECT\"\n              }\n            },\n            \"sequence\": \"4\"\n          }\n        ],\n        \"fee\": {\n          \"amount\": [\n            {\n              \"denom\": \"wei\",\n              \"amount\": \"442524000000000\"\n            }\n          ],\n          \"gas_limit\": \"442524\",\n          \"payer\": \"\",\n          \"granter\": \"\"\n        },\n        \"tip\": null\n      },\n      \"signatures\": [\n        \"DOf7A9h7/Ahpu6M2+o8LUGEsI89FJnEb+iL63x6OHqEVgcKiHDkSxEVORhPoO/vnRSygKGhX7KdPlb1nKLOImAE=\"\n      ]\n    }\n  ],\n  \"tx_responses\": [\n    {\n      \"height\": \"557\",\n      \"txhash\": \"34E401829F23098FEA1F7B398CD9842A6010249F7720BAF1916A14077C97B3E7\",\n      \"codespace\": \"\",\n      \"code\": 0,\n      \"data\": \"12260A242F636F736D6F732E62616E6B2E763162657461312E4D736753656E64526573706F6E7365\",\n      \"raw_log\": \"[{\\\"msg_index\\\":0,\\\"events\\\":[{\\\"type\\\":\\\"message\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"action\\\",\\\"value\\\":\\\"/cosmos.bank.v1beta1.MsgSend\\\"},{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\\\"},{\\\"key\\\":\\\"module\\\",\\\"value\\\":\\\"bank\\\"}]},{\\\"type\\\":\\\"coin_spent\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"spender\\\",\\\"value\\\":\\\"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"10000000000000000000wei\\\"}]},{\\\"type\\\":\\\"coin_received\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"receiver\\\",\\\"value\\\":\\\"st19tgvkz4d4uqv68ahn90vc4mhuh63g2l7u4ad6l\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"10000000000000000000wei\\\"}]},{\\\"type\\\":\\\"transfer\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"recipient\\\",\\\"value\\\":\\\"st19tgvkz4d4uqv68ahn90vc4mhuh63g2l7u4ad6l\\\"},{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"10000000000000000000wei\\\"}]},{\\\"type\\\":\\\"message\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\\\"}]}]}]\",\n      \"logs\": [\n        {\n          \"msg_index\": 0,\n          \"log\": \"\",\n          \"events\": [\n            {\n              \"type\": \"message\",\n              \"attributes\": [\n                {\n                  \"key\": \"action\",\n                  \"value\": \"/cosmos.bank.v1beta1.MsgSend\"\n                },\n                {\n                  \"key\": \"sender\",\n                  \"value\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\"\n                },\n                {\n                  \"key\": \"module\",\n                  \"value\": \"bank\"\n                }\n              ]\n            },\n            {\n              \"type\": \"coin_spent\",\n              \"attributes\": [\n                {\n                  \"key\": \"spender\",\n                  \"value\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\"\n                },\n                {\n                  \"key\": \"amount\",\n                  \"value\": \"10000000000000000000wei\"\n                }\n              ]\n            },\n            {\n              \"type\": \"coin_received\",\n              \"attributes\": [\n                {\n                  \"key\": \"receiver\",\n                  \"value\": \"st19tgvkz4d4uqv68ahn90vc4mhuh63g2l7u4ad6l\"\n                },\n                {\n                  \"key\": \"amount\",\n                  \"value\": \"10000000000000000000wei\"\n                }\n              ]\n            },\n            {\n              \"type\": \"transfer\",\n              \"attributes\": [\n                {\n                  \"key\": \"recipient\",\n                  \"value\": \"st19tgvkz4d4uqv68ahn90vc4mhuh63g2l7u4ad6l\"\n                },\n                {\n                  \"key\": \"sender\",\n                  \"value\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\"\n                },\n                {\n                  \"key\": \"amount\",\n                  \"value\": \"10000000000000000000wei\"\n                }\n              ]\n            },\n            {\n              \"type\": \"message\",\n              \"attributes\": [\n                {\n                  \"key\": \"sender\",\n                  \"value\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\"\n                }\n              ]\n            }\n          ]\n        }\n      ],\n      \"info\": \"\",\n      \"gas_wanted\": \"442524\",\n      \"gas_used\": \"431655\",\n      \"tx\": {\n        \"@type\": \"/cosmos.tx.v1beta1.Tx\",\n        \"body\": {\n          \"messages\": [\n            {\n              \"@type\": \"/cosmos.bank.v1beta1.MsgSend\",\n              \"from_address\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n              \"to_address\": \"st19tgvkz4d4uqv68ahn90vc4mhuh63g2l7u4ad6l\",\n              \"amount\": [\n                {\n                  \"denom\": \"wei\",\n                  \"amount\": \"10000000000000000000\"\n                }\n              ]\n            }\n          ],\n          \"memo\": \"\",\n          \"timeout_height\": \"0\",\n          \"extension_options\": [],\n          \"non_critical_extension_options\": []\n        },\n        \"auth_info\": {\n          \"signer_infos\": [\n            {\n              \"public_key\": {\n                \"@type\": \"/stratos.crypto.v1.ethsecp256k1.PubKey\",\n                \"key\": \"A0GU+d2Ut1t6dOEF+Ln+ZA9oNdjh8vTHhWb788TOCIUr\"\n              },\n              \"mode_info\": {\n                \"single\": {\n                  \"mode\": \"SIGN_MODE_DIRECT\"\n                }\n              },\n              \"sequence\": \"4\"\n            }\n          ],\n          \"fee\": {\n            \"amount\": [\n              {\n                \"denom\": \"wei\",\n                \"amount\": \"442524000000000\"\n              }\n            ],\n            \"gas_limit\": \"442524\",\n            \"payer\": \"\",\n            \"granter\": \"\"\n          },\n          \"tip\": null\n        },\n        \"signatures\": [\n          \"DOf7A9h7/Ahpu6M2+o8LUGEsI89FJnEb+iL63x6OHqEVgcKiHDkSxEVORhPoO/vnRSygKGhX7KdPlb1nKLOImAE=\"\n        ]\n      },\n      \"timestamp\": \"2024-03-07T22:01:52Z\",\n      \"events\": [\n        {\n          \"type\": \"coin_spent\",\n          \"attributes\": [\n            {\n              \"key\": \"spender\",\n              \"value\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n              \"index\": true\n            },\n            {\n              \"key\": \"amount\",\n              \"value\": \"442524000000000wei\",\n              \"index\": true\n            }\n          ]\n        },\n        {\n          \"type\": \"coin_received\",\n          \"attributes\": [\n            {\n              \"key\": \"receiver\",\n              \"value\": \"st17xpfvakm2amg962yls6f84z3kell8c5lv5hj2q\",\n              \"index\": true\n            },\n            {\n              \"key\": \"amount\",\n              \"value\": \"442524000000000wei\",\n              \"index\": true\n            }\n          ]\n        },\n        {\n          \"type\": \"transfer\",\n          \"attributes\": [\n            {\n              \"key\": \"recipient\",\n              \"value\": \"st17xpfvakm2amg962yls6f84z3kell8c5lv5hj2q\",\n              \"index\": true\n            },\n            {\n              \"key\": \"sender\",\n              \"value\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n              \"index\": true\n            },\n            {\n              \"key\": \"amount\",\n              \"value\": \"442524000000000wei\",\n              \"index\": true\n            }\n          ]\n        },\n        {\n          \"type\": \"message\",\n          \"attributes\": [\n            {\n              \"key\": \"sender\",\n              \"value\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n              \"index\": true\n            }\n          ]\n        },\n        {\n          \"type\": \"tx\",\n          \"attributes\": [\n            {\n              \"key\": \"fee\",\n              \"value\": \"442524000000000wei\",\n              \"index\": true\n            },\n            {\n              \"key\": \"fee_payer\",\n              \"value\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n              \"index\": true\n            }\n          ]\n        },\n        {\n          \"type\": \"tx\",\n          \"attributes\": [\n            {\n              \"key\": \"acc_seq\",\n              \"value\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m/4\",\n              \"index\": true\n            }\n          ]\n        },\n        {\n          \"type\": \"tx\",\n          \"attributes\": [\n            {\n              \"key\": \"signature\",\n              \"value\": \"DOf7A9h7/Ahpu6M2+o8LUGEsI89FJnEb+iL63x6OHqEVgcKiHDkSxEVORhPoO/vnRSygKGhX7KdPlb1nKLOImAE=\",\n              \"index\": true\n            }\n          ]\n        },\n        {\n          \"type\": \"message\",\n          \"attributes\": [\n            {\n              \"key\": \"action\",\n              \"value\": \"/cosmos.bank.v1beta1.MsgSend\",\n              \"index\": true\n            },\n            {\n              \"key\": \"sender\",\n              \"value\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n              \"index\": true\n            },\n            {\n              \"key\": \"module\",\n              \"value\": \"bank\",\n              \"index\": true\n            }\n          ]\n        },\n        {\n          \"type\": \"coin_spent\",\n          \"attributes\": [\n            {\n              \"key\": \"spender\",\n              \"value\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n              \"index\": true\n            },\n            {\n              \"key\": \"amount\",\n              \"value\": \"10000000000000000000wei\",\n              \"index\": true\n            }\n          ]\n        },\n        {\n          \"type\": \"coin_received\",\n          \"attributes\": [\n            {\n              \"key\": \"receiver\",\n              \"value\": \"st19tgvkz4d4uqv68ahn90vc4mhuh63g2l7u4ad6l\",\n              \"index\": true\n            },\n            {\n              \"key\": \"amount\",\n              \"value\": \"10000000000000000000wei\",\n              \"index\": true\n            }\n          ]\n        },\n        {\n          \"type\": \"transfer\",\n          \"attributes\": [\n            {\n              \"key\": \"recipient\",\n              \"value\": \"st19tgvkz4d4uqv68ahn90vc4mhuh63g2l7u4ad6l\",\n              \"index\": true\n            },\n            {\n              \"key\": \"sender\",\n              \"value\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n              \"index\": true\n            },\n            {\n              \"key\": \"amount\",\n              \"value\": \"10000000000000000000wei\",\n              \"index\": true\n            }\n          ]\n        },\n        {\n          \"type\": \"message\",\n          \"attributes\": [\n            {\n              \"key\": \"sender\",\n              \"value\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n              \"index\": true\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"pagination\": null,\n  \"total\": \"1\"\n}\n</code></pre> <p></p> <code>GET /cosmos/tx/v1beta1/txs/{hash}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 fetches a tx by hash.  Request Example: <pre><code>https://rest.thestratos.org/cosmos/tx/v1beta1/txs/34E401829F23098FEA1F7B398CD9842A6010249F7720BAF1916A14077C97B3E7\n</code></pre> Response Example: <pre><code>{\n  \"tx\": {\n    \"body\": {\n      \"messages\": [\n        {\n          \"@type\": \"/cosmos.bank.v1beta1.MsgSend\",\n          \"from_address\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n          \"to_address\": \"st19tgvkz4d4uqv68ahn90vc4mhuh63g2l7u4ad6l\",\n          \"amount\": [\n            {\n              \"denom\": \"wei\",\n              \"amount\": \"10000000000000000000\"\n            }\n          ]\n        }\n      ],\n      \"memo\": \"\",\n      \"timeout_height\": \"0\",\n      \"extension_options\": [],\n      \"non_critical_extension_options\": []\n    },\n    \"auth_info\": {\n      \"signer_infos\": [\n        {\n          \"public_key\": {\n            \"@type\": \"/stratos.crypto.v1.ethsecp256k1.PubKey\",\n            \"key\": \"A0GU+d2Ut1t6dOEF+Ln+ZA9oNdjh8vTHhWb788TOCIUr\"\n          },\n          \"mode_info\": {\n            \"single\": {\n              \"mode\": \"SIGN_MODE_DIRECT\"\n            }\n          },\n          \"sequence\": \"4\"\n        }\n      ],\n      \"fee\": {\n        \"amount\": [\n          {\n            \"denom\": \"wei\",\n            \"amount\": \"442524000000000\"\n          }\n        ],\n        \"gas_limit\": \"442524\",\n        \"payer\": \"\",\n        \"granter\": \"\"\n      },\n      \"tip\": null\n    },\n    \"signatures\": [\n      \"DOf7A9h7/Ahpu6M2+o8LUGEsI89FJnEb+iL63x6OHqEVgcKiHDkSxEVORhPoO/vnRSygKGhX7KdPlb1nKLOImAE=\"\n    ]\n  },\n  \"tx_response\": {\n    \"height\": \"557\",\n    \"txhash\": \"34E401829F23098FEA1F7B398CD9842A6010249F7720BAF1916A14077C97B3E7\",\n    \"codespace\": \"\",\n    \"code\": 0,\n    \"data\": \"12260A242F636F736D6F732E62616E6B2E763162657461312E4D736753656E64526573706F6E7365\",\n    \"raw_log\": \"[{\\\"msg_index\\\":0,\\\"events\\\":[{\\\"type\\\":\\\"message\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"action\\\",\\\"value\\\":\\\"/cosmos.bank.v1beta1.MsgSend\\\"},{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\\\"},{\\\"key\\\":\\\"module\\\",\\\"value\\\":\\\"bank\\\"}]},{\\\"type\\\":\\\"coin_spent\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"spender\\\",\\\"value\\\":\\\"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"10000000000000000000wei\\\"}]},{\\\"type\\\":\\\"coin_received\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"receiver\\\",\\\"value\\\":\\\"st19tgvkz4d4uqv68ahn90vc4mhuh63g2l7u4ad6l\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"10000000000000000000wei\\\"}]},{\\\"type\\\":\\\"transfer\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"recipient\\\",\\\"value\\\":\\\"st19tgvkz4d4uqv68ahn90vc4mhuh63g2l7u4ad6l\\\"},{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\\\"},{\\\"key\\\":\\\"amount\\\",\\\"value\\\":\\\"10000000000000000000wei\\\"}]},{\\\"type\\\":\\\"message\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"sender\\\",\\\"value\\\":\\\"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\\\"}]}]}]\",\n    \"logs\": [\n      {\n        \"msg_index\": 0,\n        \"log\": \"\",\n        \"events\": [\n          {\n            \"type\": \"message\",\n            \"attributes\": [\n              {\n                \"key\": \"action\",\n                \"value\": \"/cosmos.bank.v1beta1.MsgSend\"\n              },\n              {\n                \"key\": \"sender\",\n                \"value\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\"\n              },\n              {\n                \"key\": \"module\",\n                \"value\": \"bank\"\n              }\n            ]\n          },\n          {\n            \"type\": \"coin_spent\",\n            \"attributes\": [\n              {\n                \"key\": \"spender\",\n                \"value\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\"\n              },\n              {\n                \"key\": \"amount\",\n                \"value\": \"10000000000000000000wei\"\n              }\n            ]\n          },\n          {\n            \"type\": \"coin_received\",\n            \"attributes\": [\n              {\n                \"key\": \"receiver\",\n                \"value\": \"st19tgvkz4d4uqv68ahn90vc4mhuh63g2l7u4ad6l\"\n              },\n              {\n                \"key\": \"amount\",\n                \"value\": \"10000000000000000000wei\"\n              }\n            ]\n          },\n          {\n            \"type\": \"transfer\",\n            \"attributes\": [\n              {\n                \"key\": \"recipient\",\n                \"value\": \"st19tgvkz4d4uqv68ahn90vc4mhuh63g2l7u4ad6l\"\n              },\n              {\n                \"key\": \"sender\",\n                \"value\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\"\n              },\n              {\n                \"key\": \"amount\",\n                \"value\": \"10000000000000000000wei\"\n              }\n            ]\n          },\n          {\n            \"type\": \"message\",\n            \"attributes\": [\n              {\n                \"key\": \"sender\",\n                \"value\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\"\n              }\n            ]\n          }\n        ]\n      }\n    ],\n    \"info\": \"\",\n    \"gas_wanted\": \"442524\",\n    \"gas_used\": \"431655\",\n    \"tx\": {\n      \"@type\": \"/cosmos.tx.v1beta1.Tx\",\n      \"body\": {\n        \"messages\": [\n          {\n            \"@type\": \"/cosmos.bank.v1beta1.MsgSend\",\n            \"from_address\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n            \"to_address\": \"st19tgvkz4d4uqv68ahn90vc4mhuh63g2l7u4ad6l\",\n            \"amount\": [\n              {\n                \"denom\": \"wei\",\n                \"amount\": \"10000000000000000000\"\n              }\n            ]\n          }\n        ],\n        \"memo\": \"\",\n        \"timeout_height\": \"0\",\n        \"extension_options\": [],\n        \"non_critical_extension_options\": []\n      },\n      \"auth_info\": {\n        \"signer_infos\": [\n          {\n            \"public_key\": {\n              \"@type\": \"/stratos.crypto.v1.ethsecp256k1.PubKey\",\n              \"key\": \"A0GU+d2Ut1t6dOEF+Ln+ZA9oNdjh8vTHhWb788TOCIUr\"\n            },\n            \"mode_info\": {\n              \"single\": {\n                \"mode\": \"SIGN_MODE_DIRECT\"\n              }\n            },\n            \"sequence\": \"4\"\n          }\n        ],\n        \"fee\": {\n          \"amount\": [\n            {\n              \"denom\": \"wei\",\n              \"amount\": \"442524000000000\"\n            }\n          ],\n          \"gas_limit\": \"442524\",\n          \"payer\": \"\",\n          \"granter\": \"\"\n        },\n        \"tip\": null\n      },\n      \"signatures\": [\n        \"DOf7A9h7/Ahpu6M2+o8LUGEsI89FJnEb+iL63x6OHqEVgcKiHDkSxEVORhPoO/vnRSygKGhX7KdPlb1nKLOImAE=\"\n      ]\n    },\n    \"timestamp\": \"2024-03-07T22:01:52Z\",\n    \"events\": [\n      {\n        \"type\": \"coin_spent\",\n        \"attributes\": [\n          {\n            \"key\": \"spender\",\n            \"value\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n            \"index\": true\n          },\n          {\n            \"key\": \"amount\",\n            \"value\": \"442524000000000wei\",\n            \"index\": true\n          }\n        ]\n      },\n      {\n        \"type\": \"coin_received\",\n        \"attributes\": [\n          {\n            \"key\": \"receiver\",\n            \"value\": \"st17xpfvakm2amg962yls6f84z3kell8c5lv5hj2q\",\n            \"index\": true\n          },\n          {\n            \"key\": \"amount\",\n            \"value\": \"442524000000000wei\",\n            \"index\": true\n          }\n        ]\n      },\n      {\n        \"type\": \"transfer\",\n        \"attributes\": [\n          {\n            \"key\": \"recipient\",\n            \"value\": \"st17xpfvakm2amg962yls6f84z3kell8c5lv5hj2q\",\n            \"index\": true\n          },\n          {\n            \"key\": \"sender\",\n            \"value\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n            \"index\": true\n          },\n          {\n            \"key\": \"amount\",\n            \"value\": \"442524000000000wei\",\n            \"index\": true\n          }\n        ]\n      },\n      {\n        \"type\": \"message\",\n        \"attributes\": [\n          {\n            \"key\": \"sender\",\n            \"value\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n            \"index\": true\n          }\n        ]\n      },\n      {\n        \"type\": \"tx\",\n        \"attributes\": [\n          {\n            \"key\": \"fee\",\n            \"value\": \"442524000000000wei\",\n            \"index\": true\n          },\n          {\n            \"key\": \"fee_payer\",\n            \"value\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n            \"index\": true\n          }\n        ]\n      },\n      {\n        \"type\": \"tx\",\n        \"attributes\": [\n          {\n            \"key\": \"acc_seq\",\n            \"value\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m/4\",\n            \"index\": true\n          }\n        ]\n      },\n      {\n        \"type\": \"tx\",\n        \"attributes\": [\n          {\n            \"key\": \"signature\",\n            \"value\": \"DOf7A9h7/Ahpu6M2+o8LUGEsI89FJnEb+iL63x6OHqEVgcKiHDkSxEVORhPoO/vnRSygKGhX7KdPlb1nKLOImAE=\",\n            \"index\": true\n          }\n        ]\n      },\n      {\n        \"type\": \"message\",\n        \"attributes\": [\n          {\n            \"key\": \"action\",\n            \"value\": \"/cosmos.bank.v1beta1.MsgSend\",\n            \"index\": true\n          },\n          {\n            \"key\": \"sender\",\n            \"value\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n            \"index\": true\n          },\n          {\n            \"key\": \"module\",\n            \"value\": \"bank\",\n            \"index\": true\n          }\n        ]\n      },\n      {\n        \"type\": \"coin_spent\",\n        \"attributes\": [\n          {\n            \"key\": \"spender\",\n            \"value\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n            \"index\": true\n          },\n          {\n            \"key\": \"amount\",\n            \"value\": \"10000000000000000000wei\",\n            \"index\": true\n          }\n        ]\n      },\n      {\n        \"type\": \"coin_received\",\n        \"attributes\": [\n          {\n            \"key\": \"receiver\",\n            \"value\": \"st19tgvkz4d4uqv68ahn90vc4mhuh63g2l7u4ad6l\",\n            \"index\": true\n          },\n          {\n            \"key\": \"amount\",\n            \"value\": \"10000000000000000000wei\",\n            \"index\": true\n          }\n        ]\n      },\n      {\n        \"type\": \"transfer\",\n        \"attributes\": [\n          {\n            \"key\": \"recipient\",\n            \"value\": \"st19tgvkz4d4uqv68ahn90vc4mhuh63g2l7u4ad6l\",\n            \"index\": true\n          },\n          {\n            \"key\": \"sender\",\n            \"value\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n            \"index\": true\n          },\n          {\n            \"key\": \"amount\",\n            \"value\": \"10000000000000000000wei\",\n            \"index\": true\n          }\n        ]\n      },\n      {\n        \"type\": \"message\",\n        \"attributes\": [\n          {\n            \"key\": \"sender\",\n            \"value\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n            \"index\": true\n          }\n        ]\n      }\n    ]\n  }\n}\n</code></pre> <p></p>"},{"location":"docs-stratos-chain/stratos-chain-rest-apis/#register","title":"Register","text":"<code> GET /stratos/register/v1/resource_node/{nodeAddress} </code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries info of a registered resource node   Request Example: <pre><code>https://rest.thestratos.org/stratos/register/v1/resource_node/stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\n</code></pre> Response Example: <pre><code>{\n  \"node\": {\n    \"network_address\": \"stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\",\n    \"pubkey\": {\n      \"@type\": \"/cosmos.crypto.ed25519.PubKey\",\n      \"key\": \"2OAeLO0+KrBkSxuFKU1ofJqGb4RtA8GpD8XCZlMYw2A=\"\n    },\n    \"suspend\": true,\n    \"status\": \"BOND_STATUS_BONDED\",\n    \"tokens\": \"1000000000000000000\",\n    \"owner_address\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n    \"description\": {\n      \"moniker\": \"resource-node0\",\n      \"identity\": \"\",\n      \"website\": \"\",\n      \"security_contact\": \"\",\n      \"details\": \"\"\n    },\n    \"creation_time\": \"2024-03-08T19:18:51.591341919Z\",\n    \"node_type\": 4,\n    \"effective_tokens\": \"0\",\n    \"beneficiary_address\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\"\n  }\n}\n</code></pre> <code> GET /stratos/register/v1/meta_node/{nodeAddress}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 returns info of a registered meta node  Request Example: <pre><code>https://rest.thestratos.org/stratos/register/v1/meta_node/stsds1cw8qhgsxddak8hh8gs7veqmy5ku8f8za6qlq64\n</code></pre> Response Example: <pre><code>{\n  \"node\": {\n    \"network_address\": \"stsds1cw8qhgsxddak8hh8gs7veqmy5ku8f8za6qlq64\",\n    \"pubkey\": {\n      \"@type\": \"/cosmos.crypto.ed25519.PubKey\",\n      \"key\": \"ltODy8zL5IjJwCutlIexqlBb3GH0+aHZOrpT7f/aKnQ=\"\n    },\n    \"suspend\": false,\n    \"status\": \"BOND_STATUS_BONDED\",\n    \"tokens\": \"100000000000000000000\",\n    \"owner_address\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n    \"description\": {\n      \"moniker\": \"snode://stsds1cw8qhgsxddak8hh8gs7veqmy5ku8f8za6qlq64@127.0.0.1:8888\",\n      \"identity\": \"\",\n      \"website\": \"\",\n      \"security_contact\": \"\",\n      \"details\": \"\"\n    },\n    \"creation_time\": \"0001-01-01T00:00:00Z\",\n    \"beneficiary_address\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\"\n  }\n}\n</code></pre> <code> GET /stratos/register/v1/deposit_total</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries total deposit state of all registered resource nodes and meta nodes  Request Example: <pre><code>https://rest.thestratos.org/stratos/register/v1/deposit_total\n</code></pre> Response Example: <pre><code>{\n  \"resource_nodes_total_deposit\": {\n    \"denom\": \"wei\",\n    \"amount\": \"1000000000000000000\"\n  },\n  \"meta_nodes_total_deposit\": {\n    \"denom\": \"wei\",\n    \"amount\": \"400000000000000000000\"\n  },\n  \"total_bonded_deposit\": {\n    \"denom\": \"wei\",\n    \"amount\": \"401000000000000000000\"\n  },\n  \"total_unbonded_deposit\": {\n    \"denom\": \"wei\",\n    \"amount\": \"0\"\n  },\n  \"total_unbonding_deposit\": {\n    \"denom\": \"wei\",\n    \"amount\": \"0\"\n  }\n}\n</code></pre> <code> GET /stratos/register/v1/deposit_by_node/{network_addr}/{query_type}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries deposit info of a specific node  Request Example:  <pre><code>+ query_type      query_type defines which type of node to query for, can be one of 0 (all) | 1 (meta-node) | 2 (resource-node).\n</code></pre> <pre><code>https://rest.thestratos.org/stratos/register/v1/deposit_by_node/stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv/0\n</code></pre> Response Example: <pre><code>{\n  \"deposit_info\": {\n    \"network_address\": \"stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\",\n    \"pubkey\": {\n      \"@type\": \"/cosmos.crypto.ed25519.PubKey\",\n      \"key\": \"2OAeLO0+KrBkSxuFKU1ofJqGb4RtA8GpD8XCZlMYw2A=\"\n    },\n    \"suspend\": true,\n    \"status\": \"BOND_STATUS_BONDED\",\n    \"tokens\": \"1000000000000000000\",\n    \"owner_address\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n    \"description\": {\n      \"moniker\": \"resource-node0\",\n      \"identity\": \"\",\n      \"website\": \"\",\n      \"security_contact\": \"\",\n      \"details\": \"\"\n    },\n    \"creation_time\": \"2024-03-08T19:18:51.591341919Z\",\n    \"node_type\": 4,\n    \"bonded_deposit\": {\n      \"denom\": \"wei\",\n      \"amount\": \"1000000000000000000\"\n    },\n    \"un_bonding_deposit\": {\n      \"denom\": \"wei\",\n      \"amount\": \"0\"\n    },\n    \"un_bonded_deposit\": {\n      \"denom\": \"wei\",\n      \"amount\": \"0\"\n    }\n  }\n}\n</code></pre> <code> GET /stratos/register/v1/deposit_by_owner/{owner_addr}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries all deposit info of a specific owner  Request Example: <pre><code>https://rest.thestratos.org/stratos/register/v1/deposit_by_owner/st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\n</code></pre> Response Example: <pre><code>{\n  \"deposit_infos\": [\n    {\n      \"network_address\": \"stsds1gl9ywg6jdfdgcja70ffum4ectq4fmt26ay4znv\",\n      \"pubkey\": {\n        \"@type\": \"/cosmos.crypto.ed25519.PubKey\",\n        \"key\": \"2OAeLO0+KrBkSxuFKU1ofJqGb4RtA8GpD8XCZlMYw2A=\"\n      },\n      \"suspend\": true,\n      \"status\": \"BOND_STATUS_BONDED\",\n      \"tokens\": \"1000000000000000000\",\n      \"owner_address\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n      \"description\": {\n        \"moniker\": \"resource-node0\",\n        \"identity\": \"\",\n        \"website\": \"\",\n        \"security_contact\": \"\",\n        \"details\": \"\"\n      },\n      \"creation_time\": \"2024-03-08T19:18:51.591341919Z\",\n      \"node_type\": 4,\n      \"bonded_deposit\": {\n        \"denom\": \"wei\",\n        \"amount\": \"1000000000000000000\"\n      },\n      \"un_bonding_deposit\": {\n        \"denom\": \"wei\",\n        \"amount\": \"0\"\n      },\n      \"un_bonded_deposit\": {\n        \"denom\": \"wei\",\n        \"amount\": \"0\"\n      }\n    },\n    {\n      \"network_address\": \"stsds1cw8qhgsxddak8hh8gs7veqmy5ku8f8za6qlq64\",\n      \"pubkey\": {\n        \"@type\": \"/cosmos.crypto.ed25519.PubKey\",\n        \"key\": \"ltODy8zL5IjJwCutlIexqlBb3GH0+aHZOrpT7f/aKnQ=\"\n      },\n      \"suspend\": false,\n      \"status\": \"BOND_STATUS_BONDED\",\n      \"tokens\": \"100000000000000000000\",\n      \"owner_address\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n      \"description\": {\n        \"moniker\": \"snode://stsds1cw8qhgsxddak8hh8gs7veqmy5ku8f8za6qlq64@127.0.0.1:8888\",\n        \"identity\": \"\",\n        \"website\": \"\",\n        \"security_contact\": \"\",\n        \"details\": \"\"\n      },\n      \"creation_time\": \"0001-01-01T00:00:00Z\",\n      \"node_type\": 0,\n      \"bonded_deposit\": {\n        \"denom\": \"wei\",\n        \"amount\": \"100000000000000000000\"\n      },\n      \"un_bonding_deposit\": {\n        \"denom\": \"wei\",\n        \"amount\": \"0\"\n      },\n      \"un_bonded_deposit\": {\n        \"denom\": \"wei\",\n        \"amount\": \"0\"\n      }\n    }\n  ],\n  \"pagination\": {\n    \"next_key\": null,\n    \"total\": \"2\"\n  }\n}\n</code></pre> <code> GET /stratos/register/v1/params</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries params of registered module  Request Example: <pre><code>https://rest.thestratos.org/stratos/register/v1/params\n</code></pre> Response Example: <pre><code>{\n  \"params\": {\n    \"bond_denom\": \"wei\",\n    \"unbonding_threashold_time\": \"15552000s\",\n    \"unbonding_completion_time\": \"1209600s\",\n    \"max_entries\": 16,\n    \"resource_node_reg_enabled\": true,\n    \"resource_node_min_deposit\": {\n      \"denom\": \"wei\",\n      \"amount\": \"1000000000000000000\"\n    },\n    \"voting_period\": \"604800s\"\n  }\n}\n</code></pre> <code> GET /stratos/register/v1/resource_node_count</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries total number of bonded resource nodes  Request Example: <pre><code>https://rest.thestratos.org/stratos/register/v1/resource_node_count\n</code></pre> Response Example: <pre><code>{\n  \"number\": \"2\"\n}\n</code></pre> <code> GET /stratos/register/v1/meta_node_count</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries total number of bonded meta nodes  Request Example: <pre><code>https://rest.thestratos.org/stratos/register/v1/meta_node_count\n</code></pre> Response Example: <pre><code>{\n  \"number\": \"4\"\n}\n</code></pre> <code> GET /stratos/register/v1/remaining_ozone_limit</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries remaining ozone limit  Request Example: <pre><code>https://rest.thestratos.org/stratos/register/v1/remaining_ozone_limit\n</code></pre> Response Example: <pre><code>{\n  \"ozone_limit\": \"400000000000000\"\n}\n</code></pre>"},{"location":"docs-stratos-chain/stratos-chain-rest-apis/#proof-of-traffic-pot","title":"Proof of Traffic (PoT)","text":"<code> GET /stratos/pot/v1/volume_report/{epoch}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries Pot volume report info at a specific epoch  Request Example: <pre><code>https://rest.thestratos.org/stratos/pot/v1/volume_report/1\n</code></pre> Response Example: <pre><code>{\n  \"report_info\": {\n    \"epoch\": \"1\",\n    \"reference\": \"100A1FC0B82DD3B0353B59E90388EEA2B73DEECA872955B414EBC99ECD3E3C1F\",\n    \"tx_hash\": \"7F51147DB44185A1A4DC572EC0C69DEA6E9495DDCDF27CD46CA27935D4B93943\",\n    \"reporter\": \"stsds1cw8qhgsxddak8hh8gs7veqmy5ku8f8za6qlq64\"\n  }\n}\n</code></pre> <code> GET /stratos/pot/v1/rewards/epoch/{epoch}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries all rewards info at a specific epoch  Request Example: <pre><code>https://rest.thestratos.org/stratos/pot/v1/rewards/epoch/1?pagination.limit=2\n</code></pre> Response Example: <pre><code>{\n  \"rewards\": [\n    {\n      \"wallet_address\": \"st1rwnmgk0x2n2wry876dkxq2hhcce8k7kzspppax\",\n      \"reward_from_mining_pool\": [\n        {\n          \"denom\": \"wei\",\n          \"amount\": \"4000000000000000000\"\n        }\n      ],\n      \"reward_from_traffic_pool\": [\n        {\n          \"denom\": \"wei\",\n          \"amount\": \"25740279520266\"\n        }\n      ]\n    },\n    {\n      \"wallet_address\": \"st1k9hfqps9s2tpnfxch2avvevyvtry0zth39gdzc\",\n      \"reward_from_mining_pool\": [\n        {\n          \"denom\": \"wei\",\n          \"amount\": \"4000000000000000000\"\n        }\n      ],\n      \"reward_from_traffic_pool\": [\n        {\n          \"denom\": \"wei\",\n          \"amount\": \"25740279520266\"\n        }\n      ]\n    }\n  ],\n  \"pagination\": {\n    \"next_key\": \"y0JUWCEwpMwgs3XzfSwlHBHU9Xg=\",\n    \"total\": \"0\"\n  }\n}\n</code></pre> <code> GET /stratos/pot/v1/rewards/wallet/{wallet_address}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries latest Pot rewards by beneficiary address  Request Example: <pre><code>https://rest.thestratos.org/stratos/pot/v1/rewards/wallet/st1rwnmgk0x2n2wry876dkxq2hhcce8k7kzspppax\n</code></pre> Response Example: <pre><code>{\n  \"rewards\": {\n    \"wallet_address\": \"st1rwnmgk0x2n2wry876dkxq2hhcce8k7kzspppax\",\n    \"mature_total_reward\": [],\n    \"immature_total_reward\": [\n      {\n        \"denom\": \"wei\",\n        \"amount\": \"16000257399827064713\"\n      }\n    ]\n  }\n}\n</code></pre> <code> GET /stratos/pot/v1/rewards/wallet/{wallet_address}/epoch/{epoch}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries Pot rewards info by beneficiary address at a specific epoch  Request Example: <pre><code>https://rest.thestratos.org/stratos/pot/v1/rewards/wallet/st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m/epoch/2\n</code></pre> Response Example: <pre><code>{\n  \"rewards\": [\n    {\n      \"wallet_address\": \"st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\",\n      \"reward_from_mining_pool\": [\n        {\n          \"denom\": \"wei\",\n          \"amount\": \"52000000000000000000\"\n        }\n      ],\n      \"reward_from_traffic_pool\": [\n        {\n          \"denom\": \"wei\",\n          \"amount\": \"669244695117639\"\n        }\n      ]\n    }\n  ],\n  \"pagination\": {\n    \"next_key\": null,\n    \"total\": \"0\"\n  }\n}\n</code></pre> <code>GET /stratos/pot/v1/slashing/{wallet_address}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries owner's Pot slashing info at a specific height  Request Example: <pre><code>https://rest.thestratos.org/stratos/pot/v1/slashing/st1edp9gkppxzjvcg9nwheh6tp9rsgafatckfdl6m\n</code></pre> Response Example: <pre><code>{\n  \"slashing\": \"0\"\n}\n</code></pre> <code>GET /stratos/pot/v1/params</code> \u00a0\u00a0\u00a0\u00a0\u00a0 Query params of POT module  Request Example: <pre><code>https://rest.thestratos.org/stratos/pot/v1/params\n</code></pre> Response Example: <pre><code>{\n  \"params\": {\n    \"bond_denom\": \"wei\",\n    \"reward_denom\": \"wei\",\n    \"mature_epoch\": \"2016\",\n    \"mining_reward_params\": [\n      {\n        \"total_mined_valve_start\": {\n          \"denom\": \"wei\",\n          \"amount\": \"0\"\n        },\n        \"total_mined_valve_end\": {\n          \"denom\": \"wei\",\n          \"amount\": \"16819200000000000000000000\"\n        },\n        \"mining_reward\": {\n          \"denom\": \"wei\",\n          \"amount\": \"80000000000000000000\"\n        },\n        \"block_chain_percentage_in_bp\": \"2000\",\n        \"resource_node_percentage_in_bp\": \"6000\",\n        \"meta_node_percentage_in_bp\": \"2000\"\n      },\n      {\n        \"total_mined_valve_start\": {\n          \"denom\": \"wei\",\n          \"amount\": \"16819200000000000000000000\"\n        },\n        \"total_mined_valve_end\": {\n          \"denom\": \"wei\",\n          \"amount\": \"25228800000000000000000000\"\n        },\n        \"mining_reward\": {\n          \"denom\": \"wei\",\n          \"amount\": \"40000000000000000000\"\n        },\n        \"block_chain_percentage_in_bp\": \"2000\",\n        \"resource_node_percentage_in_bp\": \"6200\",\n        \"meta_node_percentage_in_bp\": \"1800\"\n      },\n      {\n        \"total_mined_valve_start\": {\n          \"denom\": \"wei\",\n          \"amount\": \"25228800000000000000000000\"\n        },\n        \"total_mined_valve_end\": {\n          \"denom\": \"wei\",\n          \"amount\": \"29433600000000000000000000\"\n        },\n        \"mining_reward\": {\n          \"denom\": \"wei\",\n          \"amount\": \"20000000000000000000\"\n        },\n        \"block_chain_percentage_in_bp\": \"2000\",\n        \"resource_node_percentage_in_bp\": \"6400\",\n        \"meta_node_percentage_in_bp\": \"1600\"\n      },\n      {\n        \"total_mined_valve_start\": {\n          \"denom\": \"wei\",\n          \"amount\": \"29433600000000000000000000\"\n        },\n        \"total_mined_valve_end\": {\n          \"denom\": \"wei\",\n          \"amount\": \"31536000000000000000000000\"\n        },\n        \"mining_reward\": {\n          \"denom\": \"wei\",\n          \"amount\": \"10000000000000000000\"\n        },\n        \"block_chain_percentage_in_bp\": \"2000\",\n        \"resource_node_percentage_in_bp\": \"6600\",\n        \"meta_node_percentage_in_bp\": \"1400\"\n      },\n      {\n        \"total_mined_valve_start\": {\n          \"denom\": \"wei\",\n          \"amount\": \"31536000000000000000000000\"\n        },\n        \"total_mined_valve_end\": {\n          \"denom\": \"wei\",\n          \"amount\": \"32587200000000000000000000\"\n        },\n        \"mining_reward\": {\n          \"denom\": \"wei\",\n          \"amount\": \"5000000000000000000\"\n        },\n        \"block_chain_percentage_in_bp\": \"2000\",\n        \"resource_node_percentage_in_bp\": \"6800\",\n        \"meta_node_percentage_in_bp\": \"1200\"\n      },\n      {\n        \"total_mined_valve_start\": {\n          \"denom\": \"wei\",\n          \"amount\": \"32587200000000000000000000\"\n        },\n        \"total_mined_valve_end\": {\n          \"denom\": \"wei\",\n          \"amount\": \"40000000000000000000000000\"\n        },\n        \"mining_reward\": {\n          \"denom\": \"wei\",\n          \"amount\": \"2500000000000000000\"\n        },\n        \"block_chain_percentage_in_bp\": \"2000\",\n        \"resource_node_percentage_in_bp\": \"7000\",\n        \"meta_node_percentage_in_bp\": \"1000\"\n      }\n    ],\n    \"community_tax\": \"0.020000000000000000\",\n    \"initial_total_supply\": {\n      \"denom\": \"wei\",\n      \"amount\": \"100000000000000000000000000\"\n    }\n  }\n}\n</code></pre> <code>GET /stratos/pot/v1/total_mined_token</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries total mined token  Request Example: <pre><code>https://rest.thestratos.org/stratos/pot/v1/total_mined_token\n</code></pre> Response Example: <pre><code>{\n  \"total_mined_token\": {\n    \"denom\": \"wei\",\n    \"amount\": \"320000000000000000000\"\n  }\n}\n</code></pre> <code>GET /stratos/pot/v1/circulation_supply</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries circulation supply  Request Example: <pre><code>https://rest.thestratos.org/stratos/pot/v1/circulation_supply\n</code></pre> Response Example: <pre><code>{\n  \"circulation_supply\": [\n    {\n      \"denom\": \"wei\",\n      \"amount\": \"59999809005253057695198254\"\n    }\n  ]\n}\n</code></pre>"},{"location":"docs-stratos-chain/stratos-chain-rest-apis/#sds","title":"SDS","text":"<code> GET /stratos/sds/v1/file_upload/{file_hash}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 query uploaded file info by hash   Request Example: <pre><code>https://rest.thestratos.org/stratos/sds/v1/file_upload/v05j1m5535t62jdqc57r27gjq2nqcf0o1onavkv8\n</code></pre> Response Example: <pre><code>{\n  \"file_info\": {\n    \"height\": \"235396\",\n    \"reporters\": \"DwAAAAAAAAA=\",\n    \"uploader\": \"st1f58px9ysn9zsnucqtjejakkr8lezmwggq2k6av\"\n  }\n}\n</code></pre> <code> GET /stratos/sds/simPrepay/{amtToPrepay}</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries a simulated prepay result   Request Example: <pre><code>https://rest.thestratos.org/stratos/sds/v1/sim_prepay/1stos\n</code></pre> Response Example: <pre><code>{\n  \"noz\": \"949522847536\"\n}\n</code></pre> <code> GET /stratos/sds/v1/noz_price</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries current nozPrice   Request Example: <pre><code>https://rest.thestratos.org/stratos/sds/v1/noz_price\n</code></pre> Response Example: <pre><code>{\n  \"price\": \"1050598.078251776812024224\"\n}\n</code></pre> <code> GET /stratos/sds/v1/noz_supply</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries current nozSupply   Request Example: <pre><code>https://rest.thestratos.org/stratos/sds/v1/noz_supply\n</code></pre> Response Example: <pre><code>{\n  \"remaining\": \"390248902439025\",\n  \"total\": \"400000000000000\"\n}\n</code></pre> <code> GET /stratos/sds/v1/params</code> \u00a0\u00a0\u00a0\u00a0\u00a0 queries params of SDS module   Request Example: <pre><code>https://rest.thestratos.org/stratos/sds/v1/params\n</code></pre> Response Example: <pre><code>{\n  \"params\": {\n    \"bond_denom\": \"wei\"\n  }\n}\n</code></pre>"}]}